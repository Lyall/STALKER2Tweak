#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_Player_AK74

#include "Basic.hpp"

#include "AnimBP_Player_AK74_classes.hpp"
#include "AnimBP_Player_AK74_parameters.hpp"


namespace SDK
{

// Function AnimBP_Player_AK74.AnimBP_Player_AK74_C.ExecuteUbergraph_AnimBP_Player_AK74
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAnimBP_Player_AK74_C::ExecuteUbergraph_AnimBP_Player_AK74(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimBP_Player_AK74_C", "ExecuteUbergraph_AnimBP_Player_AK74");

	Params::AnimBP_Player_AK74_C_ExecuteUbergraph_AnimBP_Player_AK74 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AnimBP_Player_AK74.AnimBP_Player_AK74_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Idle                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Moving                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Look                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        AnimGraph_0                                            (Parm, OutParm, NoDestructor)

void UAnimBP_Player_AK74_C::AnimGraph(const struct FPoseLink& Idle, const struct FPoseLink& Moving, const struct FPoseLink& Look, struct FPoseLink* AnimGraph_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimBP_Player_AK74_C", "AnimGraph");

	Params::AnimBP_Player_AK74_C_AnimGraph Parms{};

	Parms.Idle = std::move(Idle);
	Parms.Moving = std::move(Moving);
	Parms.Look = std::move(Look);

	UObject::ProcessEvent(Func, &Parms);

	if (AnimGraph_0 != nullptr)
		*AnimGraph_0 = std::move(Parms.AnimGraph_0);
}

}

