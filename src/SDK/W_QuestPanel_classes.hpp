#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_QuestPanel

#include "Basic.hpp"

#include "Stalker2_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_QuestPanel.W_QuestPanel_C
// 0x0048 (0x0418 - 0x03D0)
class UW_QuestPanel_C final : public UPDAQuestPanel
{
public:
	class UW_PDAQuestSlot_C*                      W_PDAQuestSlot;                                    // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PDAQuestSlot_C*                      W_PDAQuestSlot_1;                                  // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PDAQuestSlot_C*                      W_PDAQuestSlot_2;                                  // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PDAQuestSlot_C*                      W_PDAQuestSlot_3;                                  // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PDAQuestSlot_C*                      W_PDAQuestSlot_4;                                  // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PDAQuestSlot_C*                      W_PDAQuestSlot_5;                                  // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PDAQuestSlot_C*                      W_PDAQuestSlot_6;                                  // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PDAQuestSlot_C*                      W_PDAQuestSlot_7;                                  // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PDAQuestSlot_C*                      W_PDAQuestSlot_8;                                  // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_QuestPanel_C">();
	}
	static class UW_QuestPanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_QuestPanel_C>();
	}
};
static_assert(alignof(UW_QuestPanel_C) == 0x000008, "Wrong alignment on UW_QuestPanel_C");
static_assert(sizeof(UW_QuestPanel_C) == 0x000418, "Wrong size on UW_QuestPanel_C");
static_assert(offsetof(UW_QuestPanel_C, W_PDAQuestSlot) == 0x0003D0, "Member 'UW_QuestPanel_C::W_PDAQuestSlot' has a wrong offset!");
static_assert(offsetof(UW_QuestPanel_C, W_PDAQuestSlot_1) == 0x0003D8, "Member 'UW_QuestPanel_C::W_PDAQuestSlot_1' has a wrong offset!");
static_assert(offsetof(UW_QuestPanel_C, W_PDAQuestSlot_2) == 0x0003E0, "Member 'UW_QuestPanel_C::W_PDAQuestSlot_2' has a wrong offset!");
static_assert(offsetof(UW_QuestPanel_C, W_PDAQuestSlot_3) == 0x0003E8, "Member 'UW_QuestPanel_C::W_PDAQuestSlot_3' has a wrong offset!");
static_assert(offsetof(UW_QuestPanel_C, W_PDAQuestSlot_4) == 0x0003F0, "Member 'UW_QuestPanel_C::W_PDAQuestSlot_4' has a wrong offset!");
static_assert(offsetof(UW_QuestPanel_C, W_PDAQuestSlot_5) == 0x0003F8, "Member 'UW_QuestPanel_C::W_PDAQuestSlot_5' has a wrong offset!");
static_assert(offsetof(UW_QuestPanel_C, W_PDAQuestSlot_6) == 0x000400, "Member 'UW_QuestPanel_C::W_PDAQuestSlot_6' has a wrong offset!");
static_assert(offsetof(UW_QuestPanel_C, W_PDAQuestSlot_7) == 0x000408, "Member 'UW_QuestPanel_C::W_PDAQuestSlot_7' has a wrong offset!");
static_assert(offsetof(UW_QuestPanel_C, W_PDAQuestSlot_8) == 0x000410, "Member 'UW_QuestPanel_C::W_PDAQuestSlot_8' has a wrong offset!");

}

