#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_m16_tp

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "AnimBP_m16_tp_structs.hpp"
#include "Stalker2_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_m16_tp.AnimBP_m16_tp_C
// 0x0330 (0x09C0 - 0x0690)
class UAnimBP_m16_tp_C final : public UAnimInstanceHumanFirearm
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0690(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct AnimBP_m16_tp::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0698(0x0005)(HasGetValueTypeHash)
	uint8                                         Pad_69D[0x3];                                      // 0x069D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x06A0(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x06A8(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x06B0(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x06D0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x0718(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_5;                 // 0x0760(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_4;                 // 0x07A0(0x0040)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x07E0(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_3;                 // 0x0828(0x0040)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x0868(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_2;                 // 0x08B0(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x08F0(0x0040)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0930(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x0978(0x0040)()

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_AnimBP_m16_tp(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_m16_tp_C">();
	}
	static class UAnimBP_m16_tp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_m16_tp_C>();
	}
};
static_assert(alignof(UAnimBP_m16_tp_C) == 0x000010, "Wrong alignment on UAnimBP_m16_tp_C");
static_assert(sizeof(UAnimBP_m16_tp_C) == 0x0009C0, "Wrong size on UAnimBP_m16_tp_C");
static_assert(offsetof(UAnimBP_m16_tp_C, UberGraphFrame) == 0x000690, "Member 'UAnimBP_m16_tp_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_m16_tp_C, __AnimBlueprintMutables) == 0x000698, "Member 'UAnimBP_m16_tp_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UAnimBP_m16_tp_C, AnimBlueprintExtension_PropertyAccess) == 0x0006A0, "Member 'UAnimBP_m16_tp_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAnimBP_m16_tp_C, AnimBlueprintExtension_Base) == 0x0006A8, "Member 'UAnimBP_m16_tp_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAnimBP_m16_tp_C, AnimGraphNode_Root) == 0x0006B0, "Member 'UAnimBP_m16_tp_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAnimBP_m16_tp_C, AnimGraphNode_Slot) == 0x0006D0, "Member 'UAnimBP_m16_tp_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UAnimBP_m16_tp_C, AnimGraphNode_BlendListByBool_2) == 0x000718, "Member 'UAnimBP_m16_tp_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_m16_tp_C, AnimGraphNode_SequenceEvaluator_5) == 0x000760, "Member 'UAnimBP_m16_tp_C::AnimGraphNode_SequenceEvaluator_5' has a wrong offset!");
static_assert(offsetof(UAnimBP_m16_tp_C, AnimGraphNode_SequenceEvaluator_4) == 0x0007A0, "Member 'UAnimBP_m16_tp_C::AnimGraphNode_SequenceEvaluator_4' has a wrong offset!");
static_assert(offsetof(UAnimBP_m16_tp_C, AnimGraphNode_BlendListByBool_1) == 0x0007E0, "Member 'UAnimBP_m16_tp_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_m16_tp_C, AnimGraphNode_SequenceEvaluator_3) == 0x000828, "Member 'UAnimBP_m16_tp_C::AnimGraphNode_SequenceEvaluator_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_m16_tp_C, AnimGraphNode_BlendListByEnum) == 0x000868, "Member 'UAnimBP_m16_tp_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UAnimBP_m16_tp_C, AnimGraphNode_SequenceEvaluator_2) == 0x0008B0, "Member 'UAnimBP_m16_tp_C::AnimGraphNode_SequenceEvaluator_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_m16_tp_C, AnimGraphNode_SequenceEvaluator_1) == 0x0008F0, "Member 'UAnimBP_m16_tp_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_m16_tp_C, AnimGraphNode_BlendListByBool) == 0x000930, "Member 'UAnimBP_m16_tp_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UAnimBP_m16_tp_C, AnimGraphNode_SequenceEvaluator) == 0x000978, "Member 'UAnimBP_m16_tp_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");

}

