#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CinematicKeyFrameTracks

#include "Basic.hpp"

#include "MovieScene_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct CinematicKeyFrameTracks.CinematicKeyFrameData
// 0x0024 (0x0024 - 0x0000)
struct FCinematicKeyFrameData final
{
public:
	class FName                                   KeyFrameName;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSkippable;                                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FadeTime;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SkipTimeMultiplier;                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           FadeTargetColor;                                   // 0x0014(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCinematicKeyFrameData) == 0x000004, "Wrong alignment on FCinematicKeyFrameData");
static_assert(sizeof(FCinematicKeyFrameData) == 0x000024, "Wrong size on FCinematicKeyFrameData");
static_assert(offsetof(FCinematicKeyFrameData, KeyFrameName) == 0x000000, "Member 'FCinematicKeyFrameData::KeyFrameName' has a wrong offset!");
static_assert(offsetof(FCinematicKeyFrameData, bSkippable) == 0x000008, "Member 'FCinematicKeyFrameData::bSkippable' has a wrong offset!");
static_assert(offsetof(FCinematicKeyFrameData, FadeTime) == 0x00000C, "Member 'FCinematicKeyFrameData::FadeTime' has a wrong offset!");
static_assert(offsetof(FCinematicKeyFrameData, SkipTimeMultiplier) == 0x000010, "Member 'FCinematicKeyFrameData::SkipTimeMultiplier' has a wrong offset!");
static_assert(offsetof(FCinematicKeyFrameData, FadeTargetColor) == 0x000014, "Member 'FCinematicKeyFrameData::FadeTargetColor' has a wrong offset!");

// ScriptStruct CinematicKeyFrameTracks.CinematicSectionParams
// 0x0034 (0x0034 - 0x0000)
struct FCinematicSectionParams final
{
public:
	uint8                                         Pad_0[0x2C];                                       // 0x0000(0x002C)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UMovieSceneSequencePlayer> SequencerPlayer;                                   // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCinematicSectionParams) == 0x000004, "Wrong alignment on FCinematicSectionParams");
static_assert(sizeof(FCinematicSectionParams) == 0x000034, "Wrong size on FCinematicSectionParams");
static_assert(offsetof(FCinematicSectionParams, SequencerPlayer) == 0x00002C, "Member 'FCinematicSectionParams::SequencerPlayer' has a wrong offset!");

// ScriptStruct CinematicKeyFrameTracks.MovieSceneKeyFrameEventTemplate
// 0x0028 (0x0048 - 0x0020)
struct FMovieSceneKeyFrameEventTemplate final : public FMovieSceneEvalTemplate
{
public:
	struct FCinematicKeyFrameData                 Data;                                              // 0x0020(0x0024)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMovieSceneKeyFrameEventTemplate) == 0x000008, "Wrong alignment on FMovieSceneKeyFrameEventTemplate");
static_assert(sizeof(FMovieSceneKeyFrameEventTemplate) == 0x000048, "Wrong size on FMovieSceneKeyFrameEventTemplate");
static_assert(offsetof(FMovieSceneKeyFrameEventTemplate, Data) == 0x000020, "Member 'FMovieSceneKeyFrameEventTemplate::Data' has a wrong offset!");

}

