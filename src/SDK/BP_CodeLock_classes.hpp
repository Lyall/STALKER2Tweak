#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CodeLock

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Stalker2_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CodeLock.BP_CodeLock_C
// 0x0060 (0x0560 - 0x0500)
class ABP_CodeLock_C final : public ACodelock
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0500(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USignalSenderComponent*                 CodeFailedSignal;                                  // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Mesh;                                           // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   InteractVolume;                                    // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USignalReceiverComponent*               ReceiverOff;                                       // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USignalReceiverComponent*               ReceiverOn;                                        // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USignalSenderComponent*                 CodePassedSignal;                                  // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               LightsMaterial;                                    // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          ButtonClick;                                       // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          CodePassed;                                        // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          CodeFailed;                                        // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_CodeLock_ReceiverOFF_K2Node_ComponentBoundEvent_7_SignalReceiverComponentReceiveSignature__DelegateSignature(class UObject* DataObject);
	void BndEvt__BP_CodeLock_SignalReceiver_K2Node_ComponentBoundEvent_5_SignalReceiverComponentReceiveSignature__DelegateSignature(class UObject* DataObject);
	void ExecuteUbergraph_BP_CodeLock(int32 EntryPoint);
	void OnInputCodeFailed();
	void OnInputCodePassed();
	void OnKeyPressed();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CodeLock_C">();
	}
	static class ABP_CodeLock_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CodeLock_C>();
	}
};
static_assert(alignof(ABP_CodeLock_C) == 0x000010, "Wrong alignment on ABP_CodeLock_C");
static_assert(sizeof(ABP_CodeLock_C) == 0x000560, "Wrong size on ABP_CodeLock_C");
static_assert(offsetof(ABP_CodeLock_C, UberGraphFrame) == 0x000500, "Member 'ABP_CodeLock_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CodeLock_C, Ak) == 0x000508, "Member 'ABP_CodeLock_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_CodeLock_C, CodeFailedSignal) == 0x000510, "Member 'ABP_CodeLock_C::CodeFailedSignal' has a wrong offset!");
static_assert(offsetof(ABP_CodeLock_C, SK_Mesh) == 0x000518, "Member 'ABP_CodeLock_C::SK_Mesh' has a wrong offset!");
static_assert(offsetof(ABP_CodeLock_C, InteractVolume) == 0x000520, "Member 'ABP_CodeLock_C::InteractVolume' has a wrong offset!");
static_assert(offsetof(ABP_CodeLock_C, ReceiverOff) == 0x000528, "Member 'ABP_CodeLock_C::ReceiverOff' has a wrong offset!");
static_assert(offsetof(ABP_CodeLock_C, ReceiverOn) == 0x000530, "Member 'ABP_CodeLock_C::ReceiverOn' has a wrong offset!");
static_assert(offsetof(ABP_CodeLock_C, CodePassedSignal) == 0x000538, "Member 'ABP_CodeLock_C::CodePassedSignal' has a wrong offset!");
static_assert(offsetof(ABP_CodeLock_C, LightsMaterial) == 0x000540, "Member 'ABP_CodeLock_C::LightsMaterial' has a wrong offset!");
static_assert(offsetof(ABP_CodeLock_C, ButtonClick) == 0x000548, "Member 'ABP_CodeLock_C::ButtonClick' has a wrong offset!");
static_assert(offsetof(ABP_CodeLock_C, CodePassed) == 0x000550, "Member 'ABP_CodeLock_C::CodePassed' has a wrong offset!");
static_assert(offsetof(ABP_CodeLock_C, CodeFailed) == 0x000558, "Member 'ABP_CodeLock_C::CodeFailed' has a wrong offset!");

}

