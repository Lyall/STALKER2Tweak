#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_pm_fp

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// ScriptStruct AnimBP_pm_fp.AnimBP_pm_fp_C.AnimBlueprintGeneratedConstantData
// 0x017F (0x0180 - 0x0001)
struct AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData final : public FAnimBlueprintConstantData
{
public:
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   m_NameProperty_154;                                // 0x0004(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      m_AnimSequenceBase_155;                            // 0x0010(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      m_AnimSequenceBase_156;                            // 0x0018(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<float>                                 m_ArrayProperty_157;                               // 0x0020(0x0010)(BlueprintVisible, EditFixedSize)
	TArray<int32>                                 m_ArrayProperty_158;                               // 0x0030(0x0010)(BlueprintVisible)
	class UAnimSequenceBase*                      m_AnimSequenceBase_159;                            // 0x0040(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      m_AnimSequenceBase_160;                            // 0x0048(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      m_AnimSequenceBase_161;                            // 0x0050(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<float>                                 m_ArrayProperty_162;                               // 0x0058(0x0010)(BlueprintVisible, EditFixedSize)
	class UAnimSequenceBase*                      m_AnimSequenceBase_163;                            // 0x0068(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UBlendProfile*                          m_BlendProfile_164;                                // 0x0070(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UCurveFloat*                            m_CurveFloat_165;                                  // 0x0078(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EAlphaBlendOption                             m_EnumProperty_166;                                // 0x0080(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBlendListTransitionType                      m_EnumProperty_167;                                // 0x0081(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 m_ArrayProperty_168;                               // 0x0088(0x0010)(BlueprintVisible, EditFixedSize)
	TArray<int32>                                 m_ArrayProperty_169;                               // 0x0098(0x0010)(BlueprintVisible)
	ESequenceEvalReinit                           m_ByteProperty_170;                                // 0x00A8(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          m_BoolProperty_171;                                // 0x00A9(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_FloatProperty_172;                               // 0x00AC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      m_AnimSequenceBase_173;                            // 0x00B0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          m_BoolProperty_174;                                // 0x00B8(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimSyncMethod                               m_EnumProperty_175;                                // 0x00B9(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimGroupRole                                m_ByteProperty_176;                                // 0x00BA(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB[0x1];                                       // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   m_NameProperty_177;                                // 0x00BC(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNodeFunctionRef                   m_StructProperty_178;                              // 0x00C8(0x0020)(BlueprintVisible, NoDestructor)
	struct FAnimSubsystem_PropertyAccess          AnimBlueprintExtension_PropertyAccess;             // 0x00E8(0x0080)()
	struct FAnimSubsystem_Base                    AnimBlueprintExtension_Base;                       // 0x0168(0x0018)()
};
static_assert(alignof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData) == 0x000008, "Wrong alignment on AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData");
static_assert(sizeof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData) == 0x000180, "Wrong size on AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_NameProperty_154) == 0x000004, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_NameProperty_154' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_AnimSequenceBase_155) == 0x000010, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_AnimSequenceBase_155' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_AnimSequenceBase_156) == 0x000018, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_AnimSequenceBase_156' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_ArrayProperty_157) == 0x000020, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_ArrayProperty_157' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_ArrayProperty_158) == 0x000030, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_ArrayProperty_158' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_AnimSequenceBase_159) == 0x000040, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_AnimSequenceBase_159' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_AnimSequenceBase_160) == 0x000048, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_AnimSequenceBase_160' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_AnimSequenceBase_161) == 0x000050, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_AnimSequenceBase_161' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_ArrayProperty_162) == 0x000058, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_ArrayProperty_162' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_AnimSequenceBase_163) == 0x000068, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_AnimSequenceBase_163' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_BlendProfile_164) == 0x000070, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_BlendProfile_164' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_CurveFloat_165) == 0x000078, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_CurveFloat_165' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_EnumProperty_166) == 0x000080, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_EnumProperty_166' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_EnumProperty_167) == 0x000081, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_EnumProperty_167' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_ArrayProperty_168) == 0x000088, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_ArrayProperty_168' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_ArrayProperty_169) == 0x000098, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_ArrayProperty_169' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_ByteProperty_170) == 0x0000A8, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_ByteProperty_170' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_BoolProperty_171) == 0x0000A9, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_BoolProperty_171' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_FloatProperty_172) == 0x0000AC, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_FloatProperty_172' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_AnimSequenceBase_173) == 0x0000B0, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_AnimSequenceBase_173' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_BoolProperty_174) == 0x0000B8, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_BoolProperty_174' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_EnumProperty_175) == 0x0000B9, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_EnumProperty_175' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_ByteProperty_176) == 0x0000BA, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_ByteProperty_176' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_NameProperty_177) == 0x0000BC, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_NameProperty_177' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, m_StructProperty_178) == 0x0000C8, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::m_StructProperty_178' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, AnimBlueprintExtension_PropertyAccess) == 0x0000E8, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData, AnimBlueprintExtension_Base) == 0x000168, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedConstantData::AnimBlueprintExtension_Base' has a wrong offset!");

// ScriptStruct AnimBP_pm_fp.AnimBP_pm_fp_C.AnimBlueprintGeneratedMutableData
// 0x0013 (0x0014 - 0x0001)
struct AnimBP_pm_fp::FAnimBlueprintGeneratedMutableData final : public FAnimBlueprintMutableData
{
public:
	uint8                                         m_ByteProperty;                                    // 0x0001(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m_FloatProperty_0;                                 // 0x0004(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         m_FloatProperty_1;                                 // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         m_IntProperty_2;                                   // 0x000C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          m_BoolProperty_3;                                  // 0x0010(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         m_ByteProperty_4;                                  // 0x0011(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_pm_fp::FAnimBlueprintGeneratedMutableData) == 0x000004, "Wrong alignment on AnimBP_pm_fp::FAnimBlueprintGeneratedMutableData");
static_assert(sizeof(AnimBP_pm_fp::FAnimBlueprintGeneratedMutableData) == 0x000014, "Wrong size on AnimBP_pm_fp::FAnimBlueprintGeneratedMutableData");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedMutableData, m_ByteProperty) == 0x000001, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedMutableData::m_ByteProperty' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedMutableData, m_FloatProperty_0) == 0x000004, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedMutableData::m_FloatProperty_0' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedMutableData, m_FloatProperty_1) == 0x000008, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedMutableData::m_FloatProperty_1' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedMutableData, m_IntProperty_2) == 0x00000C, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedMutableData::m_IntProperty_2' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedMutableData, m_BoolProperty_3) == 0x000010, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedMutableData::m_BoolProperty_3' has a wrong offset!");
static_assert(offsetof(AnimBP_pm_fp::FAnimBlueprintGeneratedMutableData, m_ByteProperty_4) == 0x000011, "Member 'AnimBP_pm_fp::FAnimBlueprintGeneratedMutableData::m_ByteProperty_4' has a wrong offset!");

}

