#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModioUI

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "Modio_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CommonUI_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "Slate_structs.hpp"
#include "ModioUI_structs.hpp"
#include "ModioUICore_structs.hpp"
#include "ModioUICore_classes.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class ModioUI.ModioCommonActivatableWidget
// 0x0060 (0x0428 - 0x03C8)
class UModioCommonActivatableWidget : public UCommonActivatableWidget
{
public:
	bool                                          bRoutedSetDataSource;                              // 0x03C8(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3C9[0x1F];                                     // 0x03C9(0x001F)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool bIsFocused)> OnFocusChanged;                                    // 0x03E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bAutoBindInputAction;                              // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAutoFocusOnActivation;                            // 0x03F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3FA[0x6];                                      // 0x03FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                DataSource;                                        // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_408[0x20];                                     // 0x0408(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_BindInputActions();
	void BP_ListenForInputAction(class UModioCommonButtonBase* Button, const struct FDataTableRowHandle& InputAction, const class FText& DisplayName, const TDelegate<void()>& OnActionFired);
	void BP_SynchronizeProperties();
	void BP_UnbindInputActions();
	void ClearListeningInputAction(class UModioCommonButtonBase* Button);
	void ClearListeningInputActions();
	void FocusOnDesiredWidget();
	class FString GetRequestIdentifier();
	void OnDataSourceUpdated();
	void OnViewportResized(const struct FVector2D& NewViewportSize);
	void SetDataSource(class UObject* NewDataSource);

	bool GetAutoBindInputAction() const;
	bool GetAutoFocusOnActivation() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonActivatableWidget">();
	}
	static class UModioCommonActivatableWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonActivatableWidget>();
	}
};
static_assert(alignof(UModioCommonActivatableWidget) == 0x000008, "Wrong alignment on UModioCommonActivatableWidget");
static_assert(sizeof(UModioCommonActivatableWidget) == 0x000428, "Wrong size on UModioCommonActivatableWidget");
static_assert(offsetof(UModioCommonActivatableWidget, bRoutedSetDataSource) == 0x0003C8, "Member 'UModioCommonActivatableWidget::bRoutedSetDataSource' has a wrong offset!");
static_assert(offsetof(UModioCommonActivatableWidget, OnFocusChanged) == 0x0003E8, "Member 'UModioCommonActivatableWidget::OnFocusChanged' has a wrong offset!");
static_assert(offsetof(UModioCommonActivatableWidget, bAutoBindInputAction) == 0x0003F8, "Member 'UModioCommonActivatableWidget::bAutoBindInputAction' has a wrong offset!");
static_assert(offsetof(UModioCommonActivatableWidget, bAutoFocusOnActivation) == 0x0003F9, "Member 'UModioCommonActivatableWidget::bAutoFocusOnActivation' has a wrong offset!");
static_assert(offsetof(UModioCommonActivatableWidget, DataSource) == 0x000400, "Member 'UModioCommonActivatableWidget::DataSource' has a wrong offset!");

// Class ModioUI.ModioCommonModDetailsViewBase
// 0x0068 (0x0490 - 0x0428)
class UModioCommonModDetailsViewBase : public UModioCommonActivatableWidget
{
public:
	uint8                                         Pad_428[0x50];                                     // 0x0428(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	class UModioCommonModOperationTrackerUserWidget* ModOperationTrackerUserWidget;                     // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonModOperationTrackerWidget*  ModOperationTrackerWidget;                         // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool IsUserAuthenticated() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModDetailsViewBase">();
	}
	static class UModioCommonModDetailsViewBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModDetailsViewBase>();
	}
};
static_assert(alignof(UModioCommonModDetailsViewBase) == 0x000008, "Wrong alignment on UModioCommonModDetailsViewBase");
static_assert(sizeof(UModioCommonModDetailsViewBase) == 0x000490, "Wrong size on UModioCommonModDetailsViewBase");
static_assert(offsetof(UModioCommonModDetailsViewBase, ModOperationTrackerUserWidget) == 0x000478, "Member 'UModioCommonModDetailsViewBase::ModOperationTrackerUserWidget' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsViewBase, ModOperationTrackerWidget) == 0x000480, "Member 'UModioCommonModDetailsViewBase::ModOperationTrackerWidget' has a wrong offset!");

// Class ModioUI.ModioCommonModDetailsView
// 0x0150 (0x05E0 - 0x0490)
class UModioCommonModDetailsView : public UModioCommonModDetailsViewBase
{
public:
	uint8                                         Pad_490[0x20];                                     // 0x0490(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UModioCommonModDetailsViewStyle> ModioStyle;                                        // 0x04B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  ModNameTextBlock;                                  // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 SubscribeButton;                                   // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 CancelButton;                                      // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 RateUpButton;                                      // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 RateDownButton;                                    // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 ReportButton;                                      // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                                CollectionButton;                                  // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  ModSummaryTextBlock;                               // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  ModFullDescriptionLabelTextBlock;                  // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  ModFullDescriptionTextBlock;                       // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         OperationContainer;                                // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                           ProgressBarContainer;                              // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         StatusContainer;                                   // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonCheckBox*                   InstalledCheckBox;                                 // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonCheckBox*                   EnabledCheckBox;                                   // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  OperationProgressLabelTextBlock;                   // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  OperationProgressTextBlock;                        // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonProgressBar*                OperationProgressBar;                              // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  FileSizeLabelTextBlock;                            // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  FileSizeTextBlock;                                 // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  LastUpdatedLabelTextBlock;                         // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  LastUpdatedTextBlock;                              // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  ReleaseDateLabelTextBlock;                         // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  ReleaseDateTextBlock;                              // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  SubscribersLabelTextBlock;                         // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  SubscribersTextBlock;                              // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  CreatedByLabelTextBlock;                           // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  CreatedByTextBlock;                                // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  TagsLabelTextBlock;                                // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonModTagList*                 TagsWidget;                                        // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonModGalleryView*             ModGalleryView;                                    // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonScrollBox*                  ModioCommonDescriptionScrollBox;                   // 0x05B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  SpeedDetailsTextBlock;                             // 0x05B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                ModDetailsLoader;                                  // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonErrorWithRetryWidget*       ErrorWithRetryWidget;                              // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5D0[0x10];                                     // 0x05D0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ActivateBottomButtonsInputBindings();
	void ActivateTagsInputBindings();
	void ActivateTopButtonsInputBindings();
	void HandleCancelClicked();
	void HandleCollectionClicked();
	void HandleRateDownClicked();
	void HandleRateUpClicked();
	void HandleReportClicked();
	void HandleSubscribeClicked();
	void HandleSwitchEnabledClicked();
	void HideProgress();
	void OnRatingSubmissionComplete(const struct FModioErrorCode& errorCode, EModioRating SubmittedRating);
	void SetStyle(TSubclassOf<class UModioCommonModDetailsViewStyle> InStyle);
	void ShowProgress();
	void ShowStatus();
	void UpdateInputActions();
	void UpdateOperationProgressBytes(const struct FModioUnsigned64& Current, const struct FModioUnsigned64& Total);
	void UpdateOperationProgressPercent(float InPercent);
	void UpdateSpeed(const struct FModioUnsigned64& DeltaBytes, double DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModDetailsView">();
	}
	static class UModioCommonModDetailsView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModDetailsView>();
	}
};
static_assert(alignof(UModioCommonModDetailsView) == 0x000008, "Wrong alignment on UModioCommonModDetailsView");
static_assert(sizeof(UModioCommonModDetailsView) == 0x0005E0, "Wrong size on UModioCommonModDetailsView");
static_assert(offsetof(UModioCommonModDetailsView, ModioStyle) == 0x0004B0, "Member 'UModioCommonModDetailsView::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, ModNameTextBlock) == 0x0004B8, "Member 'UModioCommonModDetailsView::ModNameTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, SubscribeButton) == 0x0004C0, "Member 'UModioCommonModDetailsView::SubscribeButton' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, CancelButton) == 0x0004C8, "Member 'UModioCommonModDetailsView::CancelButton' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, RateUpButton) == 0x0004D0, "Member 'UModioCommonModDetailsView::RateUpButton' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, RateDownButton) == 0x0004D8, "Member 'UModioCommonModDetailsView::RateDownButton' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, ReportButton) == 0x0004E0, "Member 'UModioCommonModDetailsView::ReportButton' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, CollectionButton) == 0x0004E8, "Member 'UModioCommonModDetailsView::CollectionButton' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, ModSummaryTextBlock) == 0x0004F0, "Member 'UModioCommonModDetailsView::ModSummaryTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, ModFullDescriptionLabelTextBlock) == 0x0004F8, "Member 'UModioCommonModDetailsView::ModFullDescriptionLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, ModFullDescriptionTextBlock) == 0x000500, "Member 'UModioCommonModDetailsView::ModFullDescriptionTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, OperationContainer) == 0x000508, "Member 'UModioCommonModDetailsView::OperationContainer' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, ProgressBarContainer) == 0x000510, "Member 'UModioCommonModDetailsView::ProgressBarContainer' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, StatusContainer) == 0x000518, "Member 'UModioCommonModDetailsView::StatusContainer' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, InstalledCheckBox) == 0x000520, "Member 'UModioCommonModDetailsView::InstalledCheckBox' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, EnabledCheckBox) == 0x000528, "Member 'UModioCommonModDetailsView::EnabledCheckBox' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, OperationProgressLabelTextBlock) == 0x000530, "Member 'UModioCommonModDetailsView::OperationProgressLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, OperationProgressTextBlock) == 0x000538, "Member 'UModioCommonModDetailsView::OperationProgressTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, OperationProgressBar) == 0x000540, "Member 'UModioCommonModDetailsView::OperationProgressBar' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, FileSizeLabelTextBlock) == 0x000548, "Member 'UModioCommonModDetailsView::FileSizeLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, FileSizeTextBlock) == 0x000550, "Member 'UModioCommonModDetailsView::FileSizeTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, LastUpdatedLabelTextBlock) == 0x000558, "Member 'UModioCommonModDetailsView::LastUpdatedLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, LastUpdatedTextBlock) == 0x000560, "Member 'UModioCommonModDetailsView::LastUpdatedTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, ReleaseDateLabelTextBlock) == 0x000568, "Member 'UModioCommonModDetailsView::ReleaseDateLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, ReleaseDateTextBlock) == 0x000570, "Member 'UModioCommonModDetailsView::ReleaseDateTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, SubscribersLabelTextBlock) == 0x000578, "Member 'UModioCommonModDetailsView::SubscribersLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, SubscribersTextBlock) == 0x000580, "Member 'UModioCommonModDetailsView::SubscribersTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, CreatedByLabelTextBlock) == 0x000588, "Member 'UModioCommonModDetailsView::CreatedByLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, CreatedByTextBlock) == 0x000590, "Member 'UModioCommonModDetailsView::CreatedByTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, TagsLabelTextBlock) == 0x000598, "Member 'UModioCommonModDetailsView::TagsLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, TagsWidget) == 0x0005A0, "Member 'UModioCommonModDetailsView::TagsWidget' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, ModGalleryView) == 0x0005A8, "Member 'UModioCommonModDetailsView::ModGalleryView' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, ModioCommonDescriptionScrollBox) == 0x0005B0, "Member 'UModioCommonModDetailsView::ModioCommonDescriptionScrollBox' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, SpeedDetailsTextBlock) == 0x0005B8, "Member 'UModioCommonModDetailsView::SpeedDetailsTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, ModDetailsLoader) == 0x0005C0, "Member 'UModioCommonModDetailsView::ModDetailsLoader' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsView, ErrorWithRetryWidget) == 0x0005C8, "Member 'UModioCommonModDetailsView::ErrorWithRetryWidget' has a wrong offset!");

// Class ModioUI.ModioCommonSearchTabViewStyle
// 0x0038 (0x0060 - 0x0028)
class UModioCommonSearchTabViewStyle final : public UObject
{
public:
	TSubclassOf<class UModioCommonBorderStyle>    InternalBackgroundBorderStyle;                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonBorderStyle>    OverlayBackgroundBorderStyle;                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      SearchTabTitleTextStyle;                           // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonEditableTextBoxStyle> SearchTextBoxStyle;                                // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    CloseButtonStyle;                                  // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    ResetButtonStyle;                                  // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    SearchButtonStyle;                                 // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonSearchTabViewStyle">();
	}
	static class UModioCommonSearchTabViewStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonSearchTabViewStyle>();
	}
};
static_assert(alignof(UModioCommonSearchTabViewStyle) == 0x000008, "Wrong alignment on UModioCommonSearchTabViewStyle");
static_assert(sizeof(UModioCommonSearchTabViewStyle) == 0x000060, "Wrong size on UModioCommonSearchTabViewStyle");
static_assert(offsetof(UModioCommonSearchTabViewStyle, InternalBackgroundBorderStyle) == 0x000028, "Member 'UModioCommonSearchTabViewStyle::InternalBackgroundBorderStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchTabViewStyle, OverlayBackgroundBorderStyle) == 0x000030, "Member 'UModioCommonSearchTabViewStyle::OverlayBackgroundBorderStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchTabViewStyle, SearchTabTitleTextStyle) == 0x000038, "Member 'UModioCommonSearchTabViewStyle::SearchTabTitleTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchTabViewStyle, SearchTextBoxStyle) == 0x000040, "Member 'UModioCommonSearchTabViewStyle::SearchTextBoxStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchTabViewStyle, CloseButtonStyle) == 0x000048, "Member 'UModioCommonSearchTabViewStyle::CloseButtonStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchTabViewStyle, ResetButtonStyle) == 0x000050, "Member 'UModioCommonSearchTabViewStyle::ResetButtonStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchTabViewStyle, SearchButtonStyle) == 0x000058, "Member 'UModioCommonSearchTabViewStyle::SearchButtonStyle' has a wrong offset!");

// Class ModioUI.ModioCommonModDetailsViewStyle
// 0x0078 (0x00A0 - 0x0028)
class UModioCommonModDetailsViewStyle final : public UObject
{
public:
	TSubclassOf<class UModioCommonModGalleryViewStyle> ModGalleryViewStyle;                               // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      ModNameTextStyle;                                  // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    SubscribeButtonStyle;                              // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    CancelButtonStyle;                                 // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    RateUpButtonStyle;                                 // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    RateDownButtonStyle;                               // 0x0050(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    ReportButtonStyle;                                 // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      ModSummaryTextStyle;                               // 0x0060(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      ModFullDescriptionLabelTextStyle;                  // 0x0068(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      ModFullDescriptionTextStyle;                       // 0x0070(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      DownloadProgressLabelTextStyle;                    // 0x0078(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      DownloadProgressTextStyle;                         // 0x0080(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonProgressBarStyle> DownloadProgressBarStyle;                          // 0x0088(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      StatsLabelTextStyle;                               // 0x0090(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      StatsTextStyle;                                    // 0x0098(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModDetailsViewStyle">();
	}
	static class UModioCommonModDetailsViewStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModDetailsViewStyle>();
	}
};
static_assert(alignof(UModioCommonModDetailsViewStyle) == 0x000008, "Wrong alignment on UModioCommonModDetailsViewStyle");
static_assert(sizeof(UModioCommonModDetailsViewStyle) == 0x0000A0, "Wrong size on UModioCommonModDetailsViewStyle");
static_assert(offsetof(UModioCommonModDetailsViewStyle, ModGalleryViewStyle) == 0x000028, "Member 'UModioCommonModDetailsViewStyle::ModGalleryViewStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsViewStyle, ModNameTextStyle) == 0x000030, "Member 'UModioCommonModDetailsViewStyle::ModNameTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsViewStyle, SubscribeButtonStyle) == 0x000038, "Member 'UModioCommonModDetailsViewStyle::SubscribeButtonStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsViewStyle, CancelButtonStyle) == 0x000040, "Member 'UModioCommonModDetailsViewStyle::CancelButtonStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsViewStyle, RateUpButtonStyle) == 0x000048, "Member 'UModioCommonModDetailsViewStyle::RateUpButtonStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsViewStyle, RateDownButtonStyle) == 0x000050, "Member 'UModioCommonModDetailsViewStyle::RateDownButtonStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsViewStyle, ReportButtonStyle) == 0x000058, "Member 'UModioCommonModDetailsViewStyle::ReportButtonStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsViewStyle, ModSummaryTextStyle) == 0x000060, "Member 'UModioCommonModDetailsViewStyle::ModSummaryTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsViewStyle, ModFullDescriptionLabelTextStyle) == 0x000068, "Member 'UModioCommonModDetailsViewStyle::ModFullDescriptionLabelTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsViewStyle, ModFullDescriptionTextStyle) == 0x000070, "Member 'UModioCommonModDetailsViewStyle::ModFullDescriptionTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsViewStyle, DownloadProgressLabelTextStyle) == 0x000078, "Member 'UModioCommonModDetailsViewStyle::DownloadProgressLabelTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsViewStyle, DownloadProgressTextStyle) == 0x000080, "Member 'UModioCommonModDetailsViewStyle::DownloadProgressTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsViewStyle, DownloadProgressBarStyle) == 0x000088, "Member 'UModioCommonModDetailsViewStyle::DownloadProgressBarStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsViewStyle, StatsLabelTextStyle) == 0x000090, "Member 'UModioCommonModDetailsViewStyle::StatsLabelTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModDetailsViewStyle, StatsTextStyle) == 0x000098, "Member 'UModioCommonModDetailsViewStyle::StatsTextStyle' has a wrong offset!");

// Class ModioUI.ModioCommonActionBar
// 0x0000 (0x0428 - 0x0428)
class UModioCommonActionBar final : public UModioCommonActivatableWidget
{
public:
	void HandleBoundActionsUpdated(bool bFromOwningPlayer);
	void HandleDeferredDisplayUpdate();
	void HandlePlayerAdded(int32 PlayerIdx);
	void MonitorPlayerActions(const class ULocalPlayer* NewPlayer);

	int32 GetNumInputActions() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonActionBar">();
	}
	static class UModioCommonActionBar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonActionBar>();
	}
};
static_assert(alignof(UModioCommonActionBar) == 0x000008, "Wrong alignment on UModioCommonActionBar");
static_assert(sizeof(UModioCommonActionBar) == 0x000428, "Wrong size on UModioCommonActionBar");

// Class ModioUI.ModioCommonModGalleryItem
// 0x01E8 (0x0210 - 0x0028)
class UModioCommonModGalleryItem final : public UObject
{
public:
	struct FModioModInfo                          ModInfo;                                           // 0x0028(0x01E0)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         ImageGalleryIndex;                                 // 0x0208(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModGalleryItem">();
	}
	static class UModioCommonModGalleryItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModGalleryItem>();
	}
};
static_assert(alignof(UModioCommonModGalleryItem) == 0x000008, "Wrong alignment on UModioCommonModGalleryItem");
static_assert(sizeof(UModioCommonModGalleryItem) == 0x000210, "Wrong size on UModioCommonModGalleryItem");
static_assert(offsetof(UModioCommonModGalleryItem, ModInfo) == 0x000028, "Member 'UModioCommonModGalleryItem::ModInfo' has a wrong offset!");
static_assert(offsetof(UModioCommonModGalleryItem, ImageGalleryIndex) == 0x000208, "Member 'UModioCommonModGalleryItem::ImageGalleryIndex' has a wrong offset!");

// Class ModioUI.ModioCommonActivatableWidgetStack
// 0x0000 (0x0280 - 0x0280)
class UModioCommonActivatableWidgetStack final : public UCommonActivatableWidgetStack
{
public:
	class UCommonActivatableWidget* BP_AddWidgetSmart(TSubclassOf<class UCommonActivatableWidget> ActivatableWidgetClass, bool bSkipIfAlreadyActive, bool bRemoveIfInStack);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonActivatableWidgetStack">();
	}
	static class UModioCommonActivatableWidgetStack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonActivatableWidgetStack>();
	}
};
static_assert(alignof(UModioCommonActivatableWidgetStack) == 0x000008, "Wrong alignment on UModioCommonActivatableWidgetStack");
static_assert(sizeof(UModioCommonActivatableWidgetStack) == 0x000280, "Wrong size on UModioCommonActivatableWidgetStack");

// Class ModioUI.ModioCommonModGalleryEntry
// 0x0018 (0x0440 - 0x0428)
class UModioCommonModGalleryEntry final : public UModioCommonActivatableWidget
{
public:
	uint8                                         Pad_428[0x8];                                      // 0x0428(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UModioCommonModGalleryEntryStyle> ModioStyle;                                        // 0x0430(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonDynamicImage*               ModImage;                                          // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SetStyle(TSubclassOf<class UModioCommonModGalleryEntryStyle> InStyle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModGalleryEntry">();
	}
	static class UModioCommonModGalleryEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModGalleryEntry>();
	}
};
static_assert(alignof(UModioCommonModGalleryEntry) == 0x000008, "Wrong alignment on UModioCommonModGalleryEntry");
static_assert(sizeof(UModioCommonModGalleryEntry) == 0x000440, "Wrong size on UModioCommonModGalleryEntry");
static_assert(offsetof(UModioCommonModGalleryEntry, ModioStyle) == 0x000430, "Member 'UModioCommonModGalleryEntry::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModGalleryEntry, ModImage) == 0x000438, "Member 'UModioCommonModGalleryEntry::ModImage' has a wrong offset!");

// Class ModioUI.ModioCommonAuthViewBase
// 0x0020 (0x0448 - 0x0428)
class UModioCommonAuthViewBase : public UModioCommonActivatableWidget
{
public:
	TSubclassOf<class UModioCommonTermsOfUseViewBase> TermsOfUseViewClass;                               // 0x0428(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UModioCommonEmailAuthViewBase> EmailAuthViewClass;                                // 0x0430(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UModioCommonEmailAuthLoadingViewBase> EmailAuthLoadingViewClass;                         // 0x0438(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UModioCommonEmailAuthCodeViewBase> EmailAuthCodeViewBaseClass;                        // 0x0440(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonAuthViewBase">();
	}
	static class UModioCommonAuthViewBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonAuthViewBase>();
	}
};
static_assert(alignof(UModioCommonAuthViewBase) == 0x000008, "Wrong alignment on UModioCommonAuthViewBase");
static_assert(sizeof(UModioCommonAuthViewBase) == 0x000448, "Wrong size on UModioCommonAuthViewBase");
static_assert(offsetof(UModioCommonAuthViewBase, TermsOfUseViewClass) == 0x000428, "Member 'UModioCommonAuthViewBase::TermsOfUseViewClass' has a wrong offset!");
static_assert(offsetof(UModioCommonAuthViewBase, EmailAuthViewClass) == 0x000430, "Member 'UModioCommonAuthViewBase::EmailAuthViewClass' has a wrong offset!");
static_assert(offsetof(UModioCommonAuthViewBase, EmailAuthLoadingViewClass) == 0x000438, "Member 'UModioCommonAuthViewBase::EmailAuthLoadingViewClass' has a wrong offset!");
static_assert(offsetof(UModioCommonAuthViewBase, EmailAuthCodeViewBaseClass) == 0x000440, "Member 'UModioCommonAuthViewBase::EmailAuthCodeViewBaseClass' has a wrong offset!");

// Class ModioUI.ModioCommonAuthView
// 0x0040 (0x0488 - 0x0448)
class UModioCommonAuthView : public UModioCommonAuthViewBase
{
public:
	uint8                                         Pad_448[0x10];                                     // 0x0448(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UModioCommonWidgetSwitcher*             AuthSwitcher;                                      // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTermsOfUseViewBase*         TermsOfUseView;                                    // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonEmailAuthViewBase*          EmailAuthView;                                     // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonEmailAuthLoadingViewBase*   EmailAuthLoadingView;                              // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonEmailAuthCodeViewBase*      EmailAuthCodeView;                                 // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAuthCancelled;                                    // 0x0480(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleEmailAuthCodeSent(const struct FModioErrorCode& errorCode);
	void HandleEmailAuthenticated(const struct FModioErrorCode& errorCode);
	void OnEmailAuthCodeViewBackClicked();
	void OnEmailAuthCodeViewCancelClicked();
	void OnEmailAuthCodeViewSubmitClicked(const class FString& AuthCode);
	void OnEmailAuthLoadingViewCancelClicked();
	void OnEmailAuthViewBackClicked();
	void OnEmailAuthViewCancelClicked();
	void OnEmailAuthViewSubmitClicked(const class FString& EmailAddress);
	void OnTermsOfUseViewCancelClicked();
	void OnTermsOfUseViewLinkClicked(const class FString& URL);
	void OnTermsOfUseViewSubmitClicked();
	void SetShowTermsOfView(bool bShow);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonAuthView">();
	}
	static class UModioCommonAuthView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonAuthView>();
	}
};
static_assert(alignof(UModioCommonAuthView) == 0x000008, "Wrong alignment on UModioCommonAuthView");
static_assert(sizeof(UModioCommonAuthView) == 0x000488, "Wrong size on UModioCommonAuthView");
static_assert(offsetof(UModioCommonAuthView, AuthSwitcher) == 0x000458, "Member 'UModioCommonAuthView::AuthSwitcher' has a wrong offset!");
static_assert(offsetof(UModioCommonAuthView, TermsOfUseView) == 0x000460, "Member 'UModioCommonAuthView::TermsOfUseView' has a wrong offset!");
static_assert(offsetof(UModioCommonAuthView, EmailAuthView) == 0x000468, "Member 'UModioCommonAuthView::EmailAuthView' has a wrong offset!");
static_assert(offsetof(UModioCommonAuthView, EmailAuthLoadingView) == 0x000470, "Member 'UModioCommonAuthView::EmailAuthLoadingView' has a wrong offset!");
static_assert(offsetof(UModioCommonAuthView, EmailAuthCodeView) == 0x000478, "Member 'UModioCommonAuthView::EmailAuthCodeView' has a wrong offset!");
static_assert(offsetof(UModioCommonAuthView, bAuthCancelled) == 0x000480, "Member 'UModioCommonAuthView::bAuthCancelled' has a wrong offset!");

// Class ModioUI.ModioCommonBorder
// 0x0010 (0x0360 - 0x0350)
class UModioCommonBorder final : public UCommonBorder
{
public:
	uint8                                         Pad_348[0x18];                                     // 0x0348(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FEventReply HandleOnMouseButtonDownEvent(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonBorder">();
	}
	static class UModioCommonBorder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonBorder>();
	}
};
static_assert(alignof(UModioCommonBorder) == 0x000010, "Wrong alignment on UModioCommonBorder");
static_assert(sizeof(UModioCommonBorder) == 0x000360, "Wrong size on UModioCommonBorder");

// Class ModioUI.ModioCommonBorderStyle
// 0x0000 (0x0120 - 0x0120)
class UModioCommonBorderStyle final : public UCommonBorderStyle
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonBorderStyle">();
	}
	static class UModioCommonBorderStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonBorderStyle>();
	}
};
static_assert(alignof(UModioCommonBorderStyle) == 0x000010, "Wrong alignment on UModioCommonBorderStyle");
static_assert(sizeof(UModioCommonBorderStyle) == 0x000120, "Wrong size on UModioCommonBorderStyle");

// Class ModioUI.ModioCommonBoundActionBar
// 0x0000 (0x0240 - 0x0240)
class UModioCommonBoundActionBar final : public UCommonBoundActionBar
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonBoundActionBar">();
	}
	static class UModioCommonBoundActionBar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonBoundActionBar>();
	}
};
static_assert(alignof(UModioCommonBoundActionBar) == 0x000008, "Wrong alignment on UModioCommonBoundActionBar");
static_assert(sizeof(UModioCommonBoundActionBar) == 0x000240, "Wrong size on UModioCommonBoundActionBar");

// Class ModioUI.ModioCommonTabListWidgetBase
// 0x00A0 (0x0428 - 0x0388)
class UModioCommonTabListWidgetBase final : public UCommonTabListWidgetBase
{
public:
	uint8                                         Pad_388[0x18];                                     // 0x0388(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UCommonButtonBase* TabButton)> OnTabButtonClicked;                                // 0x03A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B0[0x18];                                     // 0x03B0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonActionWidget*                    PreviousTabAction;                                 // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonActionWidget*                    NextTabAction;                                     // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D8[0x50];                                     // 0x03D8(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleNavigateToNextTab();
	void HandleNavigateToPreviousTab();
	void OnTabSelectedInternal(class FName TabNameID);
	bool RegisterDynamicTab(const struct FModioCommonTabDescriptor& TabDescriptor);
	void RemoveAllDynamicTabs();
	bool SelectTabByIDExtended(class FName TabNameID, bool bSuppressClickFeedback, bool bSuppressOnTabSelectedIfAlreadySelected);
	void SetNextTabInputActionData(const struct FDataTableRowHandle& InNextTabInputActionData);
	void SetPreviousTabInputActionData(const struct FDataTableRowHandle& InPreviousTabInputActionData);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonTabListWidgetBase">();
	}
	static class UModioCommonTabListWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonTabListWidgetBase>();
	}
};
static_assert(alignof(UModioCommonTabListWidgetBase) == 0x000008, "Wrong alignment on UModioCommonTabListWidgetBase");
static_assert(sizeof(UModioCommonTabListWidgetBase) == 0x000428, "Wrong size on UModioCommonTabListWidgetBase");
static_assert(offsetof(UModioCommonTabListWidgetBase, OnTabButtonClicked) == 0x0003A0, "Member 'UModioCommonTabListWidgetBase::OnTabButtonClicked' has a wrong offset!");
static_assert(offsetof(UModioCommonTabListWidgetBase, PreviousTabAction) == 0x0003C8, "Member 'UModioCommonTabListWidgetBase::PreviousTabAction' has a wrong offset!");
static_assert(offsetof(UModioCommonTabListWidgetBase, NextTabAction) == 0x0003D0, "Member 'UModioCommonTabListWidgetBase::NextTabAction' has a wrong offset!");

// Class ModioUI.ModioCommonBoundActionButton
// 0x0000 (0x1710 - 0x1710)
class UModioCommonBoundActionButton final : public UCommonBoundActionButton
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonBoundActionButton">();
	}
	static class UModioCommonBoundActionButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonBoundActionButton>();
	}
};
static_assert(alignof(UModioCommonBoundActionButton) == 0x000010, "Wrong alignment on UModioCommonBoundActionButton");
static_assert(sizeof(UModioCommonBoundActionButton) == 0x001710, "Wrong size on UModioCommonBoundActionButton");

// Class ModioUI.ModioCommonButtonBase
// 0x00A0 (0x1790 - 0x16F0)
class UModioCommonButtonBase : public UCommonButtonBase
{
public:
	class FText                                   OverrideActionDisplayName;                         // 0x16F0(0x0018)(Edit, NativeAccessSpecifierPublic)
	bool                                          bShouldTriggerButtonClickOnEnterOrGamepadAccept;   // 0x1708(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1709[0x7];                                     // 0x1709(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ButtonText;                                        // 0x1710(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bFocusOnHover;                                     // 0x1728(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1729[0x7];                                     // 0x1729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UModioCommonTextBlock*                  TextBlock;                                         // 0x1730(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonImage*                      Icon;                                              // 0x1738(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(class UCommonButtonBase* Button)> OnButtonBaseFocusReceived;                         // 0x1740(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UCommonButtonBase* Button)> OnButtonBaseFocusLost;                             // 0x1750(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1760[0x18];                                    // 0x1760(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UModioCommonButtonStyle>    ModioDefaultStyleClass;                            // 0x1778(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                 ModioFocusedStyleClass;                            // 0x1780(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1788[0x8];                                     // 0x1788(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetButtonFocus();
	void SetLabel(const class FText& NewLabel);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonButtonBase">();
	}
	static class UModioCommonButtonBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonButtonBase>();
	}
};
static_assert(alignof(UModioCommonButtonBase) == 0x000010, "Wrong alignment on UModioCommonButtonBase");
static_assert(sizeof(UModioCommonButtonBase) == 0x001790, "Wrong size on UModioCommonButtonBase");
static_assert(offsetof(UModioCommonButtonBase, OverrideActionDisplayName) == 0x0016F0, "Member 'UModioCommonButtonBase::OverrideActionDisplayName' has a wrong offset!");
static_assert(offsetof(UModioCommonButtonBase, bShouldTriggerButtonClickOnEnterOrGamepadAccept) == 0x001708, "Member 'UModioCommonButtonBase::bShouldTriggerButtonClickOnEnterOrGamepadAccept' has a wrong offset!");
static_assert(offsetof(UModioCommonButtonBase, ButtonText) == 0x001710, "Member 'UModioCommonButtonBase::ButtonText' has a wrong offset!");
static_assert(offsetof(UModioCommonButtonBase, bFocusOnHover) == 0x001728, "Member 'UModioCommonButtonBase::bFocusOnHover' has a wrong offset!");
static_assert(offsetof(UModioCommonButtonBase, TextBlock) == 0x001730, "Member 'UModioCommonButtonBase::TextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonButtonBase, Icon) == 0x001738, "Member 'UModioCommonButtonBase::Icon' has a wrong offset!");
static_assert(offsetof(UModioCommonButtonBase, OnButtonBaseFocusReceived) == 0x001740, "Member 'UModioCommonButtonBase::OnButtonBaseFocusReceived' has a wrong offset!");
static_assert(offsetof(UModioCommonButtonBase, OnButtonBaseFocusLost) == 0x001750, "Member 'UModioCommonButtonBase::OnButtonBaseFocusLost' has a wrong offset!");
static_assert(offsetof(UModioCommonButtonBase, ModioDefaultStyleClass) == 0x001778, "Member 'UModioCommonButtonBase::ModioDefaultStyleClass' has a wrong offset!");
static_assert(offsetof(UModioCommonButtonBase, ModioFocusedStyleClass) == 0x001780, "Member 'UModioCommonButtonBase::ModioFocusedStyleClass' has a wrong offset!");

// Class ModioUI.ModioCommonButtonStyle
// 0x0010 (0x08C0 - 0x08B0)
class UModioCommonButtonStyle : public UCommonButtonStyle
{
public:
	TSubclassOf<class UModioCommonImageStyle>     NormalIconStyle;                                   // 0x08B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonImageStyle>     FocusedIconStyle;                                  // 0x08B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonButtonStyle">();
	}
	static class UModioCommonButtonStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonButtonStyle>();
	}
};
static_assert(alignof(UModioCommonButtonStyle) == 0x000010, "Wrong alignment on UModioCommonButtonStyle");
static_assert(sizeof(UModioCommonButtonStyle) == 0x0008C0, "Wrong size on UModioCommonButtonStyle");
static_assert(offsetof(UModioCommonButtonStyle, NormalIconStyle) == 0x0008B0, "Member 'UModioCommonButtonStyle::NormalIconStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonButtonStyle, FocusedIconStyle) == 0x0008B8, "Member 'UModioCommonButtonStyle::FocusedIconStyle' has a wrong offset!");

// Class ModioUI.ModioCommonCheckBox
// 0x0040 (0x0E40 - 0x0E00)
class UModioCommonCheckBox final : public UCheckBox
{
public:
	TSubclassOf<class UModioCommonCheckBoxStyle>  ModioStyle;                                        // 0x0DF8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E00[0x18];                                     // 0x0E00(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UModioCommonTextBlock*                  LabelTextBlock;                                    // 0x0E18(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   LabelText;                                         // 0x0E20(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	uint8                                         Pad_E38[0x8];                                      // 0x0E38(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleOnCheckStateChanged(bool bIsChecked);
	void SetLabel(const class FText& InLabelText);
	void SetStyle(TSubclassOf<class UModioCommonCheckBoxStyle> InStyle);

	struct FMargin GetCheckboxContentPadding() const;
	class FText GetLabel() const;
	class FText GetLabelTextBlockText() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonCheckBox">();
	}
	static class UModioCommonCheckBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonCheckBox>();
	}
};
static_assert(alignof(UModioCommonCheckBox) == 0x000010, "Wrong alignment on UModioCommonCheckBox");
static_assert(sizeof(UModioCommonCheckBox) == 0x000E40, "Wrong size on UModioCommonCheckBox");
static_assert(offsetof(UModioCommonCheckBox, ModioStyle) == 0x000DF8, "Member 'UModioCommonCheckBox::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonCheckBox, LabelTextBlock) == 0x000E18, "Member 'UModioCommonCheckBox::LabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonCheckBox, LabelText) == 0x000E20, "Member 'UModioCommonCheckBox::LabelText' has a wrong offset!");

// Class ModioUI.ModioCommonCheckBoxStyle
// 0x0C78 (0x0CA0 - 0x0028)
class UModioCommonCheckBoxStyle final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCheckBoxStyle                         WidgetStyle;                                       // 0x0030(0x0C50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      LabelTextStyle;                                    // 0x0C80(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      HoveredLabelTextStyle;                             // 0x0C88(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMargin                                ContentPadding;                                    // 0x0C90(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonCheckBoxStyle">();
	}
	static class UModioCommonCheckBoxStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonCheckBoxStyle>();
	}
};
static_assert(alignof(UModioCommonCheckBoxStyle) == 0x000010, "Wrong alignment on UModioCommonCheckBoxStyle");
static_assert(sizeof(UModioCommonCheckBoxStyle) == 0x000CA0, "Wrong size on UModioCommonCheckBoxStyle");
static_assert(offsetof(UModioCommonCheckBoxStyle, WidgetStyle) == 0x000030, "Member 'UModioCommonCheckBoxStyle::WidgetStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonCheckBoxStyle, LabelTextStyle) == 0x000C80, "Member 'UModioCommonCheckBoxStyle::LabelTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonCheckBoxStyle, HoveredLabelTextStyle) == 0x000C88, "Member 'UModioCommonCheckBoxStyle::HoveredLabelTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonCheckBoxStyle, ContentPadding) == 0x000C90, "Member 'UModioCommonCheckBoxStyle::ContentPadding' has a wrong offset!");

// Class ModioUI.ModioCommonCodeInputTextBox
// 0x0058 (0x01A8 - 0x0150)
class UModioCommonCodeInputTextBox final : public UWidget
{
public:
	TSubclassOf<class UModioCommonCodeInputTextBoxStyle> ModioStyle;                                        // 0x0150(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ETextFlowDirection                            TextFlowDirection;                                 // 0x0158(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVirtualKeyboardOptions                VirtualKeyboardOptions;                            // 0x0159(0x0001)(Edit, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	EVirtualKeyboardTrigger                       VirtualKeyboardTrigger;                            // 0x015A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVirtualKeyboardDismissAction                 VirtualKeyboardDismissAction;                      // 0x015B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumberOfCharacters;                                // 0x015C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_160[0x18];                                     // 0x0160(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnCodeSubmitDynamic;                               // 0x0178(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_188[0x20];                                     // 0x0188(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetCodeString(const class FString& InCodeString);
	void SetStyle(TSubclassOf<class UModioCommonCodeInputTextBoxStyle> InStyle);

	class FString GetCodeString() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonCodeInputTextBox">();
	}
	static class UModioCommonCodeInputTextBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonCodeInputTextBox>();
	}
};
static_assert(alignof(UModioCommonCodeInputTextBox) == 0x000008, "Wrong alignment on UModioCommonCodeInputTextBox");
static_assert(sizeof(UModioCommonCodeInputTextBox) == 0x0001A8, "Wrong size on UModioCommonCodeInputTextBox");
static_assert(offsetof(UModioCommonCodeInputTextBox, ModioStyle) == 0x000150, "Member 'UModioCommonCodeInputTextBox::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonCodeInputTextBox, TextFlowDirection) == 0x000158, "Member 'UModioCommonCodeInputTextBox::TextFlowDirection' has a wrong offset!");
static_assert(offsetof(UModioCommonCodeInputTextBox, VirtualKeyboardOptions) == 0x000159, "Member 'UModioCommonCodeInputTextBox::VirtualKeyboardOptions' has a wrong offset!");
static_assert(offsetof(UModioCommonCodeInputTextBox, VirtualKeyboardTrigger) == 0x00015A, "Member 'UModioCommonCodeInputTextBox::VirtualKeyboardTrigger' has a wrong offset!");
static_assert(offsetof(UModioCommonCodeInputTextBox, VirtualKeyboardDismissAction) == 0x00015B, "Member 'UModioCommonCodeInputTextBox::VirtualKeyboardDismissAction' has a wrong offset!");
static_assert(offsetof(UModioCommonCodeInputTextBox, NumberOfCharacters) == 0x00015C, "Member 'UModioCommonCodeInputTextBox::NumberOfCharacters' has a wrong offset!");
static_assert(offsetof(UModioCommonCodeInputTextBox, OnCodeSubmitDynamic) == 0x000178, "Member 'UModioCommonCodeInputTextBox::OnCodeSubmitDynamic' has a wrong offset!");

// Class ModioUI.ModioCommonCodeInputTextBoxStyle
// 0x06B8 (0x06E0 - 0x0028)
class UModioCommonCodeInputTextBoxStyle final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModioCommonCodeInputTextBoxInputStyle Style;                                             // 0x0030(0x06B0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonCodeInputTextBoxStyle">();
	}
	static class UModioCommonCodeInputTextBoxStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonCodeInputTextBoxStyle>();
	}
};
static_assert(alignof(UModioCommonCodeInputTextBoxStyle) == 0x000010, "Wrong alignment on UModioCommonCodeInputTextBoxStyle");
static_assert(sizeof(UModioCommonCodeInputTextBoxStyle) == 0x0006E0, "Wrong size on UModioCommonCodeInputTextBoxStyle");
static_assert(offsetof(UModioCommonCodeInputTextBoxStyle, Style) == 0x000030, "Member 'UModioCommonCodeInputTextBoxStyle::Style' has a wrong offset!");

// Class ModioUI.ModioCommonUserProfileBase
// 0x0010 (0x0438 - 0x0428)
class UModioCommonUserProfileBase : public UModioCommonActivatableWidget
{
public:
	uint8                                         Pad_428[0x10];                                     // 0x0428(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonUserProfileBase">();
	}
	static class UModioCommonUserProfileBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonUserProfileBase>();
	}
};
static_assert(alignof(UModioCommonUserProfileBase) == 0x000008, "Wrong alignment on UModioCommonUserProfileBase");
static_assert(sizeof(UModioCommonUserProfileBase) == 0x000438, "Wrong size on UModioCommonUserProfileBase");

// Class ModioUI.ModioCommonUserProfileWidget
// 0x0008 (0x0440 - 0x0438)
class UModioCommonUserProfileWidget : public UModioCommonUserProfileBase
{
public:
	class UModioCommonButtonBase*                 ProfileButton;                                     // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonUserProfileWidget">();
	}
	static class UModioCommonUserProfileWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonUserProfileWidget>();
	}
};
static_assert(alignof(UModioCommonUserProfileWidget) == 0x000008, "Wrong alignment on UModioCommonUserProfileWidget");
static_assert(sizeof(UModioCommonUserProfileWidget) == 0x000440, "Wrong size on UModioCommonUserProfileWidget");
static_assert(offsetof(UModioCommonUserProfileWidget, ProfileButton) == 0x000438, "Member 'UModioCommonUserProfileWidget::ProfileButton' has a wrong offset!");

// Class ModioUI.ModioCommonModListBase
// 0x0000 (0x0428 - 0x0428)
class UModioCommonModListBase : public UModioCommonActivatableWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModListBase">();
	}
	static class UModioCommonModListBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModListBase>();
	}
};
static_assert(alignof(UModioCommonModListBase) == 0x000008, "Wrong alignment on UModioCommonModListBase");
static_assert(sizeof(UModioCommonModListBase) == 0x000428, "Wrong size on UModioCommonModListBase");

// Class ModioUI.ModioCommonCollectionView
// 0x0140 (0x0568 - 0x0428)
class UModioCommonCollectionView final : public UModioCommonModListBase
{
public:
	uint8                                         Pad_428[0x30];                                     // 0x0428(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UModioCommonCollectionViewStyle> ModioStyle;                                        // 0x0458(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           NoResultsContainer;                                // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  NumOfDownloadingModsTextBlock;                     // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  InstalledModsLabelTextBlock;                       // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  InstalledModsDescriptionTextBlock;                 // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  NumOfInstalledModsTextBlock;                       // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  ErrorsTextBlock;                                   // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  NumOfErrorsTextBlock;                              // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UListView*                              ModList;                                           // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 FetchUpdateButton;                                 // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 FilterButton;                                      // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  FilterCounterTextBlock;                            // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSet<struct FModioModID>                      ModIDsWithErrors;                                  // 0x04B8(0x0050)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_508[0x60];                                     // 0x0508(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ApplySortingAndFiltering(TArray<struct FModioModCollectionEntry>* ModListEntries);
	void OnFetchExternalCompleted(const struct FModioErrorCode& errorCode);
	void OnFetchUpdatesClicked();
	void SetDefaultCategoryFilterParams(bool bUserAuthenticated);
	void SetNoResultsVisibility(bool bVisible);
	void SetStyle(TSubclassOf<class UModioCommonCollectionViewStyle> InStyle);
	void ShowSearchView();
	void SortAToZ(TArray<struct FModioModCollectionEntry>* ModListEntries);
	void SortRecentlyUpdated(TArray<struct FModioModCollectionEntry>* ModListEntries);
	void SortSizeOnDisk(TArray<struct FModioModCollectionEntry>* ModListEntries);
	void SortZToA(TArray<struct FModioModCollectionEntry>* ModListEntries);
	void UpdateInputBindings();
	void UpdateMods();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonCollectionView">();
	}
	static class UModioCommonCollectionView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonCollectionView>();
	}
};
static_assert(alignof(UModioCommonCollectionView) == 0x000008, "Wrong alignment on UModioCommonCollectionView");
static_assert(sizeof(UModioCommonCollectionView) == 0x000568, "Wrong size on UModioCommonCollectionView");
static_assert(offsetof(UModioCommonCollectionView, ModioStyle) == 0x000458, "Member 'UModioCommonCollectionView::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionView, NoResultsContainer) == 0x000460, "Member 'UModioCommonCollectionView::NoResultsContainer' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionView, NumOfDownloadingModsTextBlock) == 0x000468, "Member 'UModioCommonCollectionView::NumOfDownloadingModsTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionView, InstalledModsLabelTextBlock) == 0x000470, "Member 'UModioCommonCollectionView::InstalledModsLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionView, InstalledModsDescriptionTextBlock) == 0x000478, "Member 'UModioCommonCollectionView::InstalledModsDescriptionTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionView, NumOfInstalledModsTextBlock) == 0x000480, "Member 'UModioCommonCollectionView::NumOfInstalledModsTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionView, ErrorsTextBlock) == 0x000488, "Member 'UModioCommonCollectionView::ErrorsTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionView, NumOfErrorsTextBlock) == 0x000490, "Member 'UModioCommonCollectionView::NumOfErrorsTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionView, ModList) == 0x000498, "Member 'UModioCommonCollectionView::ModList' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionView, FetchUpdateButton) == 0x0004A0, "Member 'UModioCommonCollectionView::FetchUpdateButton' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionView, FilterButton) == 0x0004A8, "Member 'UModioCommonCollectionView::FilterButton' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionView, FilterCounterTextBlock) == 0x0004B0, "Member 'UModioCommonCollectionView::FilterCounterTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionView, ModIDsWithErrors) == 0x0004B8, "Member 'UModioCommonCollectionView::ModIDsWithErrors' has a wrong offset!");

// Class ModioUI.ModioCommonTabButtonBase
// 0x0030 (0x17C0 - 0x1790)
class UModioCommonTabButtonBase final : public UModioCommonButtonBase
{
public:
	uint8                                         Pad_1790[0x30];                                    // 0x1790(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonTabButtonBase">();
	}
	static class UModioCommonTabButtonBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonTabButtonBase>();
	}
};
static_assert(alignof(UModioCommonTabButtonBase) == 0x000010, "Wrong alignment on UModioCommonTabButtonBase");
static_assert(sizeof(UModioCommonTabButtonBase) == 0x0017C0, "Wrong size on UModioCommonTabButtonBase");

// Class ModioUI.ModioCommonCollectionViewStyle
// 0x0050 (0x0078 - 0x0028)
class UModioCommonCollectionViewStyle final : public UObject
{
public:
	TSubclassOf<class UModioCommonListViewStyle>  ModListStyle;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      NumOfDownloadingModsTextStyle;                     // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      InstalledModsLabelTextStyle;                       // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      InstalledModsDescriptionTextStyle;                 // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      NumOfInstalledModsTextStyle;                       // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      ErrorsTextStyle;                                   // 0x0050(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      NumOfErrorsTextStyle;                              // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    FetchUpdateButtonStyle;                            // 0x0060(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    FilterButtonStyle;                                 // 0x0068(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      FilterCounterTextStyle;                            // 0x0070(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonCollectionViewStyle">();
	}
	static class UModioCommonCollectionViewStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonCollectionViewStyle>();
	}
};
static_assert(alignof(UModioCommonCollectionViewStyle) == 0x000008, "Wrong alignment on UModioCommonCollectionViewStyle");
static_assert(sizeof(UModioCommonCollectionViewStyle) == 0x000078, "Wrong size on UModioCommonCollectionViewStyle");
static_assert(offsetof(UModioCommonCollectionViewStyle, ModListStyle) == 0x000028, "Member 'UModioCommonCollectionViewStyle::ModListStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionViewStyle, NumOfDownloadingModsTextStyle) == 0x000030, "Member 'UModioCommonCollectionViewStyle::NumOfDownloadingModsTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionViewStyle, InstalledModsLabelTextStyle) == 0x000038, "Member 'UModioCommonCollectionViewStyle::InstalledModsLabelTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionViewStyle, InstalledModsDescriptionTextStyle) == 0x000040, "Member 'UModioCommonCollectionViewStyle::InstalledModsDescriptionTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionViewStyle, NumOfInstalledModsTextStyle) == 0x000048, "Member 'UModioCommonCollectionViewStyle::NumOfInstalledModsTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionViewStyle, ErrorsTextStyle) == 0x000050, "Member 'UModioCommonCollectionViewStyle::ErrorsTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionViewStyle, NumOfErrorsTextStyle) == 0x000058, "Member 'UModioCommonCollectionViewStyle::NumOfErrorsTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionViewStyle, FetchUpdateButtonStyle) == 0x000060, "Member 'UModioCommonCollectionViewStyle::FetchUpdateButtonStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionViewStyle, FilterButtonStyle) == 0x000068, "Member 'UModioCommonCollectionViewStyle::FilterButtonStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonCollectionViewStyle, FilterCounterTextStyle) == 0x000070, "Member 'UModioCommonCollectionViewStyle::FilterCounterTextStyle' has a wrong offset!");

// Class ModioUI.ModioCommonTextStyle
// 0x0000 (0x01D0 - 0x01D0)
class UModioCommonTextStyle final : public UCommonTextStyle
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonTextStyle">();
	}
	static class UModioCommonTextStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonTextStyle>();
	}
};
static_assert(alignof(UModioCommonTextStyle) == 0x000010, "Wrong alignment on UModioCommonTextStyle");
static_assert(sizeof(UModioCommonTextStyle) == 0x0001D0, "Wrong size on UModioCommonTextStyle");

// Class ModioUI.ModioCommonComboBoxString
// 0x0000 (0x18F0 - 0x18F0)
class UModioCommonComboBoxString final : public UComboBoxString
{
public:
	TSubclassOf<class UModioCommonComboBoxStringStyle> ModioStyle;                                        // 0x18E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SetStyle(TSubclassOf<class UModioCommonComboBoxStringStyle> InStyle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonComboBoxString">();
	}
	static class UModioCommonComboBoxString* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonComboBoxString>();
	}
};
static_assert(alignof(UModioCommonComboBoxString) == 0x000010, "Wrong alignment on UModioCommonComboBoxString");
static_assert(sizeof(UModioCommonComboBoxString) == 0x0018F0, "Wrong size on UModioCommonComboBoxString");
static_assert(offsetof(UModioCommonComboBoxString, ModioStyle) == 0x0018E8, "Member 'UModioCommonComboBoxString::ModioStyle' has a wrong offset!");

// Class ModioUI.ModioCommonComboBoxStringStyle
// 0x1708 (0x1730 - 0x0028)
class UModioCommonComboBoxStringStyle final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FComboBoxStyle                         WidgetStyle;                                       // 0x0030(0x0720)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTableRowStyle                         ItemStyle;                                         // 0x0750(0x0F50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMargin                                ContentPadding;                                    // 0x16A0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         MaxListHeight;                                     // 0x16B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HasDownArrow;                                      // 0x16B4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableGamepadNavigationMode;                       // 0x16B5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16B6[0x2];                                     // 0x16B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         Font;                                              // 0x16B8(0x0058)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                            ForegroundColor;                                   // 0x1710(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         Pad_1724[0xC];                                     // 0x1724(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonComboBoxStringStyle">();
	}
	static class UModioCommonComboBoxStringStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonComboBoxStringStyle>();
	}
};
static_assert(alignof(UModioCommonComboBoxStringStyle) == 0x000010, "Wrong alignment on UModioCommonComboBoxStringStyle");
static_assert(sizeof(UModioCommonComboBoxStringStyle) == 0x001730, "Wrong size on UModioCommonComboBoxStringStyle");
static_assert(offsetof(UModioCommonComboBoxStringStyle, WidgetStyle) == 0x000030, "Member 'UModioCommonComboBoxStringStyle::WidgetStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonComboBoxStringStyle, ItemStyle) == 0x000750, "Member 'UModioCommonComboBoxStringStyle::ItemStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonComboBoxStringStyle, ContentPadding) == 0x0016A0, "Member 'UModioCommonComboBoxStringStyle::ContentPadding' has a wrong offset!");
static_assert(offsetof(UModioCommonComboBoxStringStyle, MaxListHeight) == 0x0016B0, "Member 'UModioCommonComboBoxStringStyle::MaxListHeight' has a wrong offset!");
static_assert(offsetof(UModioCommonComboBoxStringStyle, HasDownArrow) == 0x0016B4, "Member 'UModioCommonComboBoxStringStyle::HasDownArrow' has a wrong offset!");
static_assert(offsetof(UModioCommonComboBoxStringStyle, EnableGamepadNavigationMode) == 0x0016B5, "Member 'UModioCommonComboBoxStringStyle::EnableGamepadNavigationMode' has a wrong offset!");
static_assert(offsetof(UModioCommonComboBoxStringStyle, Font) == 0x0016B8, "Member 'UModioCommonComboBoxStringStyle::Font' has a wrong offset!");
static_assert(offsetof(UModioCommonComboBoxStringStyle, ForegroundColor) == 0x001710, "Member 'UModioCommonComboBoxStringStyle::ForegroundColor' has a wrong offset!");

// Class ModioUI.ModioCommonDialogInfo
// 0x0068 (0x0090 - 0x0028)
class UModioCommonDialogInfo final : public UObject
{
public:
	class FText                                   TitleText;                                         // 0x0028(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   DialogText;                                        // 0x0040(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                         ButtonsToDisplay;                                  // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(EModioCommonDialogButtonType ClickedButtonType)> OnDialogButtonClicked;                             // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x18];                                      // 0x0070(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Owner;                                             // 0x0088(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void HandleDialogButtonClicked(EModioCommonDialogButtonType ClickedButtonType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonDialogInfo">();
	}
	static class UModioCommonDialogInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonDialogInfo>();
	}
};
static_assert(alignof(UModioCommonDialogInfo) == 0x000008, "Wrong alignment on UModioCommonDialogInfo");
static_assert(sizeof(UModioCommonDialogInfo) == 0x000090, "Wrong size on UModioCommonDialogInfo");
static_assert(offsetof(UModioCommonDialogInfo, TitleText) == 0x000028, "Member 'UModioCommonDialogInfo::TitleText' has a wrong offset!");
static_assert(offsetof(UModioCommonDialogInfo, DialogText) == 0x000040, "Member 'UModioCommonDialogInfo::DialogText' has a wrong offset!");
static_assert(offsetof(UModioCommonDialogInfo, ButtonsToDisplay) == 0x000058, "Member 'UModioCommonDialogInfo::ButtonsToDisplay' has a wrong offset!");
static_assert(offsetof(UModioCommonDialogInfo, OnDialogButtonClicked) == 0x000060, "Member 'UModioCommonDialogInfo::OnDialogButtonClicked' has a wrong offset!");
static_assert(offsetof(UModioCommonDialogInfo, Owner) == 0x000088, "Member 'UModioCommonDialogInfo::Owner' has a wrong offset!");

// Class ModioUI.ModioCommonDialogLibrary
// 0x0000 (0x0028 - 0x0028)
class UModioCommonDialogLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class UModioCommonDialogInfo* CreateConfirmUninstallDialogInfo(const struct FModioModInfo& ModInfo);
	static class UModioCommonDialogInfo* CreateErrorDialogInfo(const struct FModioErrorCode& errorCode, const class FText& TitleText);
	static class UModioCommonDialogInfo* CreateManualDialogInfo(const class FText& TitleText, const class FText& DialogText);
	static class UModioCommonDialogInfo* CreateUninstallDialogInfo(const struct FModioModInfo& ModInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonDialogLibrary">();
	}
	static class UModioCommonDialogLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonDialogLibrary>();
	}
};
static_assert(alignof(UModioCommonDialogLibrary) == 0x000008, "Wrong alignment on UModioCommonDialogLibrary");
static_assert(sizeof(UModioCommonDialogLibrary) == 0x000028, "Wrong size on UModioCommonDialogLibrary");

// Class ModioUI.ModioCommonDialogMessageViewBase
// 0x0000 (0x0428 - 0x0428)
class UModioCommonDialogMessageViewBase : public UModioCommonActivatableWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonDialogMessageViewBase">();
	}
	static class UModioCommonDialogMessageViewBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonDialogMessageViewBase>();
	}
};
static_assert(alignof(UModioCommonDialogMessageViewBase) == 0x000008, "Wrong alignment on UModioCommonDialogMessageViewBase");
static_assert(sizeof(UModioCommonDialogMessageViewBase) == 0x000428, "Wrong size on UModioCommonDialogMessageViewBase");

// Class ModioUI.ModioCommonDialogMessageView
// 0x0038 (0x0460 - 0x0428)
class UModioCommonDialogMessageView final : public UModioCommonDialogMessageViewBase
{
public:
	class UModioCommonTextBlock*                  TitleTextBlock;                                    // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  DescriptionTextBlock;                              // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 BackButton;                                        // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 CancelButton;                                      // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 ConfirmButton;                                     // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 OkButton;                                          // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 ModDetailsButton;                                  // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SetButtonEnabledState(class UModioCommonButtonBase* Button, bool bEnabled);

	TMap<EModioCommonDialogButtonType, class UModioCommonButtonBase*> GetButtons() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonDialogMessageView">();
	}
	static class UModioCommonDialogMessageView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonDialogMessageView>();
	}
};
static_assert(alignof(UModioCommonDialogMessageView) == 0x000008, "Wrong alignment on UModioCommonDialogMessageView");
static_assert(sizeof(UModioCommonDialogMessageView) == 0x000460, "Wrong size on UModioCommonDialogMessageView");
static_assert(offsetof(UModioCommonDialogMessageView, TitleTextBlock) == 0x000428, "Member 'UModioCommonDialogMessageView::TitleTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonDialogMessageView, DescriptionTextBlock) == 0x000430, "Member 'UModioCommonDialogMessageView::DescriptionTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonDialogMessageView, BackButton) == 0x000438, "Member 'UModioCommonDialogMessageView::BackButton' has a wrong offset!");
static_assert(offsetof(UModioCommonDialogMessageView, CancelButton) == 0x000440, "Member 'UModioCommonDialogMessageView::CancelButton' has a wrong offset!");
static_assert(offsetof(UModioCommonDialogMessageView, ConfirmButton) == 0x000448, "Member 'UModioCommonDialogMessageView::ConfirmButton' has a wrong offset!");
static_assert(offsetof(UModioCommonDialogMessageView, OkButton) == 0x000450, "Member 'UModioCommonDialogMessageView::OkButton' has a wrong offset!");
static_assert(offsetof(UModioCommonDialogMessageView, ModDetailsButton) == 0x000458, "Member 'UModioCommonDialogMessageView::ModDetailsButton' has a wrong offset!");

// Class ModioUI.ModioCommonDialogViewBase
// 0x0000 (0x0428 - 0x0428)
class UModioCommonDialogViewBase : public UModioCommonActivatableWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonDialogViewBase">();
	}
	static class UModioCommonDialogViewBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonDialogViewBase>();
	}
};
static_assert(alignof(UModioCommonDialogViewBase) == 0x000008, "Wrong alignment on UModioCommonDialogViewBase");
static_assert(sizeof(UModioCommonDialogViewBase) == 0x000428, "Wrong size on UModioCommonDialogViewBase");

// Class ModioUI.ModioCommonDialogView
// 0x0018 (0x0440 - 0x0428)
class UModioCommonDialogView final : public UModioCommonDialogViewBase
{
public:
	class UModioCommonWidgetSwitcher*             DialogSwitcher;                                    // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UModioCommonDialogMessageViewBase> DialogMessageViewClass;                            // 0x0430(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonDialogMessageViewBase*      DialogMessageView;                                 // 0x0438(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonDialogView">();
	}
	static class UModioCommonDialogView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonDialogView>();
	}
};
static_assert(alignof(UModioCommonDialogView) == 0x000008, "Wrong alignment on UModioCommonDialogView");
static_assert(sizeof(UModioCommonDialogView) == 0x000440, "Wrong size on UModioCommonDialogView");
static_assert(offsetof(UModioCommonDialogView, DialogSwitcher) == 0x000428, "Member 'UModioCommonDialogView::DialogSwitcher' has a wrong offset!");
static_assert(offsetof(UModioCommonDialogView, DialogMessageViewClass) == 0x000430, "Member 'UModioCommonDialogView::DialogMessageViewClass' has a wrong offset!");
static_assert(offsetof(UModioCommonDialogView, DialogMessageView) == 0x000438, "Member 'UModioCommonDialogView::DialogMessageView' has a wrong offset!");

// Class ModioUI.ModioCommonImageBase
// 0x0030 (0x02D0 - 0x02A0)
class UModioCommonImageBase : public UCommonUserWidget
{
public:
	uint8                                         Pad_2A0[0x18];                                     // 0x02A0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool bSuccess)> OnImageLoadedDynamic;                              // 0x02B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bLoadFailed;                                       // 0x02C8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsLoading;                                        // 0x02C9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2CA[0x6];                                      // 0x02CA(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void LoadImageFromAvatar(const struct FModioModID& ModId, EModioAvatarSize AvatarSize);
	void LoadImageFromFileAsync(const struct FModioImageWrapper& ImageLoader);
	void LoadImageFromGallery(const struct FModioModID& ModId, EModioGallerySize GallerySize, int32 Index_0);
	void LoadImageFromLogo(const struct FModioModID& ModId, EModioLogoSize LogoSize);
	void OnLoadNewImageError();
	void OnStartLoadNewImage();
	void SetImageTexture(class UTexture2DDynamic* Texture);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonImageBase">();
	}
	static class UModioCommonImageBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonImageBase>();
	}
};
static_assert(alignof(UModioCommonImageBase) == 0x000008, "Wrong alignment on UModioCommonImageBase");
static_assert(sizeof(UModioCommonImageBase) == 0x0002D0, "Wrong size on UModioCommonImageBase");
static_assert(offsetof(UModioCommonImageBase, OnImageLoadedDynamic) == 0x0002B8, "Member 'UModioCommonImageBase::OnImageLoadedDynamic' has a wrong offset!");
static_assert(offsetof(UModioCommonImageBase, bLoadFailed) == 0x0002C8, "Member 'UModioCommonImageBase::bLoadFailed' has a wrong offset!");
static_assert(offsetof(UModioCommonImageBase, bIsLoading) == 0x0002C9, "Member 'UModioCommonImageBase::bIsLoading' has a wrong offset!");

// Class ModioUI.ModioCommonImage
// 0x0020 (0x02F0 - 0x02D0)
class UModioCommonImage : public UModioCommonImageBase
{
public:
	TSubclassOf<class UModioCommonImageStyle>     ModioStyle;                                        // 0x02D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonLazyImage*                       ImageFrame;                                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonLazyImage*                       Image;                                             // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2DDynamic*                      LoadedImageTexture;                                // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_SynchronizeProperties();
	void SetStyle(TSubclassOf<class UModioCommonImageStyle> InStyle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonImage">();
	}
	static class UModioCommonImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonImage>();
	}
};
static_assert(alignof(UModioCommonImage) == 0x000008, "Wrong alignment on UModioCommonImage");
static_assert(sizeof(UModioCommonImage) == 0x0002F0, "Wrong size on UModioCommonImage");
static_assert(offsetof(UModioCommonImage, ModioStyle) == 0x0002D0, "Member 'UModioCommonImage::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonImage, ImageFrame) == 0x0002D8, "Member 'UModioCommonImage::ImageFrame' has a wrong offset!");
static_assert(offsetof(UModioCommonImage, Image) == 0x0002E0, "Member 'UModioCommonImage::Image' has a wrong offset!");
static_assert(offsetof(UModioCommonImage, LoadedImageTexture) == 0x0002E8, "Member 'UModioCommonImage::LoadedImageTexture' has a wrong offset!");

// Class ModioUI.ModioCommonDynamicImage
// 0x0000 (0x02F0 - 0x02F0)
class UModioCommonDynamicImage : public UModioCommonImage
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonDynamicImage">();
	}
	static class UModioCommonDynamicImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonDynamicImage>();
	}
};
static_assert(alignof(UModioCommonDynamicImage) == 0x000008, "Wrong alignment on UModioCommonDynamicImage");
static_assert(sizeof(UModioCommonDynamicImage) == 0x0002F0, "Wrong size on UModioCommonDynamicImage");

// Class ModioUI.ModioCommonImageStyle
// 0x01E8 (0x0210 - 0x0028)
class UModioCommonImageStyle : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            ImageFrameBrush;                                   // 0x0030(0x00F0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateBrush                            ImageBrush;                                        // 0x0120(0x00F0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonImageStyle">();
	}
	static class UModioCommonImageStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonImageStyle>();
	}
};
static_assert(alignof(UModioCommonImageStyle) == 0x000010, "Wrong alignment on UModioCommonImageStyle");
static_assert(sizeof(UModioCommonImageStyle) == 0x000210, "Wrong size on UModioCommonImageStyle");
static_assert(offsetof(UModioCommonImageStyle, ImageFrameBrush) == 0x000030, "Member 'UModioCommonImageStyle::ImageFrameBrush' has a wrong offset!");
static_assert(offsetof(UModioCommonImageStyle, ImageBrush) == 0x000120, "Member 'UModioCommonImageStyle::ImageBrush' has a wrong offset!");

// Class ModioUI.ModioCommonDynamicImageStyle
// 0x01E0 (0x03F0 - 0x0210)
class UModioCommonDynamicImageStyle final : public UModioCommonImageStyle
{
public:
	struct FSlateBrush                            ImageLoadingBrush;                                 // 0x0210(0x00F0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateBrush                            ImageUnavailableBrush;                             // 0x0300(0x00F0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonDynamicImageStyle">();
	}
	static class UModioCommonDynamicImageStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonDynamicImageStyle>();
	}
};
static_assert(alignof(UModioCommonDynamicImageStyle) == 0x000010, "Wrong alignment on UModioCommonDynamicImageStyle");
static_assert(sizeof(UModioCommonDynamicImageStyle) == 0x0003F0, "Wrong size on UModioCommonDynamicImageStyle");
static_assert(offsetof(UModioCommonDynamicImageStyle, ImageLoadingBrush) == 0x000210, "Member 'UModioCommonDynamicImageStyle::ImageLoadingBrush' has a wrong offset!");
static_assert(offsetof(UModioCommonDynamicImageStyle, ImageUnavailableBrush) == 0x000300, "Member 'UModioCommonDynamicImageStyle::ImageUnavailableBrush' has a wrong offset!");

// Class ModioUI.ModioCommonEditableTextBox
// 0x0030 (0x12A0 - 0x1270)
class UModioCommonEditableTextBox final : public UEditableTextBox
{
public:
	TSubclassOf<class UModioCommonEditableTextBoxStyle> ModioStyle;                                        // 0x1270(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(class FText& Text)> OnEditableTextChanged;                             // 0x1278(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1288[0x18];                                    // 0x1288(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetStyle(TSubclassOf<class UModioCommonEditableTextBoxStyle> InStyle);

	bool IsTextBoxFocused() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonEditableTextBox">();
	}
	static class UModioCommonEditableTextBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonEditableTextBox>();
	}
};
static_assert(alignof(UModioCommonEditableTextBox) == 0x000010, "Wrong alignment on UModioCommonEditableTextBox");
static_assert(sizeof(UModioCommonEditableTextBox) == 0x0012A0, "Wrong size on UModioCommonEditableTextBox");
static_assert(offsetof(UModioCommonEditableTextBox, ModioStyle) == 0x001270, "Member 'UModioCommonEditableTextBox::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonEditableTextBox, OnEditableTextChanged) == 0x001278, "Member 'UModioCommonEditableTextBox::OnEditableTextChanged' has a wrong offset!");

// Class ModioUI.ModioCommonEditableTextBoxStyle
// 0x0888 (0x08B0 - 0x0028)
class UModioCommonEditableTextBoxStyle final : public UObject
{
public:
	int32                                         MaxTextLength;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   HintText;                                          // 0x0030(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            NormalBackgroundBrush;                             // 0x0050(0x00F0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                            HoveredBackgroundBrush;                            // 0x0140(0x00F0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                            FocusedBackgroundBrush;                            // 0x0230(0x00F0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                            ReadOnlyBackgroundBrush;                           // 0x0320(0x00F0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FMargin                                Padding;                                           // 0x0410(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                         Font;                                              // 0x0420(0x0058)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                            ForegroundColor;                                   // 0x0478(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateColor                            BackgroundColor;                                   // 0x048C(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateColor                            ReadOnlyForegroundColor;                           // 0x04A0(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateColor                            FocusedForegroundColor;                            // 0x04B4(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C8[0x8];                                      // 0x04C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            NormalBorderBrush;                                 // 0x04D0(0x00F0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                            HoveredBorderBrush;                                // 0x05C0(0x00F0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                            ErrorBorderBrush;                                  // 0x06B0(0x00F0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bShowHintIcon;                                     // 0x07A0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7A1[0xF];                                      // 0x07A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            HintIcon;                                          // 0x07B0(0x00F0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FMargin                                HintIconPadding;                                   // 0x08A0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonEditableTextBoxStyle">();
	}
	static class UModioCommonEditableTextBoxStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonEditableTextBoxStyle>();
	}
};
static_assert(alignof(UModioCommonEditableTextBoxStyle) == 0x000010, "Wrong alignment on UModioCommonEditableTextBoxStyle");
static_assert(sizeof(UModioCommonEditableTextBoxStyle) == 0x0008B0, "Wrong size on UModioCommonEditableTextBoxStyle");
static_assert(offsetof(UModioCommonEditableTextBoxStyle, MaxTextLength) == 0x000028, "Member 'UModioCommonEditableTextBoxStyle::MaxTextLength' has a wrong offset!");
static_assert(offsetof(UModioCommonEditableTextBoxStyle, HintText) == 0x000030, "Member 'UModioCommonEditableTextBoxStyle::HintText' has a wrong offset!");
static_assert(offsetof(UModioCommonEditableTextBoxStyle, NormalBackgroundBrush) == 0x000050, "Member 'UModioCommonEditableTextBoxStyle::NormalBackgroundBrush' has a wrong offset!");
static_assert(offsetof(UModioCommonEditableTextBoxStyle, HoveredBackgroundBrush) == 0x000140, "Member 'UModioCommonEditableTextBoxStyle::HoveredBackgroundBrush' has a wrong offset!");
static_assert(offsetof(UModioCommonEditableTextBoxStyle, FocusedBackgroundBrush) == 0x000230, "Member 'UModioCommonEditableTextBoxStyle::FocusedBackgroundBrush' has a wrong offset!");
static_assert(offsetof(UModioCommonEditableTextBoxStyle, ReadOnlyBackgroundBrush) == 0x000320, "Member 'UModioCommonEditableTextBoxStyle::ReadOnlyBackgroundBrush' has a wrong offset!");
static_assert(offsetof(UModioCommonEditableTextBoxStyle, Padding) == 0x000410, "Member 'UModioCommonEditableTextBoxStyle::Padding' has a wrong offset!");
static_assert(offsetof(UModioCommonEditableTextBoxStyle, Font) == 0x000420, "Member 'UModioCommonEditableTextBoxStyle::Font' has a wrong offset!");
static_assert(offsetof(UModioCommonEditableTextBoxStyle, ForegroundColor) == 0x000478, "Member 'UModioCommonEditableTextBoxStyle::ForegroundColor' has a wrong offset!");
static_assert(offsetof(UModioCommonEditableTextBoxStyle, BackgroundColor) == 0x00048C, "Member 'UModioCommonEditableTextBoxStyle::BackgroundColor' has a wrong offset!");
static_assert(offsetof(UModioCommonEditableTextBoxStyle, ReadOnlyForegroundColor) == 0x0004A0, "Member 'UModioCommonEditableTextBoxStyle::ReadOnlyForegroundColor' has a wrong offset!");
static_assert(offsetof(UModioCommonEditableTextBoxStyle, FocusedForegroundColor) == 0x0004B4, "Member 'UModioCommonEditableTextBoxStyle::FocusedForegroundColor' has a wrong offset!");
static_assert(offsetof(UModioCommonEditableTextBoxStyle, NormalBorderBrush) == 0x0004D0, "Member 'UModioCommonEditableTextBoxStyle::NormalBorderBrush' has a wrong offset!");
static_assert(offsetof(UModioCommonEditableTextBoxStyle, HoveredBorderBrush) == 0x0005C0, "Member 'UModioCommonEditableTextBoxStyle::HoveredBorderBrush' has a wrong offset!");
static_assert(offsetof(UModioCommonEditableTextBoxStyle, ErrorBorderBrush) == 0x0006B0, "Member 'UModioCommonEditableTextBoxStyle::ErrorBorderBrush' has a wrong offset!");
static_assert(offsetof(UModioCommonEditableTextBoxStyle, bShowHintIcon) == 0x0007A0, "Member 'UModioCommonEditableTextBoxStyle::bShowHintIcon' has a wrong offset!");
static_assert(offsetof(UModioCommonEditableTextBoxStyle, HintIcon) == 0x0007B0, "Member 'UModioCommonEditableTextBoxStyle::HintIcon' has a wrong offset!");
static_assert(offsetof(UModioCommonEditableTextBoxStyle, HintIconPadding) == 0x0008A0, "Member 'UModioCommonEditableTextBoxStyle::HintIconPadding' has a wrong offset!");

// Class ModioUI.ModioCommonEmailAuthCodeViewBase
// 0x0030 (0x0458 - 0x0428)
class UModioCommonEmailAuthCodeViewBase : public UModioCommonActivatableWidget
{
public:
	TMulticastInlineDelegate<void()>              OnBackClicked;                                     // 0x0428(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& AuthCode)> OnSubmitClicked;                                   // 0x0438(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCancelClicked;                                   // 0x0448(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonEmailAuthCodeViewBase">();
	}
	static class UModioCommonEmailAuthCodeViewBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonEmailAuthCodeViewBase>();
	}
};
static_assert(alignof(UModioCommonEmailAuthCodeViewBase) == 0x000008, "Wrong alignment on UModioCommonEmailAuthCodeViewBase");
static_assert(sizeof(UModioCommonEmailAuthCodeViewBase) == 0x000458, "Wrong size on UModioCommonEmailAuthCodeViewBase");
static_assert(offsetof(UModioCommonEmailAuthCodeViewBase, OnBackClicked) == 0x000428, "Member 'UModioCommonEmailAuthCodeViewBase::OnBackClicked' has a wrong offset!");
static_assert(offsetof(UModioCommonEmailAuthCodeViewBase, OnSubmitClicked) == 0x000438, "Member 'UModioCommonEmailAuthCodeViewBase::OnSubmitClicked' has a wrong offset!");
static_assert(offsetof(UModioCommonEmailAuthCodeViewBase, OnCancelClicked) == 0x000448, "Member 'UModioCommonEmailAuthCodeViewBase::OnCancelClicked' has a wrong offset!");

// Class ModioUI.ModioCommonEmailAuthCodeView
// 0x0040 (0x0498 - 0x0458)
class UModioCommonEmailAuthCodeView final : public UModioCommonEmailAuthCodeViewBase
{
public:
	class UModioCommonTextBlock*                  TitleTextBlock;                                    // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  DescriptionTextBlock;                              // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  ValidationTextBlock;                               // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 BackButton;                                        // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 SubmitButton;                                      // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 CancelButton;                                      // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonCodeInputTextBox*           CodeInputTextBox;                                  // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEditableTextBox*                       CustomCodeInputTextBox;                            // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleOnCustomSubmitClicked(const class FText& Text, ETextCommit CommitMethod);
	void HandleOnSubmitClicked();
	bool IsCodeValid(const class FString& Code);
	void SetIsBusy(bool bBusy);
	void SetValidationTextVisibility(ESlateVisibility Visbility);

	class FString GetInputText() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonEmailAuthCodeView">();
	}
	static class UModioCommonEmailAuthCodeView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonEmailAuthCodeView>();
	}
};
static_assert(alignof(UModioCommonEmailAuthCodeView) == 0x000008, "Wrong alignment on UModioCommonEmailAuthCodeView");
static_assert(sizeof(UModioCommonEmailAuthCodeView) == 0x000498, "Wrong size on UModioCommonEmailAuthCodeView");
static_assert(offsetof(UModioCommonEmailAuthCodeView, TitleTextBlock) == 0x000458, "Member 'UModioCommonEmailAuthCodeView::TitleTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonEmailAuthCodeView, DescriptionTextBlock) == 0x000460, "Member 'UModioCommonEmailAuthCodeView::DescriptionTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonEmailAuthCodeView, ValidationTextBlock) == 0x000468, "Member 'UModioCommonEmailAuthCodeView::ValidationTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonEmailAuthCodeView, BackButton) == 0x000470, "Member 'UModioCommonEmailAuthCodeView::BackButton' has a wrong offset!");
static_assert(offsetof(UModioCommonEmailAuthCodeView, SubmitButton) == 0x000478, "Member 'UModioCommonEmailAuthCodeView::SubmitButton' has a wrong offset!");
static_assert(offsetof(UModioCommonEmailAuthCodeView, CancelButton) == 0x000480, "Member 'UModioCommonEmailAuthCodeView::CancelButton' has a wrong offset!");
static_assert(offsetof(UModioCommonEmailAuthCodeView, CodeInputTextBox) == 0x000488, "Member 'UModioCommonEmailAuthCodeView::CodeInputTextBox' has a wrong offset!");
static_assert(offsetof(UModioCommonEmailAuthCodeView, CustomCodeInputTextBox) == 0x000490, "Member 'UModioCommonEmailAuthCodeView::CustomCodeInputTextBox' has a wrong offset!");

// Class ModioUI.ModioCommonStorageSpaceTrackerUserWidget
// 0x0058 (0x0480 - 0x0428)
class UModioCommonStorageSpaceTrackerUserWidget final : public UModioCommonActivatableWidget
{
public:
	TSubclassOf<class UModioCommonStorageSpaceTrackerUserWidgetStyle> ModioStyle;                                        // 0x0428(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonStorageSpaceTrackerWidget*  Tracker;                                           // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonImage*                      IconImage;                                         // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  UsedSpaceLabelTextBlock;                           // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  UsedSpaceTextBlock;                                // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  FreeSpaceLabelTextBlock;                           // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  FreeSpaceTextBlock;                                // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  TotalSpaceLabelTextBlock;                          // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  TotalSpaceTextBlock;                               // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonProgressBar*                StorageSpaceProgressBar;                           // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MinDecimals;                                       // 0x0478(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxDecimals;                                       // 0x047C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnStorageSpaceTrackerUpdated(const struct FModioUnsigned64& UsedSpace, const struct FModioUnsigned64& FreeSpace, const struct FModioUnsigned64& TotalSpace);
	void SetStyle(TSubclassOf<class UModioCommonStorageSpaceTrackerUserWidgetStyle> InStyle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonStorageSpaceTrackerUserWidget">();
	}
	static class UModioCommonStorageSpaceTrackerUserWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonStorageSpaceTrackerUserWidget>();
	}
};
static_assert(alignof(UModioCommonStorageSpaceTrackerUserWidget) == 0x000008, "Wrong alignment on UModioCommonStorageSpaceTrackerUserWidget");
static_assert(sizeof(UModioCommonStorageSpaceTrackerUserWidget) == 0x000480, "Wrong size on UModioCommonStorageSpaceTrackerUserWidget");
static_assert(offsetof(UModioCommonStorageSpaceTrackerUserWidget, ModioStyle) == 0x000428, "Member 'UModioCommonStorageSpaceTrackerUserWidget::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonStorageSpaceTrackerUserWidget, Tracker) == 0x000430, "Member 'UModioCommonStorageSpaceTrackerUserWidget::Tracker' has a wrong offset!");
static_assert(offsetof(UModioCommonStorageSpaceTrackerUserWidget, IconImage) == 0x000438, "Member 'UModioCommonStorageSpaceTrackerUserWidget::IconImage' has a wrong offset!");
static_assert(offsetof(UModioCommonStorageSpaceTrackerUserWidget, UsedSpaceLabelTextBlock) == 0x000440, "Member 'UModioCommonStorageSpaceTrackerUserWidget::UsedSpaceLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonStorageSpaceTrackerUserWidget, UsedSpaceTextBlock) == 0x000448, "Member 'UModioCommonStorageSpaceTrackerUserWidget::UsedSpaceTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonStorageSpaceTrackerUserWidget, FreeSpaceLabelTextBlock) == 0x000450, "Member 'UModioCommonStorageSpaceTrackerUserWidget::FreeSpaceLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonStorageSpaceTrackerUserWidget, FreeSpaceTextBlock) == 0x000458, "Member 'UModioCommonStorageSpaceTrackerUserWidget::FreeSpaceTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonStorageSpaceTrackerUserWidget, TotalSpaceLabelTextBlock) == 0x000460, "Member 'UModioCommonStorageSpaceTrackerUserWidget::TotalSpaceLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonStorageSpaceTrackerUserWidget, TotalSpaceTextBlock) == 0x000468, "Member 'UModioCommonStorageSpaceTrackerUserWidget::TotalSpaceTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonStorageSpaceTrackerUserWidget, StorageSpaceProgressBar) == 0x000470, "Member 'UModioCommonStorageSpaceTrackerUserWidget::StorageSpaceProgressBar' has a wrong offset!");
static_assert(offsetof(UModioCommonStorageSpaceTrackerUserWidget, MinDecimals) == 0x000478, "Member 'UModioCommonStorageSpaceTrackerUserWidget::MinDecimals' has a wrong offset!");
static_assert(offsetof(UModioCommonStorageSpaceTrackerUserWidget, MaxDecimals) == 0x00047C, "Member 'UModioCommonStorageSpaceTrackerUserWidget::MaxDecimals' has a wrong offset!");

// Class ModioUI.ModioCommonEmailAuthLoadingViewBase
// 0x0010 (0x0438 - 0x0428)
class UModioCommonEmailAuthLoadingViewBase : public UModioCommonActivatableWidget
{
public:
	TMulticastInlineDelegate<void()>              OnCancelClicked;                                   // 0x0428(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonEmailAuthLoadingViewBase">();
	}
	static class UModioCommonEmailAuthLoadingViewBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonEmailAuthLoadingViewBase>();
	}
};
static_assert(alignof(UModioCommonEmailAuthLoadingViewBase) == 0x000008, "Wrong alignment on UModioCommonEmailAuthLoadingViewBase");
static_assert(sizeof(UModioCommonEmailAuthLoadingViewBase) == 0x000438, "Wrong size on UModioCommonEmailAuthLoadingViewBase");
static_assert(offsetof(UModioCommonEmailAuthLoadingViewBase, OnCancelClicked) == 0x000428, "Member 'UModioCommonEmailAuthLoadingViewBase::OnCancelClicked' has a wrong offset!");

// Class ModioUI.ModioCommonEmailAuthLoadingView
// 0x0018 (0x0450 - 0x0438)
class UModioCommonEmailAuthLoadingView final : public UModioCommonEmailAuthLoadingViewBase
{
public:
	class UModioCommonTextBlock*                  TitleTextBlock;                                    // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  DescriptionTextBlock;                              // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 CancelButton;                                      // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonEmailAuthLoadingView">();
	}
	static class UModioCommonEmailAuthLoadingView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonEmailAuthLoadingView>();
	}
};
static_assert(alignof(UModioCommonEmailAuthLoadingView) == 0x000008, "Wrong alignment on UModioCommonEmailAuthLoadingView");
static_assert(sizeof(UModioCommonEmailAuthLoadingView) == 0x000450, "Wrong size on UModioCommonEmailAuthLoadingView");
static_assert(offsetof(UModioCommonEmailAuthLoadingView, TitleTextBlock) == 0x000438, "Member 'UModioCommonEmailAuthLoadingView::TitleTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonEmailAuthLoadingView, DescriptionTextBlock) == 0x000440, "Member 'UModioCommonEmailAuthLoadingView::DescriptionTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonEmailAuthLoadingView, CancelButton) == 0x000448, "Member 'UModioCommonEmailAuthLoadingView::CancelButton' has a wrong offset!");

// Class ModioUI.ModioCommonEmailAuthViewBase
// 0x0030 (0x0458 - 0x0428)
class UModioCommonEmailAuthViewBase : public UModioCommonActivatableWidget
{
public:
	TMulticastInlineDelegate<void()>              OnBackClicked;                                     // 0x0428(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCancelClicked;                                   // 0x0438(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& EmailAddress)> OnSubmitClicked;                                   // 0x0448(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonEmailAuthViewBase">();
	}
	static class UModioCommonEmailAuthViewBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonEmailAuthViewBase>();
	}
};
static_assert(alignof(UModioCommonEmailAuthViewBase) == 0x000008, "Wrong alignment on UModioCommonEmailAuthViewBase");
static_assert(sizeof(UModioCommonEmailAuthViewBase) == 0x000458, "Wrong size on UModioCommonEmailAuthViewBase");
static_assert(offsetof(UModioCommonEmailAuthViewBase, OnBackClicked) == 0x000428, "Member 'UModioCommonEmailAuthViewBase::OnBackClicked' has a wrong offset!");
static_assert(offsetof(UModioCommonEmailAuthViewBase, OnCancelClicked) == 0x000438, "Member 'UModioCommonEmailAuthViewBase::OnCancelClicked' has a wrong offset!");
static_assert(offsetof(UModioCommonEmailAuthViewBase, OnSubmitClicked) == 0x000448, "Member 'UModioCommonEmailAuthViewBase::OnSubmitClicked' has a wrong offset!");

// Class ModioUI.ModioCommonEmailAuthView
// 0x0038 (0x0490 - 0x0458)
class UModioCommonEmailAuthView final : public UModioCommonEmailAuthViewBase
{
public:
	class UModioCommonTextBlock*                  TitleTextBlock;                                    // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UModioCommonTextBlock*                  DescriptionTextBlock;                              // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UModioCommonTextBlock*                  ValidationTextBlock;                               // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UModioCommonEditableTextBox*            EmailTextBox;                                      // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UModioCommonButtonBase*                 BackButton;                                        // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UModioCommonButtonBase*                 SubmitButton;                                      // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UModioCommonButtonBase*                 CancelButton;                                      // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	bool IsEmailValid(const class FString& Email);
	void OnEditableTextBoxTextChanged(const class FText& InText);
	void SetValidationTextVisibility(ESlateVisibility Visbility);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonEmailAuthView">();
	}
	static class UModioCommonEmailAuthView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonEmailAuthView>();
	}
};
static_assert(alignof(UModioCommonEmailAuthView) == 0x000008, "Wrong alignment on UModioCommonEmailAuthView");
static_assert(sizeof(UModioCommonEmailAuthView) == 0x000490, "Wrong size on UModioCommonEmailAuthView");
static_assert(offsetof(UModioCommonEmailAuthView, TitleTextBlock) == 0x000458, "Member 'UModioCommonEmailAuthView::TitleTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonEmailAuthView, DescriptionTextBlock) == 0x000460, "Member 'UModioCommonEmailAuthView::DescriptionTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonEmailAuthView, ValidationTextBlock) == 0x000468, "Member 'UModioCommonEmailAuthView::ValidationTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonEmailAuthView, EmailTextBox) == 0x000470, "Member 'UModioCommonEmailAuthView::EmailTextBox' has a wrong offset!");
static_assert(offsetof(UModioCommonEmailAuthView, BackButton) == 0x000478, "Member 'UModioCommonEmailAuthView::BackButton' has a wrong offset!");
static_assert(offsetof(UModioCommonEmailAuthView, SubmitButton) == 0x000480, "Member 'UModioCommonEmailAuthView::SubmitButton' has a wrong offset!");
static_assert(offsetof(UModioCommonEmailAuthView, CancelButton) == 0x000488, "Member 'UModioCommonEmailAuthView::CancelButton' has a wrong offset!");

// Class ModioUI.ModioCommonErrorWithRetryParamsUI
// 0x0030 (0x0058 - 0x0028)
class UModioCommonErrorWithRetryParamsUI final : public UObject
{
public:
	class FText                                   ErrorTitleTextLabel;                               // 0x0028(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   ErrorDescriptionTextLabel;                         // 0x0040(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonErrorWithRetryParamsUI">();
	}
	static class UModioCommonErrorWithRetryParamsUI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonErrorWithRetryParamsUI>();
	}
};
static_assert(alignof(UModioCommonErrorWithRetryParamsUI) == 0x000008, "Wrong alignment on UModioCommonErrorWithRetryParamsUI");
static_assert(sizeof(UModioCommonErrorWithRetryParamsUI) == 0x000058, "Wrong size on UModioCommonErrorWithRetryParamsUI");
static_assert(offsetof(UModioCommonErrorWithRetryParamsUI, ErrorTitleTextLabel) == 0x000028, "Member 'UModioCommonErrorWithRetryParamsUI::ErrorTitleTextLabel' has a wrong offset!");
static_assert(offsetof(UModioCommonErrorWithRetryParamsUI, ErrorDescriptionTextLabel) == 0x000040, "Member 'UModioCommonErrorWithRetryParamsUI::ErrorDescriptionTextLabel' has a wrong offset!");

// Class ModioUI.ModioCommonErrorWithRetryWidget
// 0x0068 (0x0490 - 0x0428)
class UModioCommonErrorWithRetryWidget final : public UModioCommonActivatableWidget
{
public:
	uint8                                         Pad_428[0x18];                                     // 0x0428(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UModioCommonErrorWithRetryWidgetStyle> ModioStyle;                                        // 0x0440(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonImage*                      IconImage;                                         // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  ErrorTitleTextBlock;                               // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  ErrorDescriptionTextBlock;                         // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 RetryButton;                                       // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_468[0x18];                                     // 0x0468(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              RetryClickedDynamicDelegate;                       // 0x0480(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void SetStyle(TSubclassOf<class UModioCommonErrorWithRetryWidgetStyle> InStyle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonErrorWithRetryWidget">();
	}
	static class UModioCommonErrorWithRetryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonErrorWithRetryWidget>();
	}
};
static_assert(alignof(UModioCommonErrorWithRetryWidget) == 0x000008, "Wrong alignment on UModioCommonErrorWithRetryWidget");
static_assert(sizeof(UModioCommonErrorWithRetryWidget) == 0x000490, "Wrong size on UModioCommonErrorWithRetryWidget");
static_assert(offsetof(UModioCommonErrorWithRetryWidget, ModioStyle) == 0x000440, "Member 'UModioCommonErrorWithRetryWidget::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonErrorWithRetryWidget, IconImage) == 0x000448, "Member 'UModioCommonErrorWithRetryWidget::IconImage' has a wrong offset!");
static_assert(offsetof(UModioCommonErrorWithRetryWidget, ErrorTitleTextBlock) == 0x000450, "Member 'UModioCommonErrorWithRetryWidget::ErrorTitleTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonErrorWithRetryWidget, ErrorDescriptionTextBlock) == 0x000458, "Member 'UModioCommonErrorWithRetryWidget::ErrorDescriptionTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonErrorWithRetryWidget, RetryButton) == 0x000460, "Member 'UModioCommonErrorWithRetryWidget::RetryButton' has a wrong offset!");
static_assert(offsetof(UModioCommonErrorWithRetryWidget, RetryClickedDynamicDelegate) == 0x000480, "Member 'UModioCommonErrorWithRetryWidget::RetryClickedDynamicDelegate' has a wrong offset!");

// Class ModioUI.ModioCommonErrorWithRetryWidgetStyle
// 0x0020 (0x0048 - 0x0028)
class UModioCommonErrorWithRetryWidgetStyle final : public UObject
{
public:
	TSubclassOf<class UModioCommonImageStyle>     IconImageStyle;                                    // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      ErrorTitleTextBlockStyle;                          // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      ErrorDescriptionTextBlockStyle;                    // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    RetryButtonStyle;                                  // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonErrorWithRetryWidgetStyle">();
	}
	static class UModioCommonErrorWithRetryWidgetStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonErrorWithRetryWidgetStyle>();
	}
};
static_assert(alignof(UModioCommonErrorWithRetryWidgetStyle) == 0x000008, "Wrong alignment on UModioCommonErrorWithRetryWidgetStyle");
static_assert(sizeof(UModioCommonErrorWithRetryWidgetStyle) == 0x000048, "Wrong size on UModioCommonErrorWithRetryWidgetStyle");
static_assert(offsetof(UModioCommonErrorWithRetryWidgetStyle, IconImageStyle) == 0x000028, "Member 'UModioCommonErrorWithRetryWidgetStyle::IconImageStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonErrorWithRetryWidgetStyle, ErrorTitleTextBlockStyle) == 0x000030, "Member 'UModioCommonErrorWithRetryWidgetStyle::ErrorTitleTextBlockStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonErrorWithRetryWidgetStyle, ErrorDescriptionTextBlockStyle) == 0x000038, "Member 'UModioCommonErrorWithRetryWidgetStyle::ErrorDescriptionTextBlockStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonErrorWithRetryWidgetStyle, RetryButtonStyle) == 0x000040, "Member 'UModioCommonErrorWithRetryWidgetStyle::RetryButtonStyle' has a wrong offset!");

// Class ModioUI.ModioCommonTermsOfUseViewBase
// 0x0100 (0x0528 - 0x0428)
class UModioCommonTermsOfUseViewBase : public UModioCommonActivatableWidget
{
public:
	TMulticastInlineDelegate<void()>              OnSubmitClicked;                                   // 0x0428(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCancelClicked;                                   // 0x0438(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& URL)> OnLinkClicked;                                     // 0x0448(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FModioTerms                            Terms;                                             // 0x0458(0x00D0)(BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonTermsOfUseViewBase">();
	}
	static class UModioCommonTermsOfUseViewBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonTermsOfUseViewBase>();
	}
};
static_assert(alignof(UModioCommonTermsOfUseViewBase) == 0x000008, "Wrong alignment on UModioCommonTermsOfUseViewBase");
static_assert(sizeof(UModioCommonTermsOfUseViewBase) == 0x000528, "Wrong size on UModioCommonTermsOfUseViewBase");
static_assert(offsetof(UModioCommonTermsOfUseViewBase, OnSubmitClicked) == 0x000428, "Member 'UModioCommonTermsOfUseViewBase::OnSubmitClicked' has a wrong offset!");
static_assert(offsetof(UModioCommonTermsOfUseViewBase, OnCancelClicked) == 0x000438, "Member 'UModioCommonTermsOfUseViewBase::OnCancelClicked' has a wrong offset!");
static_assert(offsetof(UModioCommonTermsOfUseViewBase, OnLinkClicked) == 0x000448, "Member 'UModioCommonTermsOfUseViewBase::OnLinkClicked' has a wrong offset!");
static_assert(offsetof(UModioCommonTermsOfUseViewBase, Terms) == 0x000458, "Member 'UModioCommonTermsOfUseViewBase::Terms' has a wrong offset!");

// Class ModioUI.ModioCommonTermsOfUseView
// 0x0030 (0x0558 - 0x0528)
class UModioCommonTermsOfUseView final : public UModioCommonTermsOfUseViewBase
{
public:
	class UModioCommonTextBlock*                  TitleTextBlock;                                    // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  ContentTextBlock;                                  // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 TermsButton;                                       // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 PrivacyButton;                                     // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 CancelButton;                                      // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 SubmitButton;                                      // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonTermsOfUseView">();
	}
	static class UModioCommonTermsOfUseView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonTermsOfUseView>();
	}
};
static_assert(alignof(UModioCommonTermsOfUseView) == 0x000008, "Wrong alignment on UModioCommonTermsOfUseView");
static_assert(sizeof(UModioCommonTermsOfUseView) == 0x000558, "Wrong size on UModioCommonTermsOfUseView");
static_assert(offsetof(UModioCommonTermsOfUseView, TitleTextBlock) == 0x000528, "Member 'UModioCommonTermsOfUseView::TitleTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonTermsOfUseView, ContentTextBlock) == 0x000530, "Member 'UModioCommonTermsOfUseView::ContentTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonTermsOfUseView, TermsButton) == 0x000538, "Member 'UModioCommonTermsOfUseView::TermsButton' has a wrong offset!");
static_assert(offsetof(UModioCommonTermsOfUseView, PrivacyButton) == 0x000540, "Member 'UModioCommonTermsOfUseView::PrivacyButton' has a wrong offset!");
static_assert(offsetof(UModioCommonTermsOfUseView, CancelButton) == 0x000548, "Member 'UModioCommonTermsOfUseView::CancelButton' has a wrong offset!");
static_assert(offsetof(UModioCommonTermsOfUseView, SubmitButton) == 0x000550, "Member 'UModioCommonTermsOfUseView::SubmitButton' has a wrong offset!");

// Class ModioUI.ModioCommonExpandableArea
// 0x0030 (0x04F0 - 0x04C0)
class UModioCommonExpandableArea final : public UExpandableArea
{
public:
	TSubclassOf<class UModioCommonExpandableAreaStyle> ModioStyle;                                        // 0x04C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C8[0x18];                                     // 0x04C8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UModioCommonExpandableAreaStyle> CachedAppliedModioStyle;                           // 0x04E0(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E8[0x8];                                      // 0x04E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleOnFocusLost();
	void HandleOnFocusReceived();
	void SetStyle(TSubclassOf<class UModioCommonExpandableAreaStyle> InStyle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonExpandableArea">();
	}
	static class UModioCommonExpandableArea* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonExpandableArea>();
	}
};
static_assert(alignof(UModioCommonExpandableArea) == 0x000010, "Wrong alignment on UModioCommonExpandableArea");
static_assert(sizeof(UModioCommonExpandableArea) == 0x0004F0, "Wrong size on UModioCommonExpandableArea");
static_assert(offsetof(UModioCommonExpandableArea, ModioStyle) == 0x0004C0, "Member 'UModioCommonExpandableArea::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonExpandableArea, CachedAppliedModioStyle) == 0x0004E0, "Member 'UModioCommonExpandableArea::CachedAppliedModioStyle' has a wrong offset!");

// Class ModioUI.ModioCommonExpandableAreaStyle
// 0x0348 (0x0370 - 0x0028)
class UModioCommonExpandableAreaStyle final : public UObject
{
public:
	TSubclassOf<class UModioCommonTextStyle>      NormalLabelTextStyle;                              // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      SelectedLabelTextStyle;                            // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FExpandableAreaStyle                   Style;                                             // 0x0040(0x0200)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                            BorderBrush;                                       // 0x0240(0x00F0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateColor                            BorderColor;                                       // 0x0330(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bIsExpandedByDefault;                              // 0x0344(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_345[0x3];                                      // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxHeight;                                         // 0x0348(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMargin                                HeaderPadding;                                     // 0x034C(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                                AreaPadding;                                       // 0x035C(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonExpandableAreaStyle">();
	}
	static class UModioCommonExpandableAreaStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonExpandableAreaStyle>();
	}
};
static_assert(alignof(UModioCommonExpandableAreaStyle) == 0x000010, "Wrong alignment on UModioCommonExpandableAreaStyle");
static_assert(sizeof(UModioCommonExpandableAreaStyle) == 0x000370, "Wrong size on UModioCommonExpandableAreaStyle");
static_assert(offsetof(UModioCommonExpandableAreaStyle, NormalLabelTextStyle) == 0x000028, "Member 'UModioCommonExpandableAreaStyle::NormalLabelTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonExpandableAreaStyle, SelectedLabelTextStyle) == 0x000030, "Member 'UModioCommonExpandableAreaStyle::SelectedLabelTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonExpandableAreaStyle, Style) == 0x000040, "Member 'UModioCommonExpandableAreaStyle::Style' has a wrong offset!");
static_assert(offsetof(UModioCommonExpandableAreaStyle, BorderBrush) == 0x000240, "Member 'UModioCommonExpandableAreaStyle::BorderBrush' has a wrong offset!");
static_assert(offsetof(UModioCommonExpandableAreaStyle, BorderColor) == 0x000330, "Member 'UModioCommonExpandableAreaStyle::BorderColor' has a wrong offset!");
static_assert(offsetof(UModioCommonExpandableAreaStyle, bIsExpandedByDefault) == 0x000344, "Member 'UModioCommonExpandableAreaStyle::bIsExpandedByDefault' has a wrong offset!");
static_assert(offsetof(UModioCommonExpandableAreaStyle, MaxHeight) == 0x000348, "Member 'UModioCommonExpandableAreaStyle::MaxHeight' has a wrong offset!");
static_assert(offsetof(UModioCommonExpandableAreaStyle, HeaderPadding) == 0x00034C, "Member 'UModioCommonExpandableAreaStyle::HeaderPadding' has a wrong offset!");
static_assert(offsetof(UModioCommonExpandableAreaStyle, AreaPadding) == 0x00035C, "Member 'UModioCommonExpandableAreaStyle::AreaPadding' has a wrong offset!");

// Class ModioUI.ModioCommonFeaturedView
// 0x00F8 (0x0520 - 0x0428)
class UModioCommonFeaturedView : public UModioCommonModListBase
{
public:
	uint8                                         Pad_428[0x30];                                     // 0x0428(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UModioCommonFeaturedViewStyle> ModioStyle;                                        // 0x0458(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonSearchResultsView*          SearchResultsView;                                 // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FModioFilterParams                     PreviouslyAppliedFilter;                           // 0x0468(0x00A8)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	int64                                         OverriddenModsCount;                               // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bWasFilterAppliedAtLeastOnce;                      // 0x0518(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_519[0x7];                                      // 0x0519(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void RefreshList();
	void RefreshListByCategoryName(class FName InCategoryName);
	void RefreshListByFilter(const struct FModioFilterParams& Filter);
	void SetStyle(TSubclassOf<class UModioCommonFeaturedViewStyle> InStyle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonFeaturedView">();
	}
	static class UModioCommonFeaturedView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonFeaturedView>();
	}
};
static_assert(alignof(UModioCommonFeaturedView) == 0x000008, "Wrong alignment on UModioCommonFeaturedView");
static_assert(sizeof(UModioCommonFeaturedView) == 0x000520, "Wrong size on UModioCommonFeaturedView");
static_assert(offsetof(UModioCommonFeaturedView, ModioStyle) == 0x000458, "Member 'UModioCommonFeaturedView::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonFeaturedView, SearchResultsView) == 0x000460, "Member 'UModioCommonFeaturedView::SearchResultsView' has a wrong offset!");
static_assert(offsetof(UModioCommonFeaturedView, PreviouslyAppliedFilter) == 0x000468, "Member 'UModioCommonFeaturedView::PreviouslyAppliedFilter' has a wrong offset!");
static_assert(offsetof(UModioCommonFeaturedView, OverriddenModsCount) == 0x000510, "Member 'UModioCommonFeaturedView::OverriddenModsCount' has a wrong offset!");
static_assert(offsetof(UModioCommonFeaturedView, bWasFilterAppliedAtLeastOnce) == 0x000518, "Member 'UModioCommonFeaturedView::bWasFilterAppliedAtLeastOnce' has a wrong offset!");

// Class ModioUI.ModioCommonFeaturedViewStyle
// 0x0008 (0x0030 - 0x0028)
class UModioCommonFeaturedViewStyle final : public UObject
{
public:
	TSubclassOf<class UModioCommonSearchResultsViewStyle> SearchResultsViewStyle;                            // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonFeaturedViewStyle">();
	}
	static class UModioCommonFeaturedViewStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonFeaturedViewStyle>();
	}
};
static_assert(alignof(UModioCommonFeaturedViewStyle) == 0x000008, "Wrong alignment on UModioCommonFeaturedViewStyle");
static_assert(sizeof(UModioCommonFeaturedViewStyle) == 0x000030, "Wrong size on UModioCommonFeaturedViewStyle");
static_assert(offsetof(UModioCommonFeaturedViewStyle, SearchResultsViewStyle) == 0x000028, "Member 'UModioCommonFeaturedViewStyle::SearchResultsViewStyle' has a wrong offset!");

// Class ModioUI.ModioCommonFilteredModListView
// 0x01C0 (0x05E8 - 0x0428)
class UModioCommonFilteredModListView : public UModioCommonActivatableWidget
{
public:
	uint8                                         Pad_428[0xE8];                                     // 0x0428(0x00E8)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UModioCommonFilteredModListViewStyle> ModioStyle;                                        // 0x0510(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UListView*                              ModList;                                           // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           InitialScreenContainer;                            // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           NoResultsContainer;                                // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           PageNavigationContainer;                           // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 PreviousPageButton;                                // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 NextPageButton;                                    // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  CurrentPageTextBlock;                              // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  TotalPagesTextBlock;                               // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  TotalModsTextBlock;                                // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                ModListLoader;                                     // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonErrorWithRetryWidget*       ErrorWithRetryWidget;                              // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_570[0x18];                                     // 0x0570(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnSetModsFromModInfoListDynamicStarted;            // 0x0588(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_598[0x18];                                     // 0x0598(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnSetModsFromModInfoListDynamicFinished;           // 0x05B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bHasSearchedBefore;                                // 0x05C0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CurrentPageIndex;                                  // 0x05C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int64                                         TotalMods;                                         // 0x05D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int64                                         PageSize;                                          // 0x05D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int64                                         TotalPages;                                        // 0x05E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleNextPageClicked();
	void HandlePreviousPageClicked();
	void SetInitialScreenVisibility(bool bIsVisible);
	void SetNoResultsVisibility(bool bIsVisible);
	void SetPageNavigationVisibility(bool bIsVisible);
	void SetStyle(TSubclassOf<class UModioCommonFilteredModListViewStyle> InStyle);
	void UpdateInputActions();

	int32 GetNumItems() const;
	int32 GetNumItemsSelected() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonFilteredModListView">();
	}
	static class UModioCommonFilteredModListView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonFilteredModListView>();
	}
};
static_assert(alignof(UModioCommonFilteredModListView) == 0x000008, "Wrong alignment on UModioCommonFilteredModListView");
static_assert(sizeof(UModioCommonFilteredModListView) == 0x0005E8, "Wrong size on UModioCommonFilteredModListView");
static_assert(offsetof(UModioCommonFilteredModListView, ModioStyle) == 0x000510, "Member 'UModioCommonFilteredModListView::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListView, ModList) == 0x000518, "Member 'UModioCommonFilteredModListView::ModList' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListView, InitialScreenContainer) == 0x000520, "Member 'UModioCommonFilteredModListView::InitialScreenContainer' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListView, NoResultsContainer) == 0x000528, "Member 'UModioCommonFilteredModListView::NoResultsContainer' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListView, PageNavigationContainer) == 0x000530, "Member 'UModioCommonFilteredModListView::PageNavigationContainer' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListView, PreviousPageButton) == 0x000538, "Member 'UModioCommonFilteredModListView::PreviousPageButton' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListView, NextPageButton) == 0x000540, "Member 'UModioCommonFilteredModListView::NextPageButton' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListView, CurrentPageTextBlock) == 0x000548, "Member 'UModioCommonFilteredModListView::CurrentPageTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListView, TotalPagesTextBlock) == 0x000550, "Member 'UModioCommonFilteredModListView::TotalPagesTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListView, TotalModsTextBlock) == 0x000558, "Member 'UModioCommonFilteredModListView::TotalModsTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListView, ModListLoader) == 0x000560, "Member 'UModioCommonFilteredModListView::ModListLoader' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListView, ErrorWithRetryWidget) == 0x000568, "Member 'UModioCommonFilteredModListView::ErrorWithRetryWidget' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListView, OnSetModsFromModInfoListDynamicStarted) == 0x000588, "Member 'UModioCommonFilteredModListView::OnSetModsFromModInfoListDynamicStarted' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListView, OnSetModsFromModInfoListDynamicFinished) == 0x0005B0, "Member 'UModioCommonFilteredModListView::OnSetModsFromModInfoListDynamicFinished' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListView, bHasSearchedBefore) == 0x0005C0, "Member 'UModioCommonFilteredModListView::bHasSearchedBefore' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListView, CurrentPageIndex) == 0x0005C8, "Member 'UModioCommonFilteredModListView::CurrentPageIndex' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListView, TotalMods) == 0x0005D0, "Member 'UModioCommonFilteredModListView::TotalMods' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListView, PageSize) == 0x0005D8, "Member 'UModioCommonFilteredModListView::PageSize' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListView, TotalPages) == 0x0005E0, "Member 'UModioCommonFilteredModListView::TotalPages' has a wrong offset!");

// Class ModioUI.ModioCommonFilteredModListViewStyle
// 0x0030 (0x0058 - 0x0028)
class UModioCommonFilteredModListViewStyle final : public UObject
{
public:
	TSubclassOf<class UModioCommonListViewStyle>  ModListStyle;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    PreviousPageButtonStyle;                           // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    NextPageButtonStyle;                               // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      CurrentPageTextBlockStyle;                         // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      TotalPagesTextBlockStyle;                          // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      TotalModsTextBlockStyle;                           // 0x0050(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonFilteredModListViewStyle">();
	}
	static class UModioCommonFilteredModListViewStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonFilteredModListViewStyle>();
	}
};
static_assert(alignof(UModioCommonFilteredModListViewStyle) == 0x000008, "Wrong alignment on UModioCommonFilteredModListViewStyle");
static_assert(sizeof(UModioCommonFilteredModListViewStyle) == 0x000058, "Wrong size on UModioCommonFilteredModListViewStyle");
static_assert(offsetof(UModioCommonFilteredModListViewStyle, ModListStyle) == 0x000028, "Member 'UModioCommonFilteredModListViewStyle::ModListStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListViewStyle, PreviousPageButtonStyle) == 0x000030, "Member 'UModioCommonFilteredModListViewStyle::PreviousPageButtonStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListViewStyle, NextPageButtonStyle) == 0x000038, "Member 'UModioCommonFilteredModListViewStyle::NextPageButtonStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListViewStyle, CurrentPageTextBlockStyle) == 0x000040, "Member 'UModioCommonFilteredModListViewStyle::CurrentPageTextBlockStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListViewStyle, TotalPagesTextBlockStyle) == 0x000048, "Member 'UModioCommonFilteredModListViewStyle::TotalPagesTextBlockStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteredModListViewStyle, TotalModsTextBlockStyle) == 0x000050, "Member 'UModioCommonFilteredModListViewStyle::TotalModsTextBlockStyle' has a wrong offset!");

// Class ModioUI.ModioCommonFilteringView
// 0x0010 (0x0438 - 0x0428)
class UModioCommonFilteringView final : public UModioCommonActivatableWidget
{
public:
	class UPanelWidget*                           FilteringTagsContainer;                            // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UModioCommonModTagGroupList> TagGroupListClass;                                 // 0x0430(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void AddModTagInfo(const struct FModioModTagInfo& ModTagInfo);
	void ResetFiltering();
	bool SetSelectedTagGroupValues(const TArray<class FString>& TagGroupValues, bool bSelect);
	void SynchronizeFilterParams(const TArray<class FString>& PreviouslySelectedTagGroupValues);

	struct FModioModCategoryParams GetFilterParamsWrapper() const;
	bool GetSelectedTagGroupValues(TArray<class FString>& OutSelectedTagGroupValues) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonFilteringView">();
	}
	static class UModioCommonFilteringView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonFilteringView>();
	}
};
static_assert(alignof(UModioCommonFilteringView) == 0x000008, "Wrong alignment on UModioCommonFilteringView");
static_assert(sizeof(UModioCommonFilteringView) == 0x000438, "Wrong size on UModioCommonFilteringView");
static_assert(offsetof(UModioCommonFilteringView, FilteringTagsContainer) == 0x000428, "Member 'UModioCommonFilteringView::FilteringTagsContainer' has a wrong offset!");
static_assert(offsetof(UModioCommonFilteringView, TagGroupListClass) == 0x000430, "Member 'UModioCommonFilteringView::TagGroupListClass' has a wrong offset!");

// Class ModioUI.ModioCommonModEntryBase
// 0x0090 (0x04B8 - 0x0428)
class UModioCommonModEntryBase : public UModioCommonActivatableWidget
{
public:
	uint8                                         Pad_428[0x78];                                     // 0x0428(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	class UModioCommonModOperationTrackerUserWidget* ModOperationTrackerUserWidget;                     // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonModOperationTrackerWidget*  ModOperationTrackerWidget;                         // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4B0[0x8];                                      // 0x04B0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DeselectModListItem();
	void SelectModListItem();
	void UpdateInputActions();
	void UpdateStyling(bool bIsListItemSelected);

	bool IsModListItemSelected() const;
	bool IsModListItemValid() const;
	bool IsUserAuthenticated() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModEntryBase">();
	}
	static class UModioCommonModEntryBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModEntryBase>();
	}
};
static_assert(alignof(UModioCommonModEntryBase) == 0x000008, "Wrong alignment on UModioCommonModEntryBase");
static_assert(sizeof(UModioCommonModEntryBase) == 0x0004B8, "Wrong size on UModioCommonModEntryBase");
static_assert(offsetof(UModioCommonModEntryBase, ModOperationTrackerUserWidget) == 0x0004A0, "Member 'UModioCommonModEntryBase::ModOperationTrackerUserWidget' has a wrong offset!");
static_assert(offsetof(UModioCommonModEntryBase, ModOperationTrackerWidget) == 0x0004A8, "Member 'UModioCommonModEntryBase::ModOperationTrackerWidget' has a wrong offset!");

// Class ModioUI.ModioCommonGenericModEntry
// 0x00E8 (0x05A0 - 0x04B8)
class UModioCommonGenericModEntry : public UModioCommonModEntryBase
{
public:
	TSubclassOf<class UModioCommonGenericModEntryStyle> ModioStyle;                                        // 0x04B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonBorder*                     Background;                                        // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           ForegroundContainer;                               // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonDynamicImage*               ModImage;                                          // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonRichTextBlock*              ModNameTextBlock;                                  // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonRichTextBlock*              OperationLabelTextBlock;                           // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonRichTextBlock*              OperationDetailsTextBlock;                         // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonRichTextBlock*              SpeedLabelTextBlock;                               // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonRichTextBlock*              SpeedDetailsTextBlock;                             // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonRichTextBlock*              DownloadsLabelTextBlock;                           // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonRichTextBlock*              DownloadsDetailsTextBlock;                         // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonRichTextBlock*              SizeLabelTextBlock;                                // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonRichTextBlock*              SizeDetailsTextBlock;                              // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonRichTextBlock*              RatingPercentageTextBlock;                         // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonRichTextBlock*              RatingPositiveTextBlock;                           // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonRichTextBlock*              RatingNegativeTextBlock;                           // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 SubscribeButton;                                   // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 CancelButton;                                      // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 EnableButton;                                      // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 DisableButton;                                     // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 OpenModDetailsButton;                              // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 ForceUninstallButton;                              // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonRichTextBlock*              PercentProgressTextBlock;                          // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonProgressBar*                PercentProgressBar;                                // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MinDecimalsFileSize;                               // 0x0578(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxDecimalsFileSize;                               // 0x057C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MinDecimalsProgress;                               // 0x0580(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxDecimalsProgress;                               // 0x0584(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MinDecimalsSpeed;                                  // 0x0588(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxDecimalsSpeed;                                  // 0x058C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_590[0x10];                                     // 0x0590(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleCancelClicked();
	void HandleForceUninstallClicked();
	void HandleOpenModDetailsClicked();
	void HandleSubscribeClicked();
	void HandleSwitchEnabledClicked();
	void OnRatingSubmissionComplete(const struct FModioErrorCode& errorCode, EModioRating Rating);
	void SetStyle(TSubclassOf<class UModioCommonGenericModEntryStyle> InStyle);
	void SwitchCancelButtonVisibility(bool bIsVisible);
	void SwitchDisableButtonVisibility(bool bIsVisible);
	void SwitchEnableButtonVisibility(bool bIsVisible);
	void SwitchForceUninstallButtonVisibility(bool bIsVisible);
	void SwitchSpeedVisibility(bool bIsVisible);
	void UpdateOperationProgressBytes(const struct FModioUnsigned64& Current, const struct FModioUnsigned64& Total);
	void UpdateOperationProgressPercent(float InPercent);
	void UpdateSpeed(const struct FModioUnsigned64& DeltaBytes, double DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonGenericModEntry">();
	}
	static class UModioCommonGenericModEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonGenericModEntry>();
	}
};
static_assert(alignof(UModioCommonGenericModEntry) == 0x000008, "Wrong alignment on UModioCommonGenericModEntry");
static_assert(sizeof(UModioCommonGenericModEntry) == 0x0005A0, "Wrong size on UModioCommonGenericModEntry");
static_assert(offsetof(UModioCommonGenericModEntry, ModioStyle) == 0x0004B8, "Member 'UModioCommonGenericModEntry::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, Background) == 0x0004C0, "Member 'UModioCommonGenericModEntry::Background' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, ForegroundContainer) == 0x0004C8, "Member 'UModioCommonGenericModEntry::ForegroundContainer' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, ModImage) == 0x0004D0, "Member 'UModioCommonGenericModEntry::ModImage' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, ModNameTextBlock) == 0x0004D8, "Member 'UModioCommonGenericModEntry::ModNameTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, OperationLabelTextBlock) == 0x0004E0, "Member 'UModioCommonGenericModEntry::OperationLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, OperationDetailsTextBlock) == 0x0004E8, "Member 'UModioCommonGenericModEntry::OperationDetailsTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, SpeedLabelTextBlock) == 0x0004F0, "Member 'UModioCommonGenericModEntry::SpeedLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, SpeedDetailsTextBlock) == 0x0004F8, "Member 'UModioCommonGenericModEntry::SpeedDetailsTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, DownloadsLabelTextBlock) == 0x000500, "Member 'UModioCommonGenericModEntry::DownloadsLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, DownloadsDetailsTextBlock) == 0x000508, "Member 'UModioCommonGenericModEntry::DownloadsDetailsTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, SizeLabelTextBlock) == 0x000510, "Member 'UModioCommonGenericModEntry::SizeLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, SizeDetailsTextBlock) == 0x000518, "Member 'UModioCommonGenericModEntry::SizeDetailsTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, RatingPercentageTextBlock) == 0x000520, "Member 'UModioCommonGenericModEntry::RatingPercentageTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, RatingPositiveTextBlock) == 0x000528, "Member 'UModioCommonGenericModEntry::RatingPositiveTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, RatingNegativeTextBlock) == 0x000530, "Member 'UModioCommonGenericModEntry::RatingNegativeTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, SubscribeButton) == 0x000538, "Member 'UModioCommonGenericModEntry::SubscribeButton' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, CancelButton) == 0x000540, "Member 'UModioCommonGenericModEntry::CancelButton' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, EnableButton) == 0x000548, "Member 'UModioCommonGenericModEntry::EnableButton' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, DisableButton) == 0x000550, "Member 'UModioCommonGenericModEntry::DisableButton' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, OpenModDetailsButton) == 0x000558, "Member 'UModioCommonGenericModEntry::OpenModDetailsButton' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, ForceUninstallButton) == 0x000560, "Member 'UModioCommonGenericModEntry::ForceUninstallButton' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, PercentProgressTextBlock) == 0x000568, "Member 'UModioCommonGenericModEntry::PercentProgressTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, PercentProgressBar) == 0x000570, "Member 'UModioCommonGenericModEntry::PercentProgressBar' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, MinDecimalsFileSize) == 0x000578, "Member 'UModioCommonGenericModEntry::MinDecimalsFileSize' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, MaxDecimalsFileSize) == 0x00057C, "Member 'UModioCommonGenericModEntry::MaxDecimalsFileSize' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, MinDecimalsProgress) == 0x000580, "Member 'UModioCommonGenericModEntry::MinDecimalsProgress' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, MaxDecimalsProgress) == 0x000584, "Member 'UModioCommonGenericModEntry::MaxDecimalsProgress' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, MinDecimalsSpeed) == 0x000588, "Member 'UModioCommonGenericModEntry::MinDecimalsSpeed' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntry, MaxDecimalsSpeed) == 0x00058C, "Member 'UModioCommonGenericModEntry::MaxDecimalsSpeed' has a wrong offset!");

// Class ModioUI.ModioCommonGenericModEntryStateStyle
// 0x00B0 (0x00D8 - 0x0028)
class UModioCommonGenericModEntryStateStyle final : public UObject
{
public:
	TSubclassOf<class UModioCommonModOperationTrackerUserWidgetStyle> ModOperationTrackerStyle;                          // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonBorderStyle>    BackgroundStyle;                                   // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonDynamicImageStyle> ModImageStyle;                                     // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonRichTextStyle>  ModNameTextStyle;                                  // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonRichTextStyle>  OperationLabelTextStyle;                           // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonRichTextStyle>  OperationDetailsTextStyle;                         // 0x0050(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonRichTextStyle>  SpeedLabelTextStyle;                               // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonRichTextStyle>  SpeedDetailsTextStyle;                             // 0x0060(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonRichTextStyle>  DownloadsLabelTextStyle;                           // 0x0068(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonRichTextStyle>  DownloadsDetailsTextStyle;                         // 0x0070(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonRichTextStyle>  SizeLabelTextStyle;                                // 0x0078(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonRichTextStyle>  SizeDetailsTextStyle;                              // 0x0080(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonRichTextStyle>  RatingPercentageTextStyle;                         // 0x0088(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonRichTextStyle>  RatingPositiveTextStyle;                           // 0x0090(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonRichTextStyle>  RatingNegativeTextStyle;                           // 0x0098(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonRichTextStyle>  PercentProgressTextStyle;                          // 0x00A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    SubscribeButtonStyle;                              // 0x00A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    CancelButtonStyle;                                 // 0x00B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    EnableButtonStyle;                                 // 0x00B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    DisableButtonStyle;                                // 0x00C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    OpenModDetailsButtonStyle;                         // 0x00C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonProgressBarStyle> PercentProgressBarStyle;                           // 0x00D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonGenericModEntryStateStyle">();
	}
	static class UModioCommonGenericModEntryStateStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonGenericModEntryStateStyle>();
	}
};
static_assert(alignof(UModioCommonGenericModEntryStateStyle) == 0x000008, "Wrong alignment on UModioCommonGenericModEntryStateStyle");
static_assert(sizeof(UModioCommonGenericModEntryStateStyle) == 0x0000D8, "Wrong size on UModioCommonGenericModEntryStateStyle");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, ModOperationTrackerStyle) == 0x000028, "Member 'UModioCommonGenericModEntryStateStyle::ModOperationTrackerStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, BackgroundStyle) == 0x000030, "Member 'UModioCommonGenericModEntryStateStyle::BackgroundStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, ModImageStyle) == 0x000038, "Member 'UModioCommonGenericModEntryStateStyle::ModImageStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, ModNameTextStyle) == 0x000040, "Member 'UModioCommonGenericModEntryStateStyle::ModNameTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, OperationLabelTextStyle) == 0x000048, "Member 'UModioCommonGenericModEntryStateStyle::OperationLabelTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, OperationDetailsTextStyle) == 0x000050, "Member 'UModioCommonGenericModEntryStateStyle::OperationDetailsTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, SpeedLabelTextStyle) == 0x000058, "Member 'UModioCommonGenericModEntryStateStyle::SpeedLabelTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, SpeedDetailsTextStyle) == 0x000060, "Member 'UModioCommonGenericModEntryStateStyle::SpeedDetailsTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, DownloadsLabelTextStyle) == 0x000068, "Member 'UModioCommonGenericModEntryStateStyle::DownloadsLabelTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, DownloadsDetailsTextStyle) == 0x000070, "Member 'UModioCommonGenericModEntryStateStyle::DownloadsDetailsTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, SizeLabelTextStyle) == 0x000078, "Member 'UModioCommonGenericModEntryStateStyle::SizeLabelTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, SizeDetailsTextStyle) == 0x000080, "Member 'UModioCommonGenericModEntryStateStyle::SizeDetailsTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, RatingPercentageTextStyle) == 0x000088, "Member 'UModioCommonGenericModEntryStateStyle::RatingPercentageTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, RatingPositiveTextStyle) == 0x000090, "Member 'UModioCommonGenericModEntryStateStyle::RatingPositiveTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, RatingNegativeTextStyle) == 0x000098, "Member 'UModioCommonGenericModEntryStateStyle::RatingNegativeTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, PercentProgressTextStyle) == 0x0000A0, "Member 'UModioCommonGenericModEntryStateStyle::PercentProgressTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, SubscribeButtonStyle) == 0x0000A8, "Member 'UModioCommonGenericModEntryStateStyle::SubscribeButtonStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, CancelButtonStyle) == 0x0000B0, "Member 'UModioCommonGenericModEntryStateStyle::CancelButtonStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, EnableButtonStyle) == 0x0000B8, "Member 'UModioCommonGenericModEntryStateStyle::EnableButtonStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, DisableButtonStyle) == 0x0000C0, "Member 'UModioCommonGenericModEntryStateStyle::DisableButtonStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, OpenModDetailsButtonStyle) == 0x0000C8, "Member 'UModioCommonGenericModEntryStateStyle::OpenModDetailsButtonStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStateStyle, PercentProgressBarStyle) == 0x0000D0, "Member 'UModioCommonGenericModEntryStateStyle::PercentProgressBarStyle' has a wrong offset!");

// Class ModioUI.ModioCommonGenericModEntryStyle
// 0x0010 (0x0038 - 0x0028)
class UModioCommonGenericModEntryStyle final : public UObject
{
public:
	TSubclassOf<class UModioCommonGenericModEntryStateStyle> NormalStyle;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonGenericModEntryStateStyle> SelectedStyle;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonGenericModEntryStyle">();
	}
	static class UModioCommonGenericModEntryStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonGenericModEntryStyle>();
	}
};
static_assert(alignof(UModioCommonGenericModEntryStyle) == 0x000008, "Wrong alignment on UModioCommonGenericModEntryStyle");
static_assert(sizeof(UModioCommonGenericModEntryStyle) == 0x000038, "Wrong size on UModioCommonGenericModEntryStyle");
static_assert(offsetof(UModioCommonGenericModEntryStyle, NormalStyle) == 0x000028, "Member 'UModioCommonGenericModEntryStyle::NormalStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonGenericModEntryStyle, SelectedStyle) == 0x000030, "Member 'UModioCommonGenericModEntryStyle::SelectedStyle' has a wrong offset!");

// Class ModioUI.ModioCommonListView
// 0x0010 (0x0D70 - 0x0D60)
class UModioCommonListView : public UCommonListView
{
public:
	TSubclassOf<class UModioCommonListViewStyle>  ModioStyle;                                        // 0x0D60(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D68[0x8];                                      // 0x0D68(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetStyle(TSubclassOf<class UModioCommonListViewStyle> InStyle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonListView">();
	}
	static class UModioCommonListView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonListView>();
	}
};
static_assert(alignof(UModioCommonListView) == 0x000010, "Wrong alignment on UModioCommonListView");
static_assert(sizeof(UModioCommonListView) == 0x000D70, "Wrong size on UModioCommonListView");
static_assert(offsetof(UModioCommonListView, ModioStyle) == 0x000D60, "Member 'UModioCommonListView::ModioStyle' has a wrong offset!");

// Class ModioUI.ModioCommonListViewStyle
// 0x09A8 (0x09D0 - 0x0028)
class UModioCommonListViewStyle final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTableViewStyle                        WidgetStyle;                                       // 0x0030(0x0100)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScrollBarStyle                        ScrollBarStyle;                                    // 0x0130(0x0890)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EOrientation                                  Orientation;                                       // 0x09C0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESelectionMode                                SelectionMode;                                     // 0x09C1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C2[0xE];                                      // 0x09C2(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonListViewStyle">();
	}
	static class UModioCommonListViewStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonListViewStyle>();
	}
};
static_assert(alignof(UModioCommonListViewStyle) == 0x000010, "Wrong alignment on UModioCommonListViewStyle");
static_assert(sizeof(UModioCommonListViewStyle) == 0x0009D0, "Wrong size on UModioCommonListViewStyle");
static_assert(offsetof(UModioCommonListViewStyle, WidgetStyle) == 0x000030, "Member 'UModioCommonListViewStyle::WidgetStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonListViewStyle, ScrollBarStyle) == 0x000130, "Member 'UModioCommonListViewStyle::ScrollBarStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonListViewStyle, Orientation) == 0x0009C0, "Member 'UModioCommonListViewStyle::Orientation' has a wrong offset!");
static_assert(offsetof(UModioCommonListViewStyle, SelectionMode) == 0x0009C1, "Member 'UModioCommonListViewStyle::SelectionMode' has a wrong offset!");

// Class ModioUI.ModioCommonModBrowserBase
// 0x0028 (0x0450 - 0x0428)
class UModioCommonModBrowserBase : public UModioCommonActivatableWidget
{
public:
	uint8                                         Pad_428[0x18];                                     // 0x0428(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UModioCommonModBrowserBaseStyle> ModioStyle;                                        // 0x0440(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetStyle(TSubclassOf<class UModioCommonModBrowserBaseStyle> InStyle);

	bool IsUserAuthenticated() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModBrowserBase">();
	}
	static class UModioCommonModBrowserBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModBrowserBase>();
	}
};
static_assert(alignof(UModioCommonModBrowserBase) == 0x000008, "Wrong alignment on UModioCommonModBrowserBase");
static_assert(sizeof(UModioCommonModBrowserBase) == 0x000450, "Wrong size on UModioCommonModBrowserBase");
static_assert(offsetof(UModioCommonModBrowserBase, ModioStyle) == 0x000440, "Member 'UModioCommonModBrowserBase::ModioStyle' has a wrong offset!");

// Class ModioUI.ModioCommonModBrowser
// 0x00B0 (0x0500 - 0x0450)
class UModioCommonModBrowser : public UModioCommonModBrowserBase
{
public:
	class UWidget*                                NotificationController;                            // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonUserProfileBase*            UserProfile;                                       // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTabListWidgetBase*          TabList;                                           // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonActivatableWidgetStack*     ContentStack;                                      // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonActivatableWidgetStack*     AuthStack;                                         // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonActivatableWidgetStack*     ReportStack;                                       // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonActivatableWidgetStack*     RightTabStack;                                     // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonActivatableWidgetStack*     DialogStack;                                       // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonActionBar*                  ActionBar;                                         // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_498[0x68];                                     // 0x0498(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool AddContentForTab(class FName TabNameID, TSubclassOf<class UModioCommonActivatableWidget> ContentClass, class UModioCommonActivatableWidget** OutContent);
	bool AddEmptyTab(class FName TabNameID, const class FText& TabText);
	bool AddTab(class FName TabNameID, const class FText& TabText, TSubclassOf<class UModioCommonActivatableWidget> ContentClass);
	void ClearTabs();
	void HandleViewChanged();
	bool HideCollectionView();
	bool HideFeaturedView();
	bool HideModDetailsView();
	bool HideQuickAccessView();
	bool HideReportMod();
	bool HideSearchView();
	void RemoveTab(class FName TabNameID);
	bool ShowCollectionView();
	bool ShowFeaturedView();
	bool ShowModDetailsView(const struct FModioModInfo& ModInfo);
	bool ShowQuickAccessView();
	bool ShowSearchView(EModioCommonSearchViewType SearchType, const struct FModioModCategoryParams& CurrentFilterParams);

	bool GetViewFromTabNameID(class FName TabNameID, TSubclassOf<class UModioCommonActivatableWidget>* OutView) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModBrowser">();
	}
	static class UModioCommonModBrowser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModBrowser>();
	}
};
static_assert(alignof(UModioCommonModBrowser) == 0x000008, "Wrong alignment on UModioCommonModBrowser");
static_assert(sizeof(UModioCommonModBrowser) == 0x000500, "Wrong size on UModioCommonModBrowser");
static_assert(offsetof(UModioCommonModBrowser, NotificationController) == 0x000450, "Member 'UModioCommonModBrowser::NotificationController' has a wrong offset!");
static_assert(offsetof(UModioCommonModBrowser, UserProfile) == 0x000458, "Member 'UModioCommonModBrowser::UserProfile' has a wrong offset!");
static_assert(offsetof(UModioCommonModBrowser, TabList) == 0x000460, "Member 'UModioCommonModBrowser::TabList' has a wrong offset!");
static_assert(offsetof(UModioCommonModBrowser, ContentStack) == 0x000468, "Member 'UModioCommonModBrowser::ContentStack' has a wrong offset!");
static_assert(offsetof(UModioCommonModBrowser, AuthStack) == 0x000470, "Member 'UModioCommonModBrowser::AuthStack' has a wrong offset!");
static_assert(offsetof(UModioCommonModBrowser, ReportStack) == 0x000478, "Member 'UModioCommonModBrowser::ReportStack' has a wrong offset!");
static_assert(offsetof(UModioCommonModBrowser, RightTabStack) == 0x000480, "Member 'UModioCommonModBrowser::RightTabStack' has a wrong offset!");
static_assert(offsetof(UModioCommonModBrowser, DialogStack) == 0x000488, "Member 'UModioCommonModBrowser::DialogStack' has a wrong offset!");
static_assert(offsetof(UModioCommonModBrowser, ActionBar) == 0x000490, "Member 'UModioCommonModBrowser::ActionBar' has a wrong offset!");

// Class ModioUI.ModioCommonModBrowserBaseStyle
// 0x0020 (0x0048 - 0x0028)
class UModioCommonModBrowserBaseStyle : public UObject
{
public:
	TSubclassOf<class UModioCommonModDetailsViewBase> ModDetailsClass;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonAuthViewBase>   UserAuthClass;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonReportViewBase> ReportClass;                                       // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonDialogViewBase> DialogClass;                                       // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModBrowserBaseStyle">();
	}
	static class UModioCommonModBrowserBaseStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModBrowserBaseStyle>();
	}
};
static_assert(alignof(UModioCommonModBrowserBaseStyle) == 0x000008, "Wrong alignment on UModioCommonModBrowserBaseStyle");
static_assert(sizeof(UModioCommonModBrowserBaseStyle) == 0x000048, "Wrong size on UModioCommonModBrowserBaseStyle");
static_assert(offsetof(UModioCommonModBrowserBaseStyle, ModDetailsClass) == 0x000028, "Member 'UModioCommonModBrowserBaseStyle::ModDetailsClass' has a wrong offset!");
static_assert(offsetof(UModioCommonModBrowserBaseStyle, UserAuthClass) == 0x000030, "Member 'UModioCommonModBrowserBaseStyle::UserAuthClass' has a wrong offset!");
static_assert(offsetof(UModioCommonModBrowserBaseStyle, ReportClass) == 0x000038, "Member 'UModioCommonModBrowserBaseStyle::ReportClass' has a wrong offset!");
static_assert(offsetof(UModioCommonModBrowserBaseStyle, DialogClass) == 0x000040, "Member 'UModioCommonModBrowserBaseStyle::DialogClass' has a wrong offset!");

// Class ModioUI.ModioCommonModBrowserStyle
// 0x0030 (0x0078 - 0x0048)
class UModioCommonModBrowserStyle final : public UModioCommonModBrowserBaseStyle
{
public:
	TSubclassOf<class UModioCommonTabButtonBase>  TabButtonClass;                                    // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTabButtonStyle> TabButtonStyle;                                    // 0x0050(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonModListBase>    FeaturedViewClass;                                 // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonModListBase>    CollectionViewClass;                               // 0x0060(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonQuickAccessViewBase> QuickAccessViewClass;                              // 0x0068(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonSearchViewBase> SearchViewClass;                                   // 0x0070(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModBrowserStyle">();
	}
	static class UModioCommonModBrowserStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModBrowserStyle>();
	}
};
static_assert(alignof(UModioCommonModBrowserStyle) == 0x000008, "Wrong alignment on UModioCommonModBrowserStyle");
static_assert(sizeof(UModioCommonModBrowserStyle) == 0x000078, "Wrong size on UModioCommonModBrowserStyle");
static_assert(offsetof(UModioCommonModBrowserStyle, TabButtonClass) == 0x000048, "Member 'UModioCommonModBrowserStyle::TabButtonClass' has a wrong offset!");
static_assert(offsetof(UModioCommonModBrowserStyle, TabButtonStyle) == 0x000050, "Member 'UModioCommonModBrowserStyle::TabButtonStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModBrowserStyle, FeaturedViewClass) == 0x000058, "Member 'UModioCommonModBrowserStyle::FeaturedViewClass' has a wrong offset!");
static_assert(offsetof(UModioCommonModBrowserStyle, CollectionViewClass) == 0x000060, "Member 'UModioCommonModBrowserStyle::CollectionViewClass' has a wrong offset!");
static_assert(offsetof(UModioCommonModBrowserStyle, QuickAccessViewClass) == 0x000068, "Member 'UModioCommonModBrowserStyle::QuickAccessViewClass' has a wrong offset!");
static_assert(offsetof(UModioCommonModBrowserStyle, SearchViewClass) == 0x000070, "Member 'UModioCommonModBrowserStyle::SearchViewClass' has a wrong offset!");

// Class ModioUI.ModioCommonModGalleryEntryStyle
// 0x0010 (0x0038 - 0x0028)
class UModioCommonModGalleryEntryStyle final : public UObject
{
public:
	TSubclassOf<class UModioCommonDynamicImageStyle> ModImageNormalStyle;                               // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonDynamicImageStyle> ModImageSelectedStyle;                             // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModGalleryEntryStyle">();
	}
	static class UModioCommonModGalleryEntryStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModGalleryEntryStyle>();
	}
};
static_assert(alignof(UModioCommonModGalleryEntryStyle) == 0x000008, "Wrong alignment on UModioCommonModGalleryEntryStyle");
static_assert(sizeof(UModioCommonModGalleryEntryStyle) == 0x000038, "Wrong size on UModioCommonModGalleryEntryStyle");
static_assert(offsetof(UModioCommonModGalleryEntryStyle, ModImageNormalStyle) == 0x000028, "Member 'UModioCommonModGalleryEntryStyle::ModImageNormalStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModGalleryEntryStyle, ModImageSelectedStyle) == 0x000030, "Member 'UModioCommonModGalleryEntryStyle::ModImageSelectedStyle' has a wrong offset!");

// Class ModioUI.ModioCommonModGalleryView
// 0x0068 (0x0490 - 0x0428)
class UModioCommonModGalleryView final : public UModioCommonActivatableWidget
{
public:
	uint8                                         Pad_428[0x20];                                     // 0x0428(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UModioCommonModGalleryViewStyle> ModioStyle;                                        // 0x0448(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EModioGallerySize                             GallerySize;                                       // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EModioLogoSize                                LogoSize;                                          // 0x0451(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_452[0x6];                                      // 0x0452(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UModioCommonListView*                   ImageNavButtons;                                   // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonDynamicImage*               SelectedGalleryImage;                              // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 PreviousButton;                                    // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 NextButton;                                        // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                ModGalleryLoader;                                  // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonErrorWithRetryWidget*       ErrorWithRetryWidget;                              // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddDefaultGalleryImage();
	void AddGalleryImage(int32 ImageGalleryIndex);
	int32 GetNumGalleryImages();
	int32 GetSelectedImageGalleryIndex();
	void GoToNextImage();
	void GoToPreviousImage();
	void RefreshGallery();
	void SetNextButtonVisibility(bool bIsVisible);
	void SetPreviousButtonVisibility(bool bIsVisible);
	void SetStyle(TSubclassOf<class UModioCommonModGalleryViewStyle> InStyle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModGalleryView">();
	}
	static class UModioCommonModGalleryView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModGalleryView>();
	}
};
static_assert(alignof(UModioCommonModGalleryView) == 0x000008, "Wrong alignment on UModioCommonModGalleryView");
static_assert(sizeof(UModioCommonModGalleryView) == 0x000490, "Wrong size on UModioCommonModGalleryView");
static_assert(offsetof(UModioCommonModGalleryView, ModioStyle) == 0x000448, "Member 'UModioCommonModGalleryView::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModGalleryView, GallerySize) == 0x000450, "Member 'UModioCommonModGalleryView::GallerySize' has a wrong offset!");
static_assert(offsetof(UModioCommonModGalleryView, LogoSize) == 0x000451, "Member 'UModioCommonModGalleryView::LogoSize' has a wrong offset!");
static_assert(offsetof(UModioCommonModGalleryView, ImageNavButtons) == 0x000458, "Member 'UModioCommonModGalleryView::ImageNavButtons' has a wrong offset!");
static_assert(offsetof(UModioCommonModGalleryView, SelectedGalleryImage) == 0x000460, "Member 'UModioCommonModGalleryView::SelectedGalleryImage' has a wrong offset!");
static_assert(offsetof(UModioCommonModGalleryView, PreviousButton) == 0x000468, "Member 'UModioCommonModGalleryView::PreviousButton' has a wrong offset!");
static_assert(offsetof(UModioCommonModGalleryView, NextButton) == 0x000470, "Member 'UModioCommonModGalleryView::NextButton' has a wrong offset!");
static_assert(offsetof(UModioCommonModGalleryView, ModGalleryLoader) == 0x000478, "Member 'UModioCommonModGalleryView::ModGalleryLoader' has a wrong offset!");
static_assert(offsetof(UModioCommonModGalleryView, ErrorWithRetryWidget) == 0x000480, "Member 'UModioCommonModGalleryView::ErrorWithRetryWidget' has a wrong offset!");

// Class ModioUI.ModioCommonModGalleryViewStyle
// 0x0008 (0x0030 - 0x0028)
class UModioCommonModGalleryViewStyle final : public UObject
{
public:
	TSubclassOf<class UModioCommonDynamicImageStyle> GalleryImageStyle;                                 // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModGalleryViewStyle">();
	}
	static class UModioCommonModGalleryViewStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModGalleryViewStyle>();
	}
};
static_assert(alignof(UModioCommonModGalleryViewStyle) == 0x000008, "Wrong alignment on UModioCommonModGalleryViewStyle");
static_assert(sizeof(UModioCommonModGalleryViewStyle) == 0x000030, "Wrong size on UModioCommonModGalleryViewStyle");
static_assert(offsetof(UModioCommonModGalleryViewStyle, GalleryImageStyle) == 0x000028, "Member 'UModioCommonModGalleryViewStyle::GalleryImageStyle' has a wrong offset!");

// Class ModioUI.ModioCommonModListView
// 0x00C0 (0x0E30 - 0x0D70)
class UModioCommonModListView final : public UModioCommonListView
{
public:
	uint8                                         Pad_D70[0xB0];                                     // 0x0D70(0x00B0)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bFocusOnceListIsPopulatedRequested;                // 0x0E20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E21[0xF];                                      // 0x0E21(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModListView">();
	}
	static class UModioCommonModListView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModListView>();
	}
};
static_assert(alignof(UModioCommonModListView) == 0x000010, "Wrong alignment on UModioCommonModListView");
static_assert(sizeof(UModioCommonModListView) == 0x000E30, "Wrong size on UModioCommonModListView");
static_assert(offsetof(UModioCommonModListView, bFocusOnceListIsPopulatedRequested) == 0x000E20, "Member 'UModioCommonModListView::bFocusOnceListIsPopulatedRequested' has a wrong offset!");

// Class ModioUI.ModioCommonModListViewInterface
// 0x0000 (0x0028 - 0x0028)
class IModioCommonModListViewInterface final : public IInterface
{
public:
	class UWidget* GetDesiredListFocusTarget(bool bIncludePreviouslySelected, bool bIncludeFirstItem);
	bool GetEntryWidgetFromItem(class UObject* InItem, class UWidget** OutEntryWidget);
	bool GetSelectedModItem(bool bIncludePreviouslySelected, class UObject** OutModItem);
	void RequestFullClearSelection(bool bResetPreviouslySelected);
	void SetFocusOnceListIsPopulated(bool bFocus);
	void SetModSelectionByID(const struct FModioModID& ModId);
	void SetModsFromModCollectionEntryArray(const TArray<struct FModioModCollectionEntry>& inArray, bool bAddToExisting);
	void SetModsFromModInfoArray(const TArray<struct FModioModInfo>& inArray, bool bAddToExisting);
	void SetModsFromModInfoList(const struct FModioModInfoList& InList, bool bAddToExisting);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModListViewInterface">();
	}
	static class IModioCommonModListViewInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IModioCommonModListViewInterface>();
	}
};
static_assert(alignof(IModioCommonModListViewInterface) == 0x000008, "Wrong alignment on IModioCommonModListViewInterface");
static_assert(sizeof(IModioCommonModListViewInterface) == 0x000028, "Wrong size on IModioCommonModListViewInterface");

// Class ModioUI.ModioCommonModOperationTrackerUserWidget
// 0x00C0 (0x04E8 - 0x0428)
class UModioCommonModOperationTrackerUserWidget : public UModioCommonActivatableWidget
{
public:
	uint8                                         Pad_428[0x50];                                     // 0x0428(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UModioCommonModOperationTrackerUserWidgetStyle> ModioStyle;                                        // 0x0478(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonModOperationTrackerWidget*  Tracker;                                           // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonImage*                      IconImage;                                         // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  ModTitleTextBlock;                                 // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  OverallOperationPercentageLabelTextBlock;          // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  OverallOperationPercentageTextBlock;               // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  QueuedOperationNumberLabelTextBlock;               // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  QueuedOperationNumberTextBlock;                    // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  SpeedLabelTextBlock;                               // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  SpeedTextBlock;                                    // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonProgressBar*                ModOperationProgressBar;                           // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MinDecimalsProgress;                               // 0x04D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxDecimalsProgress;                               // 0x04D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MinDecimalsSpeed;                                  // 0x04D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxDecimalsSpeed;                                  // 0x04DC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bTrackAnyMods;                                     // 0x04E0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool GetCurrentDownloadingMod(struct FModioModCollectionEntry* OutDownloadingMod);
	void OnModOperationTrackerProgressUpdated(const struct FModioUnsigned64& Current, const struct FModioUnsigned64& Total);
	void OnModOperationTrackerSpeedUpdated(const struct FModioUnsigned64& DeltaBytes, double DeltaTime);
	void SetStyle(TSubclassOf<class UModioCommonModOperationTrackerUserWidgetStyle> InStyle);
	void SetTrackingModID(const struct FModioModID& ModId);
	void UpdateQueuedOperationNumber();

	int32 GetNumOfQueuedMods() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModOperationTrackerUserWidget">();
	}
	static class UModioCommonModOperationTrackerUserWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModOperationTrackerUserWidget>();
	}
};
static_assert(alignof(UModioCommonModOperationTrackerUserWidget) == 0x000008, "Wrong alignment on UModioCommonModOperationTrackerUserWidget");
static_assert(sizeof(UModioCommonModOperationTrackerUserWidget) == 0x0004E8, "Wrong size on UModioCommonModOperationTrackerUserWidget");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidget, ModioStyle) == 0x000478, "Member 'UModioCommonModOperationTrackerUserWidget::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidget, Tracker) == 0x000480, "Member 'UModioCommonModOperationTrackerUserWidget::Tracker' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidget, IconImage) == 0x000488, "Member 'UModioCommonModOperationTrackerUserWidget::IconImage' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidget, ModTitleTextBlock) == 0x000490, "Member 'UModioCommonModOperationTrackerUserWidget::ModTitleTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidget, OverallOperationPercentageLabelTextBlock) == 0x000498, "Member 'UModioCommonModOperationTrackerUserWidget::OverallOperationPercentageLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidget, OverallOperationPercentageTextBlock) == 0x0004A0, "Member 'UModioCommonModOperationTrackerUserWidget::OverallOperationPercentageTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidget, QueuedOperationNumberLabelTextBlock) == 0x0004A8, "Member 'UModioCommonModOperationTrackerUserWidget::QueuedOperationNumberLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidget, QueuedOperationNumberTextBlock) == 0x0004B0, "Member 'UModioCommonModOperationTrackerUserWidget::QueuedOperationNumberTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidget, SpeedLabelTextBlock) == 0x0004B8, "Member 'UModioCommonModOperationTrackerUserWidget::SpeedLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidget, SpeedTextBlock) == 0x0004C0, "Member 'UModioCommonModOperationTrackerUserWidget::SpeedTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidget, ModOperationProgressBar) == 0x0004C8, "Member 'UModioCommonModOperationTrackerUserWidget::ModOperationProgressBar' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidget, MinDecimalsProgress) == 0x0004D0, "Member 'UModioCommonModOperationTrackerUserWidget::MinDecimalsProgress' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidget, MaxDecimalsProgress) == 0x0004D4, "Member 'UModioCommonModOperationTrackerUserWidget::MaxDecimalsProgress' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidget, MinDecimalsSpeed) == 0x0004D8, "Member 'UModioCommonModOperationTrackerUserWidget::MinDecimalsSpeed' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidget, MaxDecimalsSpeed) == 0x0004DC, "Member 'UModioCommonModOperationTrackerUserWidget::MaxDecimalsSpeed' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidget, bTrackAnyMods) == 0x0004E0, "Member 'UModioCommonModOperationTrackerUserWidget::bTrackAnyMods' has a wrong offset!");

// Class ModioUI.ModioCommonModOperationTrackerUserWidgetStyle
// 0x0040 (0x0068 - 0x0028)
class UModioCommonModOperationTrackerUserWidgetStyle final : public UObject
{
public:
	TSubclassOf<class UModioCommonImageStyle>     IconImageStyle;                                    // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      OverallOperationPercentageLabelTextStyle;          // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      OverallOperationPercentageTextStyle;               // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      QueuedOperationNumberLabelTextStyle;               // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      QueuedOperationNumberTextStyle;                    // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      SpeedLabelTextStyle;                               // 0x0050(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      SpeedTextStyle;                                    // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonProgressBarStyle> ModOperationProgressBarStyle;                      // 0x0060(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModOperationTrackerUserWidgetStyle">();
	}
	static class UModioCommonModOperationTrackerUserWidgetStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModOperationTrackerUserWidgetStyle>();
	}
};
static_assert(alignof(UModioCommonModOperationTrackerUserWidgetStyle) == 0x000008, "Wrong alignment on UModioCommonModOperationTrackerUserWidgetStyle");
static_assert(sizeof(UModioCommonModOperationTrackerUserWidgetStyle) == 0x000068, "Wrong size on UModioCommonModOperationTrackerUserWidgetStyle");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidgetStyle, IconImageStyle) == 0x000028, "Member 'UModioCommonModOperationTrackerUserWidgetStyle::IconImageStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidgetStyle, OverallOperationPercentageLabelTextStyle) == 0x000030, "Member 'UModioCommonModOperationTrackerUserWidgetStyle::OverallOperationPercentageLabelTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidgetStyle, OverallOperationPercentageTextStyle) == 0x000038, "Member 'UModioCommonModOperationTrackerUserWidgetStyle::OverallOperationPercentageTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidgetStyle, QueuedOperationNumberLabelTextStyle) == 0x000040, "Member 'UModioCommonModOperationTrackerUserWidgetStyle::QueuedOperationNumberLabelTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidgetStyle, QueuedOperationNumberTextStyle) == 0x000048, "Member 'UModioCommonModOperationTrackerUserWidgetStyle::QueuedOperationNumberTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidgetStyle, SpeedLabelTextStyle) == 0x000050, "Member 'UModioCommonModOperationTrackerUserWidgetStyle::SpeedLabelTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidgetStyle, SpeedTextStyle) == 0x000058, "Member 'UModioCommonModOperationTrackerUserWidgetStyle::SpeedTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerUserWidgetStyle, ModOperationProgressBarStyle) == 0x000060, "Member 'UModioCommonModOperationTrackerUserWidgetStyle::ModOperationProgressBarStyle' has a wrong offset!");

// Class ModioUI.TickableModioCommonWidget
// 0x0010 (0x0160 - 0x0150)
class UTickableModioCommonWidget : public UWidget
{
public:
	uint8                                         Pad_150[0x10];                                     // 0x0150(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TickableModioCommonWidget">();
	}
	static class UTickableModioCommonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTickableModioCommonWidget>();
	}
};
static_assert(alignof(UTickableModioCommonWidget) == 0x000008, "Wrong alignment on UTickableModioCommonWidget");
static_assert(sizeof(UTickableModioCommonWidget) == 0x000160, "Wrong size on UTickableModioCommonWidget");

// Class ModioUI.ModioCommonModOperationTrackerWidget
// 0x00A8 (0x0208 - 0x0160)
class UModioCommonModOperationTrackerWidget final : public UTickableModioCommonWidget
{
public:
	uint8                                         Pad_160[0x48];                                     // 0x0160(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FModioUnsigned64& Current, const struct FModioUnsigned64& Total)> OnProgress;                                        // 0x01A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B8[0x18];                                     // 0x01B8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FModioUnsigned64& DeltaBytes, double DeltaTime)> OnSpeed;                                           // 0x01D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E0[0x28];                                     // 0x01E0(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetTrackAnyMods(bool bInTrackAnyMods);
	void SetTrackingModID(const struct FModioModID& ModId);

	int64 GetPreviewCurrent() const;
	int64 GetPreviewTotal() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModOperationTrackerWidget">();
	}
	static class UModioCommonModOperationTrackerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModOperationTrackerWidget>();
	}
};
static_assert(alignof(UModioCommonModOperationTrackerWidget) == 0x000008, "Wrong alignment on UModioCommonModOperationTrackerWidget");
static_assert(sizeof(UModioCommonModOperationTrackerWidget) == 0x000208, "Wrong size on UModioCommonModOperationTrackerWidget");
static_assert(offsetof(UModioCommonModOperationTrackerWidget, OnProgress) == 0x0001A8, "Member 'UModioCommonModOperationTrackerWidget::OnProgress' has a wrong offset!");
static_assert(offsetof(UModioCommonModOperationTrackerWidget, OnSpeed) == 0x0001D0, "Member 'UModioCommonModOperationTrackerWidget::OnSpeed' has a wrong offset!");

// Class ModioUI.ModioCommonModTagEntry
// 0x0040 (0x0468 - 0x0428)
class UModioCommonModTagEntry final : public UModioCommonActivatableWidget
{
public:
	uint8                                         Pad_428[0x18];                                     // 0x0428(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UModioCommonButtonBase*                 TagButton;                                         // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonCheckBox*                   TagCheckbox;                                       // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 Tag;                                               // 0x0450(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAllowMultipleSelection;                           // 0x0460(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetAllowMultipleSelection(bool bInAllowMultipleSelection);
	void SetSelected(bool bIsSelected);
	void SetTag(const class FString& InTag);

	bool GetAllowMultipleSelection() const;
	bool GetSelected() const;
	class FString GetTag() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModTagEntry">();
	}
	static class UModioCommonModTagEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModTagEntry>();
	}
};
static_assert(alignof(UModioCommonModTagEntry) == 0x000008, "Wrong alignment on UModioCommonModTagEntry");
static_assert(sizeof(UModioCommonModTagEntry) == 0x000468, "Wrong size on UModioCommonModTagEntry");
static_assert(offsetof(UModioCommonModTagEntry, TagButton) == 0x000440, "Member 'UModioCommonModTagEntry::TagButton' has a wrong offset!");
static_assert(offsetof(UModioCommonModTagEntry, TagCheckbox) == 0x000448, "Member 'UModioCommonModTagEntry::TagCheckbox' has a wrong offset!");
static_assert(offsetof(UModioCommonModTagEntry, Tag) == 0x000450, "Member 'UModioCommonModTagEntry::Tag' has a wrong offset!");
static_assert(offsetof(UModioCommonModTagEntry, bAllowMultipleSelection) == 0x000460, "Member 'UModioCommonModTagEntry::bAllowMultipleSelection' has a wrong offset!");

// Class ModioUI.ModioCommonModTagGroupList
// 0x0018 (0x0440 - 0x0428)
class UModioCommonModTagGroupList final : public UModioCommonActivatableWidget
{
public:
	TSubclassOf<class UModioCommonModTagEntry>    TagEntryClass;                                     // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  TagGroupNameTextBlock;                             // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           TagsContainer;                                     // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void ResetTagsSelection();
	bool SetSelectedTagGroupValues(const TArray<class FString>& TagGroupValues, bool bSelect);
	void SetTagsGroup(const struct FModioModTagInfo& TagInfo);
	void UpdateSelection(class UModioCommonModTagEntry* ModTagEntry, bool bIsSelected);

	bool GetSelectedTagGroupValues(TArray<class FString>& OutSelectedTagGroupValues) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModTagGroupList">();
	}
	static class UModioCommonModTagGroupList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModTagGroupList>();
	}
};
static_assert(alignof(UModioCommonModTagGroupList) == 0x000008, "Wrong alignment on UModioCommonModTagGroupList");
static_assert(sizeof(UModioCommonModTagGroupList) == 0x000440, "Wrong size on UModioCommonModTagGroupList");
static_assert(offsetof(UModioCommonModTagGroupList, TagEntryClass) == 0x000428, "Member 'UModioCommonModTagGroupList::TagEntryClass' has a wrong offset!");
static_assert(offsetof(UModioCommonModTagGroupList, TagGroupNameTextBlock) == 0x000430, "Member 'UModioCommonModTagGroupList::TagGroupNameTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonModTagGroupList, TagsContainer) == 0x000438, "Member 'UModioCommonModTagGroupList::TagsContainer' has a wrong offset!");

// Class ModioUI.ModioCommonModTagList
// 0x0010 (0x0438 - 0x0428)
class UModioCommonModTagList final : public UModioCommonActivatableWidget
{
public:
	TSubclassOf<class UModioCommonModTagEntry>    TagEntryClass;                                     // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           TagsContainer;                                     // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SetTags(const TArray<struct FModioModTag>& ModTags);
	void SetTagsString(const TArray<class FString>& Tags);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModTagList">();
	}
	static class UModioCommonModTagList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModTagList>();
	}
};
static_assert(alignof(UModioCommonModTagList) == 0x000008, "Wrong alignment on UModioCommonModTagList");
static_assert(sizeof(UModioCommonModTagList) == 0x000438, "Wrong size on UModioCommonModTagList");
static_assert(offsetof(UModioCommonModTagList, TagEntryClass) == 0x000428, "Member 'UModioCommonModTagList::TagEntryClass' has a wrong offset!");
static_assert(offsetof(UModioCommonModTagList, TagsContainer) == 0x000430, "Member 'UModioCommonModTagList::TagsContainer' has a wrong offset!");

// Class ModioUI.ModioCommonTileView
// 0x0010 (0x0D90 - 0x0D80)
class UModioCommonTileView : public UCommonTileView
{
public:
	TSubclassOf<class UModioCommonListViewStyle>  ModioStyle;                                        // 0x0D80(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D88[0x8];                                      // 0x0D88(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetStyle(TSubclassOf<class UModioCommonListViewStyle> InStyle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonTileView">();
	}
	static class UModioCommonTileView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonTileView>();
	}
};
static_assert(alignof(UModioCommonTileView) == 0x000010, "Wrong alignment on UModioCommonTileView");
static_assert(sizeof(UModioCommonTileView) == 0x000D90, "Wrong size on UModioCommonTileView");
static_assert(offsetof(UModioCommonTileView, ModioStyle) == 0x000D80, "Member 'UModioCommonTileView::ModioStyle' has a wrong offset!");

// Class ModioUI.ModioCommonModTileView
// 0x00C0 (0x0E50 - 0x0D90)
class UModioCommonModTileView : public UModioCommonTileView
{
public:
	uint8                                         Pad_D90[0xB0];                                     // 0x0D90(0x00B0)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bFocusOnceListIsPopulatedRequested;                // 0x0E40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E41[0xF];                                      // 0x0E41(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonModTileView">();
	}
	static class UModioCommonModTileView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonModTileView>();
	}
};
static_assert(alignof(UModioCommonModTileView) == 0x000010, "Wrong alignment on UModioCommonModTileView");
static_assert(sizeof(UModioCommonModTileView) == 0x000E50, "Wrong size on UModioCommonModTileView");
static_assert(offsetof(UModioCommonModTileView, bFocusOnceListIsPopulatedRequested) == 0x000E40, "Member 'UModioCommonModTileView::bFocusOnceListIsPopulatedRequested' has a wrong offset!");

// Class ModioUI.ModioCommonMultiLineEditableTextBox
// 0x0030 (0x12A0 - 0x1270)
class UModioCommonMultiLineEditableTextBox final : public UMultiLineEditableTextBox
{
public:
	TSubclassOf<class UModioCommonMultiLineEditableTextBoxStyle> ModioStyle;                                        // 0x1268(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(class FText& Text)> OnMultiLineEditableTextChanged;                    // 0x1270(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          IsCaretMovedWhenGainFocus;                         // 0x1280(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          SelectAllTextWhenFocused;                          // 0x1281(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          RevertTextOnEscape;                                // 0x1282(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          ClearKeyboardFocusOnCommit;                        // 0x1283(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          SelectAllTextOnCommit;                             // 0x1284(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          AlwaysShowScrollbars;                              // 0x1285(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          AllowMultiLine;                                    // 0x1286(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EVirtualKeyboardTrigger                       VirtualKeyboardTrigger;                            // 0x1287(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ETextOverflowPolicy                           OverflowPolicy;                                    // 0x1288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1289[0x17];                                    // 0x1289(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetStyle(TSubclassOf<class UModioCommonMultiLineEditableTextBoxStyle> InStyle);

	bool IsTextBoxFocused() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonMultiLineEditableTextBox">();
	}
	static class UModioCommonMultiLineEditableTextBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonMultiLineEditableTextBox>();
	}
};
static_assert(alignof(UModioCommonMultiLineEditableTextBox) == 0x000010, "Wrong alignment on UModioCommonMultiLineEditableTextBox");
static_assert(sizeof(UModioCommonMultiLineEditableTextBox) == 0x0012A0, "Wrong size on UModioCommonMultiLineEditableTextBox");
static_assert(offsetof(UModioCommonMultiLineEditableTextBox, ModioStyle) == 0x001268, "Member 'UModioCommonMultiLineEditableTextBox::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBox, OnMultiLineEditableTextChanged) == 0x001270, "Member 'UModioCommonMultiLineEditableTextBox::OnMultiLineEditableTextChanged' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBox, IsCaretMovedWhenGainFocus) == 0x001280, "Member 'UModioCommonMultiLineEditableTextBox::IsCaretMovedWhenGainFocus' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBox, SelectAllTextWhenFocused) == 0x001281, "Member 'UModioCommonMultiLineEditableTextBox::SelectAllTextWhenFocused' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBox, RevertTextOnEscape) == 0x001282, "Member 'UModioCommonMultiLineEditableTextBox::RevertTextOnEscape' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBox, ClearKeyboardFocusOnCommit) == 0x001283, "Member 'UModioCommonMultiLineEditableTextBox::ClearKeyboardFocusOnCommit' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBox, SelectAllTextOnCommit) == 0x001284, "Member 'UModioCommonMultiLineEditableTextBox::SelectAllTextOnCommit' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBox, AlwaysShowScrollbars) == 0x001285, "Member 'UModioCommonMultiLineEditableTextBox::AlwaysShowScrollbars' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBox, AllowMultiLine) == 0x001286, "Member 'UModioCommonMultiLineEditableTextBox::AllowMultiLine' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBox, VirtualKeyboardTrigger) == 0x001287, "Member 'UModioCommonMultiLineEditableTextBox::VirtualKeyboardTrigger' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBox, OverflowPolicy) == 0x001288, "Member 'UModioCommonMultiLineEditableTextBox::OverflowPolicy' has a wrong offset!");

// Class ModioUI.ModioCommonMultiLineEditableTextBoxStyle
// 0x0BD8 (0x0C00 - 0x0028)
class UModioCommonMultiLineEditableTextBoxStyle final : public UObject
{
public:
	int32                                         MaxTextLength;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   HintText;                                          // 0x0030(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            NormalBackgroundBrush;                             // 0x0050(0x00F0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                            HoveredBackgroundBrush;                            // 0x0140(0x00F0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                            FocusedBackgroundBrush;                            // 0x0230(0x00F0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                            ReadOnlyBackgroundBrush;                           // 0x0320(0x00F0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FMargin                                Padding;                                           // 0x0410(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                        TextStyle;                                         // 0x0420(0x03A0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateColor                            ForegroundColor;                                   // 0x07C0(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateColor                            BackgroundColor;                                   // 0x07D4(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateColor                            ReadOnlyForegroundColor;                           // 0x07E8(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateColor                            FocusedForegroundColor;                            // 0x07FC(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                            NormalBorderBrush;                                 // 0x0810(0x00F0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                            HoveredBorderBrush;                                // 0x0900(0x00F0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                            ErrorBorderBrush;                                  // 0x09F0(0x00F0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bShowHintIcon;                                     // 0x0AE0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AE1[0xF];                                      // 0x0AE1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            HintIcon;                                          // 0x0AF0(0x00F0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FMargin                                HintIconPadding;                                   // 0x0BE0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bApplyFocusedStyleInReadOnlyMode;                  // 0x0BF0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BF1[0xF];                                      // 0x0BF1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonMultiLineEditableTextBoxStyle">();
	}
	static class UModioCommonMultiLineEditableTextBoxStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonMultiLineEditableTextBoxStyle>();
	}
};
static_assert(alignof(UModioCommonMultiLineEditableTextBoxStyle) == 0x000010, "Wrong alignment on UModioCommonMultiLineEditableTextBoxStyle");
static_assert(sizeof(UModioCommonMultiLineEditableTextBoxStyle) == 0x000C00, "Wrong size on UModioCommonMultiLineEditableTextBoxStyle");
static_assert(offsetof(UModioCommonMultiLineEditableTextBoxStyle, MaxTextLength) == 0x000028, "Member 'UModioCommonMultiLineEditableTextBoxStyle::MaxTextLength' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBoxStyle, HintText) == 0x000030, "Member 'UModioCommonMultiLineEditableTextBoxStyle::HintText' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBoxStyle, NormalBackgroundBrush) == 0x000050, "Member 'UModioCommonMultiLineEditableTextBoxStyle::NormalBackgroundBrush' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBoxStyle, HoveredBackgroundBrush) == 0x000140, "Member 'UModioCommonMultiLineEditableTextBoxStyle::HoveredBackgroundBrush' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBoxStyle, FocusedBackgroundBrush) == 0x000230, "Member 'UModioCommonMultiLineEditableTextBoxStyle::FocusedBackgroundBrush' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBoxStyle, ReadOnlyBackgroundBrush) == 0x000320, "Member 'UModioCommonMultiLineEditableTextBoxStyle::ReadOnlyBackgroundBrush' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBoxStyle, Padding) == 0x000410, "Member 'UModioCommonMultiLineEditableTextBoxStyle::Padding' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBoxStyle, TextStyle) == 0x000420, "Member 'UModioCommonMultiLineEditableTextBoxStyle::TextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBoxStyle, ForegroundColor) == 0x0007C0, "Member 'UModioCommonMultiLineEditableTextBoxStyle::ForegroundColor' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBoxStyle, BackgroundColor) == 0x0007D4, "Member 'UModioCommonMultiLineEditableTextBoxStyle::BackgroundColor' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBoxStyle, ReadOnlyForegroundColor) == 0x0007E8, "Member 'UModioCommonMultiLineEditableTextBoxStyle::ReadOnlyForegroundColor' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBoxStyle, FocusedForegroundColor) == 0x0007FC, "Member 'UModioCommonMultiLineEditableTextBoxStyle::FocusedForegroundColor' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBoxStyle, NormalBorderBrush) == 0x000810, "Member 'UModioCommonMultiLineEditableTextBoxStyle::NormalBorderBrush' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBoxStyle, HoveredBorderBrush) == 0x000900, "Member 'UModioCommonMultiLineEditableTextBoxStyle::HoveredBorderBrush' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBoxStyle, ErrorBorderBrush) == 0x0009F0, "Member 'UModioCommonMultiLineEditableTextBoxStyle::ErrorBorderBrush' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBoxStyle, bShowHintIcon) == 0x000AE0, "Member 'UModioCommonMultiLineEditableTextBoxStyle::bShowHintIcon' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBoxStyle, HintIcon) == 0x000AF0, "Member 'UModioCommonMultiLineEditableTextBoxStyle::HintIcon' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBoxStyle, HintIconPadding) == 0x000BE0, "Member 'UModioCommonMultiLineEditableTextBoxStyle::HintIconPadding' has a wrong offset!");
static_assert(offsetof(UModioCommonMultiLineEditableTextBoxStyle, bApplyFocusedStyleInReadOnlyMode) == 0x000BF0, "Member 'UModioCommonMultiLineEditableTextBoxStyle::bApplyFocusedStyleInReadOnlyMode' has a wrong offset!");

// Class ModioUI.ModioCommonNotificationController
// 0x00C8 (0x04F0 - 0x0428)
class UModioCommonNotificationController final : public UModioCommonActivatableWidget
{
public:
	uint8                                         Pad_428[0x8];                                      // 0x0428(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxNotificationsOnScreen;                          // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UUserWidget>                ErrorNotificationClass;                            // 0x0438(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>                SuccessNotificationClass;                          // 0x0440(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                           NotificationList;                                  // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_450[0xA0];                                     // 0x0450(0x00A0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnNotificationExpired(class UWidget* Notification);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonNotificationController">();
	}
	static class UModioCommonNotificationController* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonNotificationController>();
	}
};
static_assert(alignof(UModioCommonNotificationController) == 0x000008, "Wrong alignment on UModioCommonNotificationController");
static_assert(sizeof(UModioCommonNotificationController) == 0x0004F0, "Wrong size on UModioCommonNotificationController");
static_assert(offsetof(UModioCommonNotificationController, MaxNotificationsOnScreen) == 0x000430, "Member 'UModioCommonNotificationController::MaxNotificationsOnScreen' has a wrong offset!");
static_assert(offsetof(UModioCommonNotificationController, ErrorNotificationClass) == 0x000438, "Member 'UModioCommonNotificationController::ErrorNotificationClass' has a wrong offset!");
static_assert(offsetof(UModioCommonNotificationController, SuccessNotificationClass) == 0x000440, "Member 'UModioCommonNotificationController::SuccessNotificationClass' has a wrong offset!");
static_assert(offsetof(UModioCommonNotificationController, NotificationList) == 0x000448, "Member 'UModioCommonNotificationController::NotificationList' has a wrong offset!");

// Class ModioUI.ModioCommonNotificationWidgetBase
// 0x0028 (0x0450 - 0x0428)
class UModioCommonNotificationWidgetBase : public UModioCommonActivatableWidget
{
public:
	uint8                                         Pad_428[0x10];                                     // 0x0428(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWidget* NotificationWidget)> ExpireDelegate;                                    // 0x0438(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ExpiryDuration;                                    // 0x0448(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UWidget* CreateFromParams(TSubclassOf<class UWidget> NotificationClass, const struct FModioNotificationParams& Params_0, class UWidget* Outer_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonNotificationWidgetBase">();
	}
	static class UModioCommonNotificationWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonNotificationWidgetBase>();
	}
};
static_assert(alignof(UModioCommonNotificationWidgetBase) == 0x000008, "Wrong alignment on UModioCommonNotificationWidgetBase");
static_assert(sizeof(UModioCommonNotificationWidgetBase) == 0x000450, "Wrong size on UModioCommonNotificationWidgetBase");
static_assert(offsetof(UModioCommonNotificationWidgetBase, ExpireDelegate) == 0x000438, "Member 'UModioCommonNotificationWidgetBase::ExpireDelegate' has a wrong offset!");
static_assert(offsetof(UModioCommonNotificationWidgetBase, ExpiryDuration) == 0x000448, "Member 'UModioCommonNotificationWidgetBase::ExpiryDuration' has a wrong offset!");

// Class ModioUI.ModioCommonNotificationWidget
// 0x0040 (0x0490 - 0x0450)
class UModioCommonNotificationWidget final : public UModioCommonNotificationWidgetBase
{
public:
	TSubclassOf<class UModioCommonNotificationWidgetStyle> ModioStyle;                                        // 0x0450(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonBorder*                     BackgroundBorder;                                  // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonBorder*                     StatusBackgroundBorder;                            // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonImage*                      StatusIndicatorImage;                              // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonRichTextBlock*              NotificationTitleTextBlock;                        // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonRichTextBlock*              NotificationMessageTextBlock;                      // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDateTime                              StartTime;                                         // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDisplayStarted;                                   // 0x0488(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetStyle(TSubclassOf<class UModioCommonNotificationWidgetStyle> InStyle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonNotificationWidget">();
	}
	static class UModioCommonNotificationWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonNotificationWidget>();
	}
};
static_assert(alignof(UModioCommonNotificationWidget) == 0x000008, "Wrong alignment on UModioCommonNotificationWidget");
static_assert(sizeof(UModioCommonNotificationWidget) == 0x000490, "Wrong size on UModioCommonNotificationWidget");
static_assert(offsetof(UModioCommonNotificationWidget, ModioStyle) == 0x000450, "Member 'UModioCommonNotificationWidget::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonNotificationWidget, BackgroundBorder) == 0x000458, "Member 'UModioCommonNotificationWidget::BackgroundBorder' has a wrong offset!");
static_assert(offsetof(UModioCommonNotificationWidget, StatusBackgroundBorder) == 0x000460, "Member 'UModioCommonNotificationWidget::StatusBackgroundBorder' has a wrong offset!");
static_assert(offsetof(UModioCommonNotificationWidget, StatusIndicatorImage) == 0x000468, "Member 'UModioCommonNotificationWidget::StatusIndicatorImage' has a wrong offset!");
static_assert(offsetof(UModioCommonNotificationWidget, NotificationTitleTextBlock) == 0x000470, "Member 'UModioCommonNotificationWidget::NotificationTitleTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonNotificationWidget, NotificationMessageTextBlock) == 0x000478, "Member 'UModioCommonNotificationWidget::NotificationMessageTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonNotificationWidget, StartTime) == 0x000480, "Member 'UModioCommonNotificationWidget::StartTime' has a wrong offset!");
static_assert(offsetof(UModioCommonNotificationWidget, bDisplayStarted) == 0x000488, "Member 'UModioCommonNotificationWidget::bDisplayStarted' has a wrong offset!");

// Class ModioUI.ModioCommonNotificationWidgetStyle
// 0x0028 (0x0050 - 0x0028)
class UModioCommonNotificationWidgetStyle final : public UObject
{
public:
	TSubclassOf<class UModioCommonBorderStyle>    BackgroundBorderStyle;                             // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonBorderStyle>    StatusBackgroundBorderStyle;                       // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonImageStyle>     StatusIndicatorImageStyle;                         // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonRichTextStyle>  NotificationTitleTextStyle;                        // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonRichTextStyle>  NotificationMessageTextStyle;                      // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonNotificationWidgetStyle">();
	}
	static class UModioCommonNotificationWidgetStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonNotificationWidgetStyle>();
	}
};
static_assert(alignof(UModioCommonNotificationWidgetStyle) == 0x000008, "Wrong alignment on UModioCommonNotificationWidgetStyle");
static_assert(sizeof(UModioCommonNotificationWidgetStyle) == 0x000050, "Wrong size on UModioCommonNotificationWidgetStyle");
static_assert(offsetof(UModioCommonNotificationWidgetStyle, BackgroundBorderStyle) == 0x000028, "Member 'UModioCommonNotificationWidgetStyle::BackgroundBorderStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonNotificationWidgetStyle, StatusBackgroundBorderStyle) == 0x000030, "Member 'UModioCommonNotificationWidgetStyle::StatusBackgroundBorderStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonNotificationWidgetStyle, StatusIndicatorImageStyle) == 0x000038, "Member 'UModioCommonNotificationWidgetStyle::StatusIndicatorImageStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonNotificationWidgetStyle, NotificationTitleTextStyle) == 0x000040, "Member 'UModioCommonNotificationWidgetStyle::NotificationTitleTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonNotificationWidgetStyle, NotificationMessageTextStyle) == 0x000048, "Member 'UModioCommonNotificationWidgetStyle::NotificationMessageTextStyle' has a wrong offset!");

// Class ModioUI.ModioCommonProfileImage
// 0x0020 (0x0310 - 0x02F0)
class UModioCommonProfileImage final : public UModioCommonDynamicImage
{
public:
	uint8                                         Pad_2F0[0x20];                                     // 0x02F0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonProfileImage">();
	}
	static class UModioCommonProfileImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonProfileImage>();
	}
};
static_assert(alignof(UModioCommonProfileImage) == 0x000008, "Wrong alignment on UModioCommonProfileImage");
static_assert(sizeof(UModioCommonProfileImage) == 0x000310, "Wrong size on UModioCommonProfileImage");

// Class ModioUI.ModioCommonProgressBar
// 0x0000 (0x04A0 - 0x04A0)
class UModioCommonProgressBar final : public UProgressBar
{
public:
	TSubclassOf<class UModioCommonProgressBarStyle> ModioStyle;                                        // 0x0498(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SetStyle(TSubclassOf<class UModioCommonProgressBarStyle> InStyle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonProgressBar">();
	}
	static class UModioCommonProgressBar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonProgressBar>();
	}
};
static_assert(alignof(UModioCommonProgressBar) == 0x000010, "Wrong alignment on UModioCommonProgressBar");
static_assert(sizeof(UModioCommonProgressBar) == 0x0004A0, "Wrong size on UModioCommonProgressBar");
static_assert(offsetof(UModioCommonProgressBar, ModioStyle) == 0x000498, "Member 'UModioCommonProgressBar::ModioStyle' has a wrong offset!");

// Class ModioUI.ModioCommonProgressBarStyle
// 0x02F8 (0x0320 - 0x0028)
class UModioCommonProgressBarStyle final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProgressBarStyle                      Style;                                             // 0x0030(0x02F0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonProgressBarStyle">();
	}
	static class UModioCommonProgressBarStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonProgressBarStyle>();
	}
};
static_assert(alignof(UModioCommonProgressBarStyle) == 0x000010, "Wrong alignment on UModioCommonProgressBarStyle");
static_assert(sizeof(UModioCommonProgressBarStyle) == 0x000320, "Wrong size on UModioCommonProgressBarStyle");
static_assert(offsetof(UModioCommonProgressBarStyle, Style) == 0x000030, "Member 'UModioCommonProgressBarStyle::Style' has a wrong offset!");

// Class ModioUI.ModioCommonQuickAccessViewBase
// 0x0018 (0x0440 - 0x0428)
class UModioCommonQuickAccessViewBase : public UModioCommonActivatableWidget
{
public:
	uint8                                         Pad_428[0x18];                                     // 0x0428(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool IsUserAuthenticated() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonQuickAccessViewBase">();
	}
	static class UModioCommonQuickAccessViewBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonQuickAccessViewBase>();
	}
};
static_assert(alignof(UModioCommonQuickAccessViewBase) == 0x000008, "Wrong alignment on UModioCommonQuickAccessViewBase");
static_assert(sizeof(UModioCommonQuickAccessViewBase) == 0x000440, "Wrong size on UModioCommonQuickAccessViewBase");

// Class ModioUI.ModioCommonQuickAccessTabView
// 0x0070 (0x04B0 - 0x0440)
class UModioCommonQuickAccessTabView final : public UModioCommonQuickAccessViewBase
{
public:
	uint8                                         Pad_440[0x20];                                     // 0x0440(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UModioCommonQuickAccessTabViewStyle> ModioStyle;                                        // 0x0460(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonBorder*                     InternalBackgroundBorder;                          // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonBorder*                     OverlayBackgroundBorder;                           // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonProfileImage*               ProfileImage;                                      // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  UserNameTextBlock;                                 // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonStorageSpaceTrackerUserWidget* StorageSpaceTrackerUserWidget;                     // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonModOperationTrackerUserWidget* ModOperationTrackerUserWidget;                     // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 MainGameMenuButton;                                // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 AuthButton;                                        // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 MyCollectionButton;                                // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleOnAuthButtonClicked();
	void HandleOnCloseButtonClicked();
	void HandleOnCollectionButtonClicked();
	void HandleOnMainGameMenuButtonClicked();
	void SetStyle(TSubclassOf<class UModioCommonQuickAccessTabViewStyle> InStyle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonQuickAccessTabView">();
	}
	static class UModioCommonQuickAccessTabView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonQuickAccessTabView>();
	}
};
static_assert(alignof(UModioCommonQuickAccessTabView) == 0x000008, "Wrong alignment on UModioCommonQuickAccessTabView");
static_assert(sizeof(UModioCommonQuickAccessTabView) == 0x0004B0, "Wrong size on UModioCommonQuickAccessTabView");
static_assert(offsetof(UModioCommonQuickAccessTabView, ModioStyle) == 0x000460, "Member 'UModioCommonQuickAccessTabView::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonQuickAccessTabView, InternalBackgroundBorder) == 0x000468, "Member 'UModioCommonQuickAccessTabView::InternalBackgroundBorder' has a wrong offset!");
static_assert(offsetof(UModioCommonQuickAccessTabView, OverlayBackgroundBorder) == 0x000470, "Member 'UModioCommonQuickAccessTabView::OverlayBackgroundBorder' has a wrong offset!");
static_assert(offsetof(UModioCommonQuickAccessTabView, ProfileImage) == 0x000478, "Member 'UModioCommonQuickAccessTabView::ProfileImage' has a wrong offset!");
static_assert(offsetof(UModioCommonQuickAccessTabView, UserNameTextBlock) == 0x000480, "Member 'UModioCommonQuickAccessTabView::UserNameTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonQuickAccessTabView, StorageSpaceTrackerUserWidget) == 0x000488, "Member 'UModioCommonQuickAccessTabView::StorageSpaceTrackerUserWidget' has a wrong offset!");
static_assert(offsetof(UModioCommonQuickAccessTabView, ModOperationTrackerUserWidget) == 0x000490, "Member 'UModioCommonQuickAccessTabView::ModOperationTrackerUserWidget' has a wrong offset!");
static_assert(offsetof(UModioCommonQuickAccessTabView, MainGameMenuButton) == 0x000498, "Member 'UModioCommonQuickAccessTabView::MainGameMenuButton' has a wrong offset!");
static_assert(offsetof(UModioCommonQuickAccessTabView, AuthButton) == 0x0004A0, "Member 'UModioCommonQuickAccessTabView::AuthButton' has a wrong offset!");
static_assert(offsetof(UModioCommonQuickAccessTabView, MyCollectionButton) == 0x0004A8, "Member 'UModioCommonQuickAccessTabView::MyCollectionButton' has a wrong offset!");

// Class ModioUI.ModioCommonQuickAccessTabViewStyle
// 0x0048 (0x0070 - 0x0028)
class UModioCommonQuickAccessTabViewStyle final : public UObject
{
public:
	TSubclassOf<class UModioCommonBorderStyle>    InternalBackgroundBorderStyle;                     // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonBorderStyle>    OverlayBackgroundBorderStyle;                      // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonDynamicImageStyle> ProfileImageStyle;                                 // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      UserNameTextStyle;                                 // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonStorageSpaceTrackerUserWidgetStyle> StorageSpaceTrackerStyle;                          // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonModOperationTrackerUserWidgetStyle> ModOperationTrackerStyle;                          // 0x0050(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    MainGameMenuButtonStyle;                           // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    AuthButtonStyle;                                   // 0x0060(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    MyCollectionButtonStyle;                           // 0x0068(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonQuickAccessTabViewStyle">();
	}
	static class UModioCommonQuickAccessTabViewStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonQuickAccessTabViewStyle>();
	}
};
static_assert(alignof(UModioCommonQuickAccessTabViewStyle) == 0x000008, "Wrong alignment on UModioCommonQuickAccessTabViewStyle");
static_assert(sizeof(UModioCommonQuickAccessTabViewStyle) == 0x000070, "Wrong size on UModioCommonQuickAccessTabViewStyle");
static_assert(offsetof(UModioCommonQuickAccessTabViewStyle, InternalBackgroundBorderStyle) == 0x000028, "Member 'UModioCommonQuickAccessTabViewStyle::InternalBackgroundBorderStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonQuickAccessTabViewStyle, OverlayBackgroundBorderStyle) == 0x000030, "Member 'UModioCommonQuickAccessTabViewStyle::OverlayBackgroundBorderStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonQuickAccessTabViewStyle, ProfileImageStyle) == 0x000038, "Member 'UModioCommonQuickAccessTabViewStyle::ProfileImageStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonQuickAccessTabViewStyle, UserNameTextStyle) == 0x000040, "Member 'UModioCommonQuickAccessTabViewStyle::UserNameTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonQuickAccessTabViewStyle, StorageSpaceTrackerStyle) == 0x000048, "Member 'UModioCommonQuickAccessTabViewStyle::StorageSpaceTrackerStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonQuickAccessTabViewStyle, ModOperationTrackerStyle) == 0x000050, "Member 'UModioCommonQuickAccessTabViewStyle::ModOperationTrackerStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonQuickAccessTabViewStyle, MainGameMenuButtonStyle) == 0x000058, "Member 'UModioCommonQuickAccessTabViewStyle::MainGameMenuButtonStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonQuickAccessTabViewStyle, AuthButtonStyle) == 0x000060, "Member 'UModioCommonQuickAccessTabViewStyle::AuthButtonStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonQuickAccessTabViewStyle, MyCollectionButtonStyle) == 0x000068, "Member 'UModioCommonQuickAccessTabViewStyle::MyCollectionButtonStyle' has a wrong offset!");

// Class ModioUI.ModioCommonReportEmailViewBase
// 0x0030 (0x0458 - 0x0428)
class UModioCommonReportEmailViewBase : public UModioCommonActivatableWidget
{
public:
	TMulticastInlineDelegate<void()>              OnBackClicked;                                     // 0x0428(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCancelClicked;                                   // 0x0438(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& EmailAddress)> OnSubmitClicked;                                   // 0x0448(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	bool IsEmailValid(const class FString& Email);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonReportEmailViewBase">();
	}
	static class UModioCommonReportEmailViewBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonReportEmailViewBase>();
	}
};
static_assert(alignof(UModioCommonReportEmailViewBase) == 0x000008, "Wrong alignment on UModioCommonReportEmailViewBase");
static_assert(sizeof(UModioCommonReportEmailViewBase) == 0x000458, "Wrong size on UModioCommonReportEmailViewBase");
static_assert(offsetof(UModioCommonReportEmailViewBase, OnBackClicked) == 0x000428, "Member 'UModioCommonReportEmailViewBase::OnBackClicked' has a wrong offset!");
static_assert(offsetof(UModioCommonReportEmailViewBase, OnCancelClicked) == 0x000438, "Member 'UModioCommonReportEmailViewBase::OnCancelClicked' has a wrong offset!");
static_assert(offsetof(UModioCommonReportEmailViewBase, OnSubmitClicked) == 0x000448, "Member 'UModioCommonReportEmailViewBase::OnSubmitClicked' has a wrong offset!");

// Class ModioUI.ModioCommonReportEmailView
// 0x0038 (0x0490 - 0x0458)
class UModioCommonReportEmailView final : public UModioCommonReportEmailViewBase
{
public:
	class UModioCommonTextBlock*                  TitleTextBlock;                                    // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  DescriptionTextBlock;                              // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  ValidationTextBlock;                               // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonEditableTextBox*            EmailTextBox;                                      // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 BackButton;                                        // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 SubmitButton;                                      // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 CancelButton;                                      // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnEditableTextBoxTextChanged(const class FText& InText);
	void SetValidationTextVisibility(ESlateVisibility EVisbility);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonReportEmailView">();
	}
	static class UModioCommonReportEmailView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonReportEmailView>();
	}
};
static_assert(alignof(UModioCommonReportEmailView) == 0x000008, "Wrong alignment on UModioCommonReportEmailView");
static_assert(sizeof(UModioCommonReportEmailView) == 0x000490, "Wrong size on UModioCommonReportEmailView");
static_assert(offsetof(UModioCommonReportEmailView, TitleTextBlock) == 0x000458, "Member 'UModioCommonReportEmailView::TitleTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonReportEmailView, DescriptionTextBlock) == 0x000460, "Member 'UModioCommonReportEmailView::DescriptionTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonReportEmailView, ValidationTextBlock) == 0x000468, "Member 'UModioCommonReportEmailView::ValidationTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonReportEmailView, EmailTextBox) == 0x000470, "Member 'UModioCommonReportEmailView::EmailTextBox' has a wrong offset!");
static_assert(offsetof(UModioCommonReportEmailView, BackButton) == 0x000478, "Member 'UModioCommonReportEmailView::BackButton' has a wrong offset!");
static_assert(offsetof(UModioCommonReportEmailView, SubmitButton) == 0x000480, "Member 'UModioCommonReportEmailView::SubmitButton' has a wrong offset!");
static_assert(offsetof(UModioCommonReportEmailView, CancelButton) == 0x000488, "Member 'UModioCommonReportEmailView::CancelButton' has a wrong offset!");

// Class ModioUI.ModioCommonReportMessageViewBase
// 0x0030 (0x0458 - 0x0428)
class UModioCommonReportMessageViewBase : public UModioCommonActivatableWidget
{
public:
	TMulticastInlineDelegate<void()>              OnBackClicked;                                     // 0x0428(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCancelClicked;                                   // 0x0438(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& message)> OnSubmitClicked;                                   // 0x0448(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonReportMessageViewBase">();
	}
	static class UModioCommonReportMessageViewBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonReportMessageViewBase>();
	}
};
static_assert(alignof(UModioCommonReportMessageViewBase) == 0x000008, "Wrong alignment on UModioCommonReportMessageViewBase");
static_assert(sizeof(UModioCommonReportMessageViewBase) == 0x000458, "Wrong size on UModioCommonReportMessageViewBase");
static_assert(offsetof(UModioCommonReportMessageViewBase, OnBackClicked) == 0x000428, "Member 'UModioCommonReportMessageViewBase::OnBackClicked' has a wrong offset!");
static_assert(offsetof(UModioCommonReportMessageViewBase, OnCancelClicked) == 0x000438, "Member 'UModioCommonReportMessageViewBase::OnCancelClicked' has a wrong offset!");
static_assert(offsetof(UModioCommonReportMessageViewBase, OnSubmitClicked) == 0x000448, "Member 'UModioCommonReportMessageViewBase::OnSubmitClicked' has a wrong offset!");

// Class ModioUI.ModioCommonReportMessageView
// 0x0048 (0x04A0 - 0x0458)
class UModioCommonReportMessageView final : public UModioCommonReportMessageViewBase
{
public:
	class UModioCommonTextBlock*                  TitleTextBlock;                                    // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  DescriptionTextBlock;                              // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  CharactersTextBlock;                               // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  ValidationTextBlock;                               // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  ErrorMessageTextBlock;                             // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonMultiLineEditableTextBox*   MessageTextBox;                                    // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 BackButton;                                        // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 SubmitButton;                                      // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 CancelButton;                                      // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnMultiLineTextBoxTextChanged(const class FText& Text);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonReportMessageView">();
	}
	static class UModioCommonReportMessageView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonReportMessageView>();
	}
};
static_assert(alignof(UModioCommonReportMessageView) == 0x000008, "Wrong alignment on UModioCommonReportMessageView");
static_assert(sizeof(UModioCommonReportMessageView) == 0x0004A0, "Wrong size on UModioCommonReportMessageView");
static_assert(offsetof(UModioCommonReportMessageView, TitleTextBlock) == 0x000458, "Member 'UModioCommonReportMessageView::TitleTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonReportMessageView, DescriptionTextBlock) == 0x000460, "Member 'UModioCommonReportMessageView::DescriptionTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonReportMessageView, CharactersTextBlock) == 0x000468, "Member 'UModioCommonReportMessageView::CharactersTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonReportMessageView, ValidationTextBlock) == 0x000470, "Member 'UModioCommonReportMessageView::ValidationTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonReportMessageView, ErrorMessageTextBlock) == 0x000478, "Member 'UModioCommonReportMessageView::ErrorMessageTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonReportMessageView, MessageTextBox) == 0x000480, "Member 'UModioCommonReportMessageView::MessageTextBox' has a wrong offset!");
static_assert(offsetof(UModioCommonReportMessageView, BackButton) == 0x000488, "Member 'UModioCommonReportMessageView::BackButton' has a wrong offset!");
static_assert(offsetof(UModioCommonReportMessageView, SubmitButton) == 0x000490, "Member 'UModioCommonReportMessageView::SubmitButton' has a wrong offset!");
static_assert(offsetof(UModioCommonReportMessageView, CancelButton) == 0x000498, "Member 'UModioCommonReportMessageView::CancelButton' has a wrong offset!");

// Class ModioUI.ModioCommonReportReasonViewBase
// 0x0020 (0x0448 - 0x0428)
class UModioCommonReportReasonViewBase : public UModioCommonActivatableWidget
{
public:
	TMulticastInlineDelegate<void(EModioReportType ReportType)> OnProceedClicked;                                  // 0x0428(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCancelClicked;                                   // 0x0438(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonReportReasonViewBase">();
	}
	static class UModioCommonReportReasonViewBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonReportReasonViewBase>();
	}
};
static_assert(alignof(UModioCommonReportReasonViewBase) == 0x000008, "Wrong alignment on UModioCommonReportReasonViewBase");
static_assert(sizeof(UModioCommonReportReasonViewBase) == 0x000448, "Wrong size on UModioCommonReportReasonViewBase");
static_assert(offsetof(UModioCommonReportReasonViewBase, OnProceedClicked) == 0x000428, "Member 'UModioCommonReportReasonViewBase::OnProceedClicked' has a wrong offset!");
static_assert(offsetof(UModioCommonReportReasonViewBase, OnCancelClicked) == 0x000438, "Member 'UModioCommonReportReasonViewBase::OnCancelClicked' has a wrong offset!");

// Class ModioUI.ModioCommonReportReasonView
// 0x0068 (0x04B0 - 0x0448)
class UModioCommonReportReasonView final : public UModioCommonReportReasonViewBase
{
public:
	TSubclassOf<class UModioCommonCheckBoxStyle>  ReportCheckBoxStyle;                               // 0x0448(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  TitleTextBlock;                                    // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  DescriptionTextBlock;                              // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonCheckBox*                   DMCACheckBox;                                      // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonCheckBox*                   NotWorkingCheckBox;                                // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonCheckBox*                   RudeContentCheckBox;                               // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonCheckBox*                   IllegalContentCheckBox;                            // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonCheckBox*                   StolenContentCheckBox;                             // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonCheckBox*                   FalseInformationCheckBox;                          // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonCheckBox*                   OtherCheckBox;                                     // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 ProceedButton;                                     // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 CancelButton;                                      // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4A8[0x8];                                      // 0x04A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonReportReasonView">();
	}
	static class UModioCommonReportReasonView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonReportReasonView>();
	}
};
static_assert(alignof(UModioCommonReportReasonView) == 0x000008, "Wrong alignment on UModioCommonReportReasonView");
static_assert(sizeof(UModioCommonReportReasonView) == 0x0004B0, "Wrong size on UModioCommonReportReasonView");
static_assert(offsetof(UModioCommonReportReasonView, ReportCheckBoxStyle) == 0x000448, "Member 'UModioCommonReportReasonView::ReportCheckBoxStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonReportReasonView, TitleTextBlock) == 0x000450, "Member 'UModioCommonReportReasonView::TitleTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonReportReasonView, DescriptionTextBlock) == 0x000458, "Member 'UModioCommonReportReasonView::DescriptionTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonReportReasonView, DMCACheckBox) == 0x000460, "Member 'UModioCommonReportReasonView::DMCACheckBox' has a wrong offset!");
static_assert(offsetof(UModioCommonReportReasonView, NotWorkingCheckBox) == 0x000468, "Member 'UModioCommonReportReasonView::NotWorkingCheckBox' has a wrong offset!");
static_assert(offsetof(UModioCommonReportReasonView, RudeContentCheckBox) == 0x000470, "Member 'UModioCommonReportReasonView::RudeContentCheckBox' has a wrong offset!");
static_assert(offsetof(UModioCommonReportReasonView, IllegalContentCheckBox) == 0x000478, "Member 'UModioCommonReportReasonView::IllegalContentCheckBox' has a wrong offset!");
static_assert(offsetof(UModioCommonReportReasonView, StolenContentCheckBox) == 0x000480, "Member 'UModioCommonReportReasonView::StolenContentCheckBox' has a wrong offset!");
static_assert(offsetof(UModioCommonReportReasonView, FalseInformationCheckBox) == 0x000488, "Member 'UModioCommonReportReasonView::FalseInformationCheckBox' has a wrong offset!");
static_assert(offsetof(UModioCommonReportReasonView, OtherCheckBox) == 0x000490, "Member 'UModioCommonReportReasonView::OtherCheckBox' has a wrong offset!");
static_assert(offsetof(UModioCommonReportReasonView, ProceedButton) == 0x000498, "Member 'UModioCommonReportReasonView::ProceedButton' has a wrong offset!");
static_assert(offsetof(UModioCommonReportReasonView, CancelButton) == 0x0004A0, "Member 'UModioCommonReportReasonView::CancelButton' has a wrong offset!");

// Class ModioUI.ModioCommonReportSummaryViewBase
// 0x0030 (0x0458 - 0x0428)
class UModioCommonReportSummaryViewBase : public UModioCommonActivatableWidget
{
public:
	TMulticastInlineDelegate<void()>              OnBackClicked;                                     // 0x0428(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnCancelClicked;                                   // 0x0438(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnSubmitClicked;                                   // 0x0448(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void SetReportParams(const struct FModioReportParams& ReportParams);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonReportSummaryViewBase">();
	}
	static class UModioCommonReportSummaryViewBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonReportSummaryViewBase>();
	}
};
static_assert(alignof(UModioCommonReportSummaryViewBase) == 0x000008, "Wrong alignment on UModioCommonReportSummaryViewBase");
static_assert(sizeof(UModioCommonReportSummaryViewBase) == 0x000458, "Wrong size on UModioCommonReportSummaryViewBase");
static_assert(offsetof(UModioCommonReportSummaryViewBase, OnBackClicked) == 0x000428, "Member 'UModioCommonReportSummaryViewBase::OnBackClicked' has a wrong offset!");
static_assert(offsetof(UModioCommonReportSummaryViewBase, OnCancelClicked) == 0x000438, "Member 'UModioCommonReportSummaryViewBase::OnCancelClicked' has a wrong offset!");
static_assert(offsetof(UModioCommonReportSummaryViewBase, OnSubmitClicked) == 0x000448, "Member 'UModioCommonReportSummaryViewBase::OnSubmitClicked' has a wrong offset!");

// Class ModioUI.ModioCommonReportSummaryView
// 0x0058 (0x04B0 - 0x0458)
class UModioCommonReportSummaryView final : public UModioCommonReportSummaryViewBase
{
public:
	class UModioCommonTextBlock*                  TitleTextBlock;                                    // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  DescriptionTextBlock;                              // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  ReasonLabelTextBlock;                              // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  ReasonContentTextBlock;                            // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  EmailLabelTextBlock;                               // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  EmailContentTextBlock;                             // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  DetailsLabelTextBlock;                             // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonMultiLineEditableTextBox*   DetailsContentTextBlock;                           // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 BackButton;                                        // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 SubmitButton;                                      // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 CancelButton;                                      // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonReportSummaryView">();
	}
	static class UModioCommonReportSummaryView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonReportSummaryView>();
	}
};
static_assert(alignof(UModioCommonReportSummaryView) == 0x000008, "Wrong alignment on UModioCommonReportSummaryView");
static_assert(sizeof(UModioCommonReportSummaryView) == 0x0004B0, "Wrong size on UModioCommonReportSummaryView");
static_assert(offsetof(UModioCommonReportSummaryView, TitleTextBlock) == 0x000458, "Member 'UModioCommonReportSummaryView::TitleTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonReportSummaryView, DescriptionTextBlock) == 0x000460, "Member 'UModioCommonReportSummaryView::DescriptionTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonReportSummaryView, ReasonLabelTextBlock) == 0x000468, "Member 'UModioCommonReportSummaryView::ReasonLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonReportSummaryView, ReasonContentTextBlock) == 0x000470, "Member 'UModioCommonReportSummaryView::ReasonContentTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonReportSummaryView, EmailLabelTextBlock) == 0x000478, "Member 'UModioCommonReportSummaryView::EmailLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonReportSummaryView, EmailContentTextBlock) == 0x000480, "Member 'UModioCommonReportSummaryView::EmailContentTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonReportSummaryView, DetailsLabelTextBlock) == 0x000488, "Member 'UModioCommonReportSummaryView::DetailsLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonReportSummaryView, DetailsContentTextBlock) == 0x000490, "Member 'UModioCommonReportSummaryView::DetailsContentTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonReportSummaryView, BackButton) == 0x000498, "Member 'UModioCommonReportSummaryView::BackButton' has a wrong offset!");
static_assert(offsetof(UModioCommonReportSummaryView, SubmitButton) == 0x0004A0, "Member 'UModioCommonReportSummaryView::SubmitButton' has a wrong offset!");
static_assert(offsetof(UModioCommonReportSummaryView, CancelButton) == 0x0004A8, "Member 'UModioCommonReportSummaryView::CancelButton' has a wrong offset!");

// Class ModioUI.ModioCommonReportViewBase
// 0x0000 (0x0428 - 0x0428)
class UModioCommonReportViewBase : public UModioCommonActivatableWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonReportViewBase">();
	}
	static class UModioCommonReportViewBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonReportViewBase>();
	}
};
static_assert(alignof(UModioCommonReportViewBase) == 0x000008, "Wrong alignment on UModioCommonReportViewBase");
static_assert(sizeof(UModioCommonReportViewBase) == 0x000428, "Wrong size on UModioCommonReportViewBase");

// Class ModioUI.ModioCommonReportView
// 0x00A0 (0x04C8 - 0x0428)
class UModioCommonReportView final : public UModioCommonReportViewBase
{
public:
	class UModioCommonWidgetSwitcher*             ReportSwitcher;                                    // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UModioCommonReportReasonViewBase> ReportReasonViewClass;                             // 0x0430(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UModioCommonReportEmailViewBase> ReportEmailViewClass;                              // 0x0438(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UModioCommonReportMessageViewBase> ReportMessageViewClass;                            // 0x0440(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UModioCommonReportSummaryViewBase> ReportSummaryViewClass;                            // 0x0448(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FModioReportParams                     ReportParams;                                      // 0x0450(0x0058)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	class UModioCommonReportReasonViewBase*       ReportReasonView;                                  // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonReportEmailViewBase*        ReportEmailView;                                   // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonReportMessageViewBase*      ReportMessageView;                                 // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonReportSummaryViewBase*      ReportSummaryView;                                 // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleReportSubmit(const struct FModioErrorCode& errorCode);
	void OnReportEmailViewBackClicked();
	void OnReportEmailViewCancelClicked();
	void OnReportEmailViewSubmitClicked(const class FString& Email);
	void OnReportMessageViewBackClicked();
	void OnReportMessageViewCancelClicked();
	void OnReportMessageViewSubmitClicked(const class FString& message);
	void OnReportReasonViewCancelClicked();
	void OnReportReasonViewProceedClicked(EModioReportType Type);
	void OnReportSummaryViewBackClicked();
	void OnReportSummaryViewCancelClicked();
	void OnReportSummaryViewSubmitClicked();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonReportView">();
	}
	static class UModioCommonReportView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonReportView>();
	}
};
static_assert(alignof(UModioCommonReportView) == 0x000008, "Wrong alignment on UModioCommonReportView");
static_assert(sizeof(UModioCommonReportView) == 0x0004C8, "Wrong size on UModioCommonReportView");
static_assert(offsetof(UModioCommonReportView, ReportSwitcher) == 0x000428, "Member 'UModioCommonReportView::ReportSwitcher' has a wrong offset!");
static_assert(offsetof(UModioCommonReportView, ReportReasonViewClass) == 0x000430, "Member 'UModioCommonReportView::ReportReasonViewClass' has a wrong offset!");
static_assert(offsetof(UModioCommonReportView, ReportEmailViewClass) == 0x000438, "Member 'UModioCommonReportView::ReportEmailViewClass' has a wrong offset!");
static_assert(offsetof(UModioCommonReportView, ReportMessageViewClass) == 0x000440, "Member 'UModioCommonReportView::ReportMessageViewClass' has a wrong offset!");
static_assert(offsetof(UModioCommonReportView, ReportSummaryViewClass) == 0x000448, "Member 'UModioCommonReportView::ReportSummaryViewClass' has a wrong offset!");
static_assert(offsetof(UModioCommonReportView, ReportParams) == 0x000450, "Member 'UModioCommonReportView::ReportParams' has a wrong offset!");
static_assert(offsetof(UModioCommonReportView, ReportReasonView) == 0x0004A8, "Member 'UModioCommonReportView::ReportReasonView' has a wrong offset!");
static_assert(offsetof(UModioCommonReportView, ReportEmailView) == 0x0004B0, "Member 'UModioCommonReportView::ReportEmailView' has a wrong offset!");
static_assert(offsetof(UModioCommonReportView, ReportMessageView) == 0x0004B8, "Member 'UModioCommonReportView::ReportMessageView' has a wrong offset!");
static_assert(offsetof(UModioCommonReportView, ReportSummaryView) == 0x0004C0, "Member 'UModioCommonReportView::ReportSummaryView' has a wrong offset!");

// Class ModioUI.ModioCommonRichTextBlock
// 0x0150 (0x0AC0 - 0x0970)
class UModioCommonRichTextBlock final : public UCommonRichTextBlock
{
public:
	TSubclassOf<class UModioCommonRichTextStyle>  ModioStyle;                                        // 0x0968(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_970[0x150];                                    // 0x0970(0x0150)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetStyle(TSubclassOf<class UModioCommonRichTextStyle> InStyle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonRichTextBlock">();
	}
	static class UModioCommonRichTextBlock* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonRichTextBlock>();
	}
};
static_assert(alignof(UModioCommonRichTextBlock) == 0x000010, "Wrong alignment on UModioCommonRichTextBlock");
static_assert(sizeof(UModioCommonRichTextBlock) == 0x000AC0, "Wrong size on UModioCommonRichTextBlock");
static_assert(offsetof(UModioCommonRichTextBlock, ModioStyle) == 0x000968, "Member 'UModioCommonRichTextBlock::ModioStyle' has a wrong offset!");

// Class ModioUI.ModioCommonRichTextStyle
// 0x0130 (0x0300 - 0x01D0)
class UModioCommonRichTextStyle final : public UCommonTextStyle
{
public:
	struct FSlateBrush                            ImageBrush;                                        // 0x01D0(0x00F0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EModioCommonRichTextStyleTextImageOrder       TextImageOrder;                                    // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                ImagePadding;                                      // 0x02C4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                                TextPadding;                                       // 0x02D4(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FSlateChildSize                        ImageSize;                                         // 0x02E4(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FSlateChildSize                        TextSize;                                          // 0x02EC(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          ImageHorizontalAlignment;                          // 0x02F4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVerticalAlignment                            ImageVerticalAlignment;                            // 0x02F5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          TextHorizontalAlignment;                           // 0x02F6(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVerticalAlignment                            TextVerticalAlignment;                             // 0x02F7(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F8[0x8];                                      // 0x02F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonRichTextStyle">();
	}
	static class UModioCommonRichTextStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonRichTextStyle>();
	}
};
static_assert(alignof(UModioCommonRichTextStyle) == 0x000010, "Wrong alignment on UModioCommonRichTextStyle");
static_assert(sizeof(UModioCommonRichTextStyle) == 0x000300, "Wrong size on UModioCommonRichTextStyle");
static_assert(offsetof(UModioCommonRichTextStyle, ImageBrush) == 0x0001D0, "Member 'UModioCommonRichTextStyle::ImageBrush' has a wrong offset!");
static_assert(offsetof(UModioCommonRichTextStyle, TextImageOrder) == 0x0002C0, "Member 'UModioCommonRichTextStyle::TextImageOrder' has a wrong offset!");
static_assert(offsetof(UModioCommonRichTextStyle, ImagePadding) == 0x0002C4, "Member 'UModioCommonRichTextStyle::ImagePadding' has a wrong offset!");
static_assert(offsetof(UModioCommonRichTextStyle, TextPadding) == 0x0002D4, "Member 'UModioCommonRichTextStyle::TextPadding' has a wrong offset!");
static_assert(offsetof(UModioCommonRichTextStyle, ImageSize) == 0x0002E4, "Member 'UModioCommonRichTextStyle::ImageSize' has a wrong offset!");
static_assert(offsetof(UModioCommonRichTextStyle, TextSize) == 0x0002EC, "Member 'UModioCommonRichTextStyle::TextSize' has a wrong offset!");
static_assert(offsetof(UModioCommonRichTextStyle, ImageHorizontalAlignment) == 0x0002F4, "Member 'UModioCommonRichTextStyle::ImageHorizontalAlignment' has a wrong offset!");
static_assert(offsetof(UModioCommonRichTextStyle, ImageVerticalAlignment) == 0x0002F5, "Member 'UModioCommonRichTextStyle::ImageVerticalAlignment' has a wrong offset!");
static_assert(offsetof(UModioCommonRichTextStyle, TextHorizontalAlignment) == 0x0002F6, "Member 'UModioCommonRichTextStyle::TextHorizontalAlignment' has a wrong offset!");
static_assert(offsetof(UModioCommonRichTextStyle, TextVerticalAlignment) == 0x0002F7, "Member 'UModioCommonRichTextStyle::TextVerticalAlignment' has a wrong offset!");

// Class ModioUI.ModioCommonScrollBar
// 0x0000 (0x0A20 - 0x0A20)
class UModioCommonScrollBar final : public UScrollBar
{
public:
	TSubclassOf<class UModioCommonScrollBarStyle> ModioStyle;                                        // 0x0A18(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SetStyle(TSubclassOf<class UModioCommonScrollBarStyle> InStyle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonScrollBar">();
	}
	static class UModioCommonScrollBar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonScrollBar>();
	}
};
static_assert(alignof(UModioCommonScrollBar) == 0x000010, "Wrong alignment on UModioCommonScrollBar");
static_assert(sizeof(UModioCommonScrollBar) == 0x000A20, "Wrong size on UModioCommonScrollBar");
static_assert(offsetof(UModioCommonScrollBar, ModioStyle) == 0x000A18, "Member 'UModioCommonScrollBar::ModioStyle' has a wrong offset!");

// Class ModioUI.ModioCommonScrollBarStyle
// 0x08C8 (0x08F0 - 0x0028)
class UModioCommonScrollBarStyle final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScrollBarStyle                        Style;                                             // 0x0030(0x0890)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bAlwaysShowScrollbar;                              // 0x08C0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAlwaysShowScrollbarTrack;                         // 0x08C1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOrientation                                  Orientation;                                       // 0x08C2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C3[0x5];                                      // 0x08C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Thickness;                                         // 0x08C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMargin                                Padding;                                           // 0x08D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_8E8[0x8];                                      // 0x08E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonScrollBarStyle">();
	}
	static class UModioCommonScrollBarStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonScrollBarStyle>();
	}
};
static_assert(alignof(UModioCommonScrollBarStyle) == 0x000010, "Wrong alignment on UModioCommonScrollBarStyle");
static_assert(sizeof(UModioCommonScrollBarStyle) == 0x0008F0, "Wrong size on UModioCommonScrollBarStyle");
static_assert(offsetof(UModioCommonScrollBarStyle, Style) == 0x000030, "Member 'UModioCommonScrollBarStyle::Style' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBarStyle, bAlwaysShowScrollbar) == 0x0008C0, "Member 'UModioCommonScrollBarStyle::bAlwaysShowScrollbar' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBarStyle, bAlwaysShowScrollbarTrack) == 0x0008C1, "Member 'UModioCommonScrollBarStyle::bAlwaysShowScrollbarTrack' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBarStyle, Orientation) == 0x0008C2, "Member 'UModioCommonScrollBarStyle::Orientation' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBarStyle, Thickness) == 0x0008C8, "Member 'UModioCommonScrollBarStyle::Thickness' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBarStyle, Padding) == 0x0008D8, "Member 'UModioCommonScrollBarStyle::Padding' has a wrong offset!");

// Class ModioUI.ModioCommonScrollBox
// 0x0020 (0x0E60 - 0x0E40)
class UModioCommonScrollBox final : public UScrollBox
{
public:
	TSubclassOf<class UModioCommonScrollBoxStyle> ModioStyle;                                        // 0x0E38(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetNavigation*                      UserDefinedNavigation;                             // 0x0E40(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E48[0x18];                                     // 0x0E48(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UWidget* HandleCustomBoundaryNavigation(EUINavigation InNavigation);
	void OnUserScrolledHandle(float CurrentOffset);
	void SetStyle(TSubclassOf<class UModioCommonScrollBoxStyle> InStyle);
	void UpdateNavigationData(int32 PendingScrollOffset);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonScrollBox">();
	}
	static class UModioCommonScrollBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonScrollBox>();
	}
};
static_assert(alignof(UModioCommonScrollBox) == 0x000010, "Wrong alignment on UModioCommonScrollBox");
static_assert(sizeof(UModioCommonScrollBox) == 0x000E60, "Wrong size on UModioCommonScrollBox");
static_assert(offsetof(UModioCommonScrollBox, ModioStyle) == 0x000E38, "Member 'UModioCommonScrollBox::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBox, UserDefinedNavigation) == 0x000E40, "Member 'UModioCommonScrollBox::UserDefinedNavigation' has a wrong offset!");

// Class ModioUI.ModioCommonScrollBoxStyle
// 0x0408 (0x0430 - 0x0028)
class UModioCommonScrollBoxStyle final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScrollBoxStyle                        Style;                                             // 0x0030(0x03D0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonScrollBarStyle> ScrollBarStyle;                                    // 0x0400(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateVisibility                              ScrollBarVisibility;                               // 0x0408(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EConsumeMouseWheel                            ConsumeMouseWheel;                                 // 0x0409(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AllowOverscroll;                                   // 0x040A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          BackPadScrolling;                                  // 0x040B(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          FrontPadScrolling;                                 // 0x040C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAnimateWheelScrolling;                            // 0x040D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDescendantScrollDestination                  NavigationDestination;                             // 0x040E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_40F[0x1];                                      // 0x040F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NavigationScrollPadding;                           // 0x0410(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EScrollWhenFocusChanges                       ScrollWhenFocusChanges;                            // 0x0414(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowRightClickDragScrolling;                     // 0x0415(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_416[0x2];                                      // 0x0416(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WheelScrollMultiplier;                             // 0x0418(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bScrollByNavigationInput;                          // 0x041C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NavigationScrollOffsetStep;                        // 0x0420(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NavigationScrollOffsetSpeed;                       // 0x0424(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_428[0x8];                                      // 0x0428(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonScrollBoxStyle">();
	}
	static class UModioCommonScrollBoxStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonScrollBoxStyle>();
	}
};
static_assert(alignof(UModioCommonScrollBoxStyle) == 0x000010, "Wrong alignment on UModioCommonScrollBoxStyle");
static_assert(sizeof(UModioCommonScrollBoxStyle) == 0x000430, "Wrong size on UModioCommonScrollBoxStyle");
static_assert(offsetof(UModioCommonScrollBoxStyle, Style) == 0x000030, "Member 'UModioCommonScrollBoxStyle::Style' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBoxStyle, ScrollBarStyle) == 0x000400, "Member 'UModioCommonScrollBoxStyle::ScrollBarStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBoxStyle, ScrollBarVisibility) == 0x000408, "Member 'UModioCommonScrollBoxStyle::ScrollBarVisibility' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBoxStyle, ConsumeMouseWheel) == 0x000409, "Member 'UModioCommonScrollBoxStyle::ConsumeMouseWheel' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBoxStyle, AllowOverscroll) == 0x00040A, "Member 'UModioCommonScrollBoxStyle::AllowOverscroll' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBoxStyle, BackPadScrolling) == 0x00040B, "Member 'UModioCommonScrollBoxStyle::BackPadScrolling' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBoxStyle, FrontPadScrolling) == 0x00040C, "Member 'UModioCommonScrollBoxStyle::FrontPadScrolling' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBoxStyle, bAnimateWheelScrolling) == 0x00040D, "Member 'UModioCommonScrollBoxStyle::bAnimateWheelScrolling' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBoxStyle, NavigationDestination) == 0x00040E, "Member 'UModioCommonScrollBoxStyle::NavigationDestination' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBoxStyle, NavigationScrollPadding) == 0x000410, "Member 'UModioCommonScrollBoxStyle::NavigationScrollPadding' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBoxStyle, ScrollWhenFocusChanges) == 0x000414, "Member 'UModioCommonScrollBoxStyle::ScrollWhenFocusChanges' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBoxStyle, bAllowRightClickDragScrolling) == 0x000415, "Member 'UModioCommonScrollBoxStyle::bAllowRightClickDragScrolling' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBoxStyle, WheelScrollMultiplier) == 0x000418, "Member 'UModioCommonScrollBoxStyle::WheelScrollMultiplier' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBoxStyle, bScrollByNavigationInput) == 0x00041C, "Member 'UModioCommonScrollBoxStyle::bScrollByNavigationInput' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBoxStyle, NavigationScrollOffsetStep) == 0x000420, "Member 'UModioCommonScrollBoxStyle::NavigationScrollOffsetStep' has a wrong offset!");
static_assert(offsetof(UModioCommonScrollBoxStyle, NavigationScrollOffsetSpeed) == 0x000424, "Member 'UModioCommonScrollBoxStyle::NavigationScrollOffsetSpeed' has a wrong offset!");

// Class ModioUI.ModioCommonSearchResultsView
// 0x00A8 (0x04D0 - 0x0428)
class UModioCommonSearchResultsView : public UModioCommonModListBase
{
public:
	TSubclassOf<class UModioCommonSearchResultsViewStyle> ModioStyle;                                        // 0x0428(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonFilteredModListView*        FilteredModListView;                               // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UModioCommonTextBlock*                  KeywordsLabelTextBlock;                            // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  KeywordsDetailsTextBlock;                          // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  CategoriesLabelTextBlock;                          // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonModTagList*                 CategoriesList;                                    // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 EditSearchButton;                                  // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  FilterCounterTextBlock;                            // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FModioModCategoryParams                AppliedFilterParams;                               // 0x0468(0x0060)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                          bWasEverPopulated;                                 // 0x04C8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetStyle(TSubclassOf<class UModioCommonSearchResultsViewStyle> InStyle);
	void ShowSearchView();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonSearchResultsView">();
	}
	static class UModioCommonSearchResultsView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonSearchResultsView>();
	}
};
static_assert(alignof(UModioCommonSearchResultsView) == 0x000008, "Wrong alignment on UModioCommonSearchResultsView");
static_assert(sizeof(UModioCommonSearchResultsView) == 0x0004D0, "Wrong size on UModioCommonSearchResultsView");
static_assert(offsetof(UModioCommonSearchResultsView, ModioStyle) == 0x000428, "Member 'UModioCommonSearchResultsView::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchResultsView, FilteredModListView) == 0x000430, "Member 'UModioCommonSearchResultsView::FilteredModListView' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchResultsView, KeywordsLabelTextBlock) == 0x000438, "Member 'UModioCommonSearchResultsView::KeywordsLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchResultsView, KeywordsDetailsTextBlock) == 0x000440, "Member 'UModioCommonSearchResultsView::KeywordsDetailsTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchResultsView, CategoriesLabelTextBlock) == 0x000448, "Member 'UModioCommonSearchResultsView::CategoriesLabelTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchResultsView, CategoriesList) == 0x000450, "Member 'UModioCommonSearchResultsView::CategoriesList' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchResultsView, EditSearchButton) == 0x000458, "Member 'UModioCommonSearchResultsView::EditSearchButton' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchResultsView, FilterCounterTextBlock) == 0x000460, "Member 'UModioCommonSearchResultsView::FilterCounterTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchResultsView, AppliedFilterParams) == 0x000468, "Member 'UModioCommonSearchResultsView::AppliedFilterParams' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchResultsView, bWasEverPopulated) == 0x0004C8, "Member 'UModioCommonSearchResultsView::bWasEverPopulated' has a wrong offset!");

// Class ModioUI.ModioCommonSearchResultsViewStyle
// 0x0030 (0x0058 - 0x0028)
class UModioCommonSearchResultsViewStyle final : public UObject
{
public:
	TSubclassOf<class UModioCommonFilteredModListViewStyle> FilteredModListViewStyle;                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      KeywordsLabelTextStyle;                            // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      KeywordsDetailsTextStyle;                          // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      CategoriesLabelTextStyle;                          // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonButtonStyle>    EditSearchButtonStyle;                             // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      FilterCounterTextStyle;                            // 0x0050(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonSearchResultsViewStyle">();
	}
	static class UModioCommonSearchResultsViewStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonSearchResultsViewStyle>();
	}
};
static_assert(alignof(UModioCommonSearchResultsViewStyle) == 0x000008, "Wrong alignment on UModioCommonSearchResultsViewStyle");
static_assert(sizeof(UModioCommonSearchResultsViewStyle) == 0x000058, "Wrong size on UModioCommonSearchResultsViewStyle");
static_assert(offsetof(UModioCommonSearchResultsViewStyle, FilteredModListViewStyle) == 0x000028, "Member 'UModioCommonSearchResultsViewStyle::FilteredModListViewStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchResultsViewStyle, KeywordsLabelTextStyle) == 0x000030, "Member 'UModioCommonSearchResultsViewStyle::KeywordsLabelTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchResultsViewStyle, KeywordsDetailsTextStyle) == 0x000038, "Member 'UModioCommonSearchResultsViewStyle::KeywordsDetailsTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchResultsViewStyle, CategoriesLabelTextStyle) == 0x000040, "Member 'UModioCommonSearchResultsViewStyle::CategoriesLabelTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchResultsViewStyle, EditSearchButtonStyle) == 0x000048, "Member 'UModioCommonSearchResultsViewStyle::EditSearchButtonStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchResultsViewStyle, FilterCounterTextStyle) == 0x000050, "Member 'UModioCommonSearchResultsViewStyle::FilterCounterTextStyle' has a wrong offset!");

// Class ModioUI.ModioCommonSearchViewBase
// 0x0000 (0x0428 - 0x0428)
class UModioCommonSearchViewBase : public UModioCommonActivatableWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonSearchViewBase">();
	}
	static class UModioCommonSearchViewBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonSearchViewBase>();
	}
};
static_assert(alignof(UModioCommonSearchViewBase) == 0x000008, "Wrong alignment on UModioCommonSearchViewBase");
static_assert(sizeof(UModioCommonSearchViewBase) == 0x000428, "Wrong size on UModioCommonSearchViewBase");

// Class ModioUI.ModioCommonSearchTabView
// 0x0048 (0x0470 - 0x0428)
class UModioCommonSearchTabView final : public UModioCommonSearchViewBase
{
public:
	TSubclassOf<class UModioCommonSearchTabViewStyle> ModioStyle;                                        // 0x0428(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonBorder*                     InternalBackgroundBorder;                          // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonBorder*                     OverlayBackgroundBorder;                           // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonTextBlock*                  SearchTabTitleTextBlock;                           // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonFilteringView*              FilteringView;                                     // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonEditableTextBox*            SearchTextBox;                                     // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 CloseButton;                                       // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 SearchButton;                                      // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModioCommonButtonBase*                 ResetButton;                                       // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnSearchTextCommitted(const class FText& Text, ETextCommit CommitMethod);
	void Reset();
	void SetStyle(TSubclassOf<class UModioCommonSearchTabViewStyle> InStyle);
	void ShowSearchResults();

	struct FModioFilterParams GetFilterParams() const;
	struct FModioModCategoryParams GetFilterParamsWrapper() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonSearchTabView">();
	}
	static class UModioCommonSearchTabView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonSearchTabView>();
	}
};
static_assert(alignof(UModioCommonSearchTabView) == 0x000008, "Wrong alignment on UModioCommonSearchTabView");
static_assert(sizeof(UModioCommonSearchTabView) == 0x000470, "Wrong size on UModioCommonSearchTabView");
static_assert(offsetof(UModioCommonSearchTabView, ModioStyle) == 0x000428, "Member 'UModioCommonSearchTabView::ModioStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchTabView, InternalBackgroundBorder) == 0x000430, "Member 'UModioCommonSearchTabView::InternalBackgroundBorder' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchTabView, OverlayBackgroundBorder) == 0x000438, "Member 'UModioCommonSearchTabView::OverlayBackgroundBorder' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchTabView, SearchTabTitleTextBlock) == 0x000440, "Member 'UModioCommonSearchTabView::SearchTabTitleTextBlock' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchTabView, FilteringView) == 0x000448, "Member 'UModioCommonSearchTabView::FilteringView' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchTabView, SearchTextBox) == 0x000450, "Member 'UModioCommonSearchTabView::SearchTextBox' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchTabView, CloseButton) == 0x000458, "Member 'UModioCommonSearchTabView::CloseButton' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchTabView, SearchButton) == 0x000460, "Member 'UModioCommonSearchTabView::SearchButton' has a wrong offset!");
static_assert(offsetof(UModioCommonSearchTabView, ResetButton) == 0x000468, "Member 'UModioCommonSearchTabView::ResetButton' has a wrong offset!");

// Class ModioUI.ModioSearchResultsParamsUI
// 0x0068 (0x0090 - 0x0028)
class UModioSearchResultsParamsUI final : public UObject
{
public:
	struct FModioModCategoryParams                FilterParams;                                      // 0x0028(0x0060)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EModioCommonSearchViewType                    SearchType;                                        // 0x0088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioSearchResultsParamsUI">();
	}
	static class UModioSearchResultsParamsUI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioSearchResultsParamsUI>();
	}
};
static_assert(alignof(UModioSearchResultsParamsUI) == 0x000008, "Wrong alignment on UModioSearchResultsParamsUI");
static_assert(sizeof(UModioSearchResultsParamsUI) == 0x000090, "Wrong size on UModioSearchResultsParamsUI");
static_assert(offsetof(UModioSearchResultsParamsUI, FilterParams) == 0x000028, "Member 'UModioSearchResultsParamsUI::FilterParams' has a wrong offset!");
static_assert(offsetof(UModioSearchResultsParamsUI, SearchType) == 0x000088, "Member 'UModioSearchResultsParamsUI::SearchType' has a wrong offset!");

// Class ModioUI.ModioCommonStorageSpaceTrackerUserWidgetStyle
// 0x0040 (0x0068 - 0x0028)
class UModioCommonStorageSpaceTrackerUserWidgetStyle final : public UObject
{
public:
	TSubclassOf<class UModioCommonImageStyle>     IconImageStyle;                                    // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      UsedSpaceLabelTextStyle;                           // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      UsedSpaceTextStyle;                                // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      FreeSpaceLabelTextStyle;                           // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      FreeSpaceTextStyle;                                // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      TotalSpaceLabelTextStyle;                          // 0x0050(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTextStyle>      TotalSpaceTextStyle;                               // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonProgressBarStyle> StorageSpaceProgressBarStyle;                      // 0x0060(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonStorageSpaceTrackerUserWidgetStyle">();
	}
	static class UModioCommonStorageSpaceTrackerUserWidgetStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonStorageSpaceTrackerUserWidgetStyle>();
	}
};
static_assert(alignof(UModioCommonStorageSpaceTrackerUserWidgetStyle) == 0x000008, "Wrong alignment on UModioCommonStorageSpaceTrackerUserWidgetStyle");
static_assert(sizeof(UModioCommonStorageSpaceTrackerUserWidgetStyle) == 0x000068, "Wrong size on UModioCommonStorageSpaceTrackerUserWidgetStyle");
static_assert(offsetof(UModioCommonStorageSpaceTrackerUserWidgetStyle, IconImageStyle) == 0x000028, "Member 'UModioCommonStorageSpaceTrackerUserWidgetStyle::IconImageStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonStorageSpaceTrackerUserWidgetStyle, UsedSpaceLabelTextStyle) == 0x000030, "Member 'UModioCommonStorageSpaceTrackerUserWidgetStyle::UsedSpaceLabelTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonStorageSpaceTrackerUserWidgetStyle, UsedSpaceTextStyle) == 0x000038, "Member 'UModioCommonStorageSpaceTrackerUserWidgetStyle::UsedSpaceTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonStorageSpaceTrackerUserWidgetStyle, FreeSpaceLabelTextStyle) == 0x000040, "Member 'UModioCommonStorageSpaceTrackerUserWidgetStyle::FreeSpaceLabelTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonStorageSpaceTrackerUserWidgetStyle, FreeSpaceTextStyle) == 0x000048, "Member 'UModioCommonStorageSpaceTrackerUserWidgetStyle::FreeSpaceTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonStorageSpaceTrackerUserWidgetStyle, TotalSpaceLabelTextStyle) == 0x000050, "Member 'UModioCommonStorageSpaceTrackerUserWidgetStyle::TotalSpaceLabelTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonStorageSpaceTrackerUserWidgetStyle, TotalSpaceTextStyle) == 0x000058, "Member 'UModioCommonStorageSpaceTrackerUserWidgetStyle::TotalSpaceTextStyle' has a wrong offset!");
static_assert(offsetof(UModioCommonStorageSpaceTrackerUserWidgetStyle, StorageSpaceProgressBarStyle) == 0x000060, "Member 'UModioCommonStorageSpaceTrackerUserWidgetStyle::StorageSpaceProgressBarStyle' has a wrong offset!");

// Class ModioUI.ModioCommonStorageSpaceTrackerWidget
// 0x0028 (0x0188 - 0x0160)
class UModioCommonStorageSpaceTrackerWidget final : public UTickableModioCommonWidget
{
public:
	uint8                                         Pad_160[0x18];                                     // 0x0160(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FModioUnsigned64& UsedSpace, const struct FModioUnsigned64& FreeSpace, const struct FModioUnsigned64& TotalSpace)> OnStorageSpaceTrackerUpdated;                      // 0x0178(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonStorageSpaceTrackerWidget">();
	}
	static class UModioCommonStorageSpaceTrackerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonStorageSpaceTrackerWidget>();
	}
};
static_assert(alignof(UModioCommonStorageSpaceTrackerWidget) == 0x000008, "Wrong alignment on UModioCommonStorageSpaceTrackerWidget");
static_assert(sizeof(UModioCommonStorageSpaceTrackerWidget) == 0x000188, "Wrong size on UModioCommonStorageSpaceTrackerWidget");
static_assert(offsetof(UModioCommonStorageSpaceTrackerWidget, OnStorageSpaceTrackerUpdated) == 0x000178, "Member 'UModioCommonStorageSpaceTrackerWidget::OnStorageSpaceTrackerUpdated' has a wrong offset!");

// Class ModioUI.ModioCommonTabButtonInterface
// 0x0000 (0x0028 - 0x0028)
class IModioCommonTabButtonInterface final : public IInterface
{
public:
	void SetTabLabelInfo(const struct FModioCommonTabDescriptor& InTabLabelInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonTabButtonInterface">();
	}
	static class IModioCommonTabButtonInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IModioCommonTabButtonInterface>();
	}
};
static_assert(alignof(IModioCommonTabButtonInterface) == 0x000008, "Wrong alignment on IModioCommonTabButtonInterface");
static_assert(sizeof(IModioCommonTabButtonInterface) == 0x000028, "Wrong size on IModioCommonTabButtonInterface");

// Class ModioUI.ModioCommonTabButtonStyle
// 0x0000 (0x08C0 - 0x08C0)
class UModioCommonTabButtonStyle final : public UModioCommonButtonStyle
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonTabButtonStyle">();
	}
	static class UModioCommonTabButtonStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonTabButtonStyle>();
	}
};
static_assert(alignof(UModioCommonTabButtonStyle) == 0x000010, "Wrong alignment on UModioCommonTabButtonStyle");
static_assert(sizeof(UModioCommonTabButtonStyle) == 0x0008C0, "Wrong size on UModioCommonTabButtonStyle");

// Class ModioUI.ModioCommonTextBlock
// 0x0000 (0x0390 - 0x0390)
class UModioCommonTextBlock final : public UCommonTextBlock
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonTextBlock">();
	}
	static class UModioCommonTextBlock* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonTextBlock>();
	}
};
static_assert(alignof(UModioCommonTextBlock) == 0x000010, "Wrong alignment on UModioCommonTextBlock");
static_assert(sizeof(UModioCommonTextBlock) == 0x000390, "Wrong size on UModioCommonTextBlock");

// Class ModioUI.ModioCommonUIAsyncLoader
// 0x0000 (0x01C8 - 0x01C8)
class UModioCommonUIAsyncLoader final : public UModioUIAsyncLoader
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonUIAsyncLoader">();
	}
	static class UModioCommonUIAsyncLoader* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonUIAsyncLoader>();
	}
};
static_assert(alignof(UModioCommonUIAsyncLoader) == 0x000008, "Wrong alignment on UModioCommonUIAsyncLoader");
static_assert(sizeof(UModioCommonUIAsyncLoader) == 0x0001C8, "Wrong size on UModioCommonUIAsyncLoader");

// Class ModioUI.ModioCommonUISettings
// 0x0CD8 (0x0D10 - 0x0038)
class UModioCommonUISettings final : public UDeveloperSettings
{
public:
	bool                                          bEnableCollectionModDisableUI;                     // 0x0038(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModioCommonAuthParamsSettings         AuthParams;                                        // 0x0040(0x0050)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FModioCommonEmailAuthCodeParamsSettings EmailAuthCodeParams;                               // 0x0090(0x0090)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FModioCommonEmailAuthLoadingParamsSettings EmailAuthLoadingParams;                            // 0x0120(0x0048)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FModioCommonEmailAuthParamsSettings    EmailAuthParams;                                   // 0x0168(0x00A8)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FModioCommonTermsOfUseParamsSettings   TermsOfUseParams;                                  // 0x0210(0x0090)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FModioCommonFilteredModListParams      FilteredModListParams;                             // 0x02A0(0x00B0)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FModioCommonCollectionParamsSettings   CollectionParams;                                  // 0x0350(0x00C8)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FModioCommonFeaturedParamsSettings     FeaturedParams;                                    // 0x0418(0x0010)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FModioCommonModBrowserParamsSettings   ModBrowserParams;                                  // 0x0428(0x0050)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FModioCommonModDetailsParamsSettings   ModDetailsParams;                                  // 0x0478(0x01D0)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FModioCommonModEntryParamsSettings     ModEntryParams;                                    // 0x0648(0x01C0)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FModioCommonModGalleryParamsSettings   ModGalleryParams;                                  // 0x0808(0x0030)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FModioCommonModOperationTrackerParamsSettings ModOperationTrackerParams;                         // 0x0838(0x0048)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FModioCommonQuickAccessParamsSettings  QuickAccessParams;                                 // 0x0880(0x0098)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FModioCommonReportParamsSettings       ReportParams;                                      // 0x0918(0x0048)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FModioCommonReportReasonParamsSettings ReportReasonParams;                                // 0x0960(0x0048)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FModioCommonReportEmailParamsSettings  ReportEmailParams;                                 // 0x09A8(0x0090)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FModioCommonReportMessageParamsSettings ReportMessageParams;                               // 0x0A38(0x0098)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FModioCommonReportSummaryParamsSettings ReportSummaryParams;                               // 0x0AD0(0x00A8)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FModioCommonSearchParamsSettings       SearchParams;                                      // 0x0B78(0x0100)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FModioCommonStorageSpaceTrackerParamsSettings StorageSpaceTrackerParams;                         // 0x0C78(0x0048)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FModioCommonUserProfileWidgetParamsSettings UserProfileParams;                                 // 0x0CC0(0x0028)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FModioCommonErrorWithRetryParamsSettings ErrorWithRetryParams;                              // 0x0CE8(0x0028)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonUISettings">();
	}
	static class UModioCommonUISettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonUISettings>();
	}
};
static_assert(alignof(UModioCommonUISettings) == 0x000008, "Wrong alignment on UModioCommonUISettings");
static_assert(sizeof(UModioCommonUISettings) == 0x000D10, "Wrong size on UModioCommonUISettings");
static_assert(offsetof(UModioCommonUISettings, bEnableCollectionModDisableUI) == 0x000038, "Member 'UModioCommonUISettings::bEnableCollectionModDisableUI' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, AuthParams) == 0x000040, "Member 'UModioCommonUISettings::AuthParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, EmailAuthCodeParams) == 0x000090, "Member 'UModioCommonUISettings::EmailAuthCodeParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, EmailAuthLoadingParams) == 0x000120, "Member 'UModioCommonUISettings::EmailAuthLoadingParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, EmailAuthParams) == 0x000168, "Member 'UModioCommonUISettings::EmailAuthParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, TermsOfUseParams) == 0x000210, "Member 'UModioCommonUISettings::TermsOfUseParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, FilteredModListParams) == 0x0002A0, "Member 'UModioCommonUISettings::FilteredModListParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, CollectionParams) == 0x000350, "Member 'UModioCommonUISettings::CollectionParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, FeaturedParams) == 0x000418, "Member 'UModioCommonUISettings::FeaturedParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, ModBrowserParams) == 0x000428, "Member 'UModioCommonUISettings::ModBrowserParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, ModDetailsParams) == 0x000478, "Member 'UModioCommonUISettings::ModDetailsParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, ModEntryParams) == 0x000648, "Member 'UModioCommonUISettings::ModEntryParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, ModGalleryParams) == 0x000808, "Member 'UModioCommonUISettings::ModGalleryParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, ModOperationTrackerParams) == 0x000838, "Member 'UModioCommonUISettings::ModOperationTrackerParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, QuickAccessParams) == 0x000880, "Member 'UModioCommonUISettings::QuickAccessParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, ReportParams) == 0x000918, "Member 'UModioCommonUISettings::ReportParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, ReportReasonParams) == 0x000960, "Member 'UModioCommonUISettings::ReportReasonParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, ReportEmailParams) == 0x0009A8, "Member 'UModioCommonUISettings::ReportEmailParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, ReportMessageParams) == 0x000A38, "Member 'UModioCommonUISettings::ReportMessageParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, ReportSummaryParams) == 0x000AD0, "Member 'UModioCommonUISettings::ReportSummaryParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, SearchParams) == 0x000B78, "Member 'UModioCommonUISettings::SearchParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, StorageSpaceTrackerParams) == 0x000C78, "Member 'UModioCommonUISettings::StorageSpaceTrackerParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, UserProfileParams) == 0x000CC0, "Member 'UModioCommonUISettings::UserProfileParams' has a wrong offset!");
static_assert(offsetof(UModioCommonUISettings, ErrorWithRetryParams) == 0x000CE8, "Member 'UModioCommonUISettings::ErrorWithRetryParams' has a wrong offset!");

// Class ModioUI.ModioCommonWidgetSwitcher
// 0x0010 (0x0210 - 0x0200)
class UModioCommonWidgetSwitcher final : public UCommonActivatableWidgetSwitcher
{
public:
	TMulticastInlineDelegate<void(class UWidget* InActiveWidget, int32 InActiveWidgetIndex)> OnActiveWidgetIndexChanged_BP;                     // 0x0200(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonWidgetSwitcher">();
	}
	static class UModioCommonWidgetSwitcher* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonWidgetSwitcher>();
	}
};
static_assert(alignof(UModioCommonWidgetSwitcher) == 0x000008, "Wrong alignment on UModioCommonWidgetSwitcher");
static_assert(sizeof(UModioCommonWidgetSwitcher) == 0x000210, "Wrong size on UModioCommonWidgetSwitcher");
static_assert(offsetof(UModioCommonWidgetSwitcher, OnActiveWidgetIndexChanged_BP) == 0x000200, "Member 'UModioCommonWidgetSwitcher::OnActiveWidgetIndexChanged_BP' has a wrong offset!");

// Class ModioUI.ModioCommonWrapBox
// 0x0000 (0x0190 - 0x0190)
class UModioCommonWrapBox final : public UWrapBox
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModioCommonWrapBox">();
	}
	static class UModioCommonWrapBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModioCommonWrapBox>();
	}
};
static_assert(alignof(UModioCommonWrapBox) == 0x000008, "Wrong alignment on UModioCommonWrapBox");
static_assert(sizeof(UModioCommonWrapBox) == 0x000190, "Wrong size on UModioCommonWrapBox");

}

