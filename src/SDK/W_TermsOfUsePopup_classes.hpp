#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TermsOfUsePopup

#include "Basic.hpp"

#include "Stalker2_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_TermsOfUsePopup.W_TermsOfUsePopup_C
// 0x0018 (0x0360 - 0x0348)
class UW_TermsOfUsePopup_C final : public UPopupBase
{
public:
	class UW_PopupBackground_C*                   Background;                                        // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Image_C*                             W_Image_C;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Image_C*                             W_Image_C_2;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_TermsOfUsePopup_C">();
	}
	static class UW_TermsOfUsePopup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_TermsOfUsePopup_C>();
	}
};
static_assert(alignof(UW_TermsOfUsePopup_C) == 0x000008, "Wrong alignment on UW_TermsOfUsePopup_C");
static_assert(sizeof(UW_TermsOfUsePopup_C) == 0x000360, "Wrong size on UW_TermsOfUsePopup_C");
static_assert(offsetof(UW_TermsOfUsePopup_C, Background) == 0x000348, "Member 'UW_TermsOfUsePopup_C::Background' has a wrong offset!");
static_assert(offsetof(UW_TermsOfUsePopup_C, W_Image_C) == 0x000350, "Member 'UW_TermsOfUsePopup_C::W_Image_C' has a wrong offset!");
static_assert(offsetof(UW_TermsOfUsePopup_C, W_Image_C_2) == 0x000358, "Member 'UW_TermsOfUsePopup_C::W_Image_C_2' has a wrong offset!");

}

