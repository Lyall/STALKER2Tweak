#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_AmmoPanel

#include "Basic.hpp"

#include "Stalker2_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_AmmoPanel.W_AmmoPanel_C
// 0x0060 (0x0400 - 0x03A0)
class UW_AmmoPanel_C final : public UAmmoWidget
{
public:
	class UImage*                                 Back;                                              // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Circle;                                            // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Dot_slot;                                          // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Dot_slot_1;                                        // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Dot_slot_2;                                        // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Dot_slot_3;                                        // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Dot_slot_4;                                        // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Dot_slot_5;                                        // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Seperator;                                         // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_FireType_C*                          W_FireType_1;                                      // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_FireType_C*                          W_FireType_2;                                      // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_FireType_C*                          W_FireType_3;                                      // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_AmmoPanel_C">();
	}
	static class UW_AmmoPanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_AmmoPanel_C>();
	}
};
static_assert(alignof(UW_AmmoPanel_C) == 0x000008, "Wrong alignment on UW_AmmoPanel_C");
static_assert(sizeof(UW_AmmoPanel_C) == 0x000400, "Wrong size on UW_AmmoPanel_C");
static_assert(offsetof(UW_AmmoPanel_C, Back) == 0x0003A0, "Member 'UW_AmmoPanel_C::Back' has a wrong offset!");
static_assert(offsetof(UW_AmmoPanel_C, Circle) == 0x0003A8, "Member 'UW_AmmoPanel_C::Circle' has a wrong offset!");
static_assert(offsetof(UW_AmmoPanel_C, Dot_slot) == 0x0003B0, "Member 'UW_AmmoPanel_C::Dot_slot' has a wrong offset!");
static_assert(offsetof(UW_AmmoPanel_C, Dot_slot_1) == 0x0003B8, "Member 'UW_AmmoPanel_C::Dot_slot_1' has a wrong offset!");
static_assert(offsetof(UW_AmmoPanel_C, Dot_slot_2) == 0x0003C0, "Member 'UW_AmmoPanel_C::Dot_slot_2' has a wrong offset!");
static_assert(offsetof(UW_AmmoPanel_C, Dot_slot_3) == 0x0003C8, "Member 'UW_AmmoPanel_C::Dot_slot_3' has a wrong offset!");
static_assert(offsetof(UW_AmmoPanel_C, Dot_slot_4) == 0x0003D0, "Member 'UW_AmmoPanel_C::Dot_slot_4' has a wrong offset!");
static_assert(offsetof(UW_AmmoPanel_C, Dot_slot_5) == 0x0003D8, "Member 'UW_AmmoPanel_C::Dot_slot_5' has a wrong offset!");
static_assert(offsetof(UW_AmmoPanel_C, Seperator) == 0x0003E0, "Member 'UW_AmmoPanel_C::Seperator' has a wrong offset!");
static_assert(offsetof(UW_AmmoPanel_C, W_FireType_1) == 0x0003E8, "Member 'UW_AmmoPanel_C::W_FireType_1' has a wrong offset!");
static_assert(offsetof(UW_AmmoPanel_C, W_FireType_2) == 0x0003F0, "Member 'UW_AmmoPanel_C::W_FireType_2' has a wrong offset!");
static_assert(offsetof(UW_AmmoPanel_C, W_FireType_3) == 0x0003F8, "Member 'UW_AmmoPanel_C::W_FireType_3' has a wrong offset!");

}

