#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AI_Bloodsucker

#include "Basic.hpp"

#include "Stalker2_structs.hpp"
#include "Stalker2_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AI_Bloodsucker.BP_AI_Bloodsucker_C
// 0x00B0 (0x0B90 - 0x0AE0)
class ABP_AI_Bloodsucker_C final : public ABloodsucker
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AE0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NS_Bloodsucker_Idle;                               // 0x0AE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBloodsuckerInvisibilityComponent*      BloodsuckerInvisibilityComponent;                  // 0x0AF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GunOffset_0;                                       // 0x0AF8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BaseTurnRate_0;                                    // 0x0B10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BaseLookUpRate_0;                                  // 0x0B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ADS_Slowdown;                                      // 0x0B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FOV_Default;                                       // 0x0B28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FOV_ADS;                                           // 0x0B30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFPP;                                             // 0x0B38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B39[0x3];                                      // 0x0B39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IndexZero;                                         // 0x0B3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SwappingWeaponDelay;                               // 0x0B40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FPP_Camera_Default_Location;                       // 0x0B48(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TPP_SpringArm_Default_Location;                    // 0x0B60(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToggleCrouch;                                      // 0x0B78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToggleSprint;                                      // 0x0B79(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B7A[0x6];                                      // 0x0B7A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        GrenadeThrowingDelay;                              // 0x0B80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGoalType                                     CurrentBehaviour;                                  // 0x0B88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAbility                                      CurrentAbility;                                    // 0x0B89(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          State_Active;                                      // 0x0B8A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RepeatState;                                       // 0x0B8B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AI_Bloodsucker(int32 EntryPoint);
	void OnGameplayEvent(const struct FGameplayTag& EventTag, const class UGameplayEventData* EventData);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AI_Bloodsucker_C">();
	}
	static class ABP_AI_Bloodsucker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AI_Bloodsucker_C>();
	}
};
static_assert(alignof(ABP_AI_Bloodsucker_C) == 0x000010, "Wrong alignment on ABP_AI_Bloodsucker_C");
static_assert(sizeof(ABP_AI_Bloodsucker_C) == 0x000B90, "Wrong size on ABP_AI_Bloodsucker_C");
static_assert(offsetof(ABP_AI_Bloodsucker_C, UberGraphFrame) == 0x000AE0, "Member 'ABP_AI_Bloodsucker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AI_Bloodsucker_C, NS_Bloodsucker_Idle) == 0x000AE8, "Member 'ABP_AI_Bloodsucker_C::NS_Bloodsucker_Idle' has a wrong offset!");
static_assert(offsetof(ABP_AI_Bloodsucker_C, BloodsuckerInvisibilityComponent) == 0x000AF0, "Member 'ABP_AI_Bloodsucker_C::BloodsuckerInvisibilityComponent' has a wrong offset!");
static_assert(offsetof(ABP_AI_Bloodsucker_C, GunOffset_0) == 0x000AF8, "Member 'ABP_AI_Bloodsucker_C::GunOffset_0' has a wrong offset!");
static_assert(offsetof(ABP_AI_Bloodsucker_C, BaseTurnRate_0) == 0x000B10, "Member 'ABP_AI_Bloodsucker_C::BaseTurnRate_0' has a wrong offset!");
static_assert(offsetof(ABP_AI_Bloodsucker_C, BaseLookUpRate_0) == 0x000B18, "Member 'ABP_AI_Bloodsucker_C::BaseLookUpRate_0' has a wrong offset!");
static_assert(offsetof(ABP_AI_Bloodsucker_C, ADS_Slowdown) == 0x000B20, "Member 'ABP_AI_Bloodsucker_C::ADS_Slowdown' has a wrong offset!");
static_assert(offsetof(ABP_AI_Bloodsucker_C, FOV_Default) == 0x000B28, "Member 'ABP_AI_Bloodsucker_C::FOV_Default' has a wrong offset!");
static_assert(offsetof(ABP_AI_Bloodsucker_C, FOV_ADS) == 0x000B30, "Member 'ABP_AI_Bloodsucker_C::FOV_ADS' has a wrong offset!");
static_assert(offsetof(ABP_AI_Bloodsucker_C, IsFPP) == 0x000B38, "Member 'ABP_AI_Bloodsucker_C::IsFPP' has a wrong offset!");
static_assert(offsetof(ABP_AI_Bloodsucker_C, IndexZero) == 0x000B3C, "Member 'ABP_AI_Bloodsucker_C::IndexZero' has a wrong offset!");
static_assert(offsetof(ABP_AI_Bloodsucker_C, SwappingWeaponDelay) == 0x000B40, "Member 'ABP_AI_Bloodsucker_C::SwappingWeaponDelay' has a wrong offset!");
static_assert(offsetof(ABP_AI_Bloodsucker_C, FPP_Camera_Default_Location) == 0x000B48, "Member 'ABP_AI_Bloodsucker_C::FPP_Camera_Default_Location' has a wrong offset!");
static_assert(offsetof(ABP_AI_Bloodsucker_C, TPP_SpringArm_Default_Location) == 0x000B60, "Member 'ABP_AI_Bloodsucker_C::TPP_SpringArm_Default_Location' has a wrong offset!");
static_assert(offsetof(ABP_AI_Bloodsucker_C, ToggleCrouch) == 0x000B78, "Member 'ABP_AI_Bloodsucker_C::ToggleCrouch' has a wrong offset!");
static_assert(offsetof(ABP_AI_Bloodsucker_C, ToggleSprint) == 0x000B79, "Member 'ABP_AI_Bloodsucker_C::ToggleSprint' has a wrong offset!");
static_assert(offsetof(ABP_AI_Bloodsucker_C, GrenadeThrowingDelay) == 0x000B80, "Member 'ABP_AI_Bloodsucker_C::GrenadeThrowingDelay' has a wrong offset!");
static_assert(offsetof(ABP_AI_Bloodsucker_C, CurrentBehaviour) == 0x000B88, "Member 'ABP_AI_Bloodsucker_C::CurrentBehaviour' has a wrong offset!");
static_assert(offsetof(ABP_AI_Bloodsucker_C, CurrentAbility) == 0x000B89, "Member 'ABP_AI_Bloodsucker_C::CurrentAbility' has a wrong offset!");
static_assert(offsetof(ABP_AI_Bloodsucker_C, State_Active) == 0x000B8A, "Member 'ABP_AI_Bloodsucker_C::State_Active' has a wrong offset!");
static_assert(offsetof(ABP_AI_Bloodsucker_C, RepeatState) == 0x000B8B, "Member 'ABP_AI_Bloodsucker_C::RepeatState' has a wrong offset!");

}

