#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModioUICore

#include "Basic.hpp"

#include "ModioUICore_classes.hpp"
#include "ModioUICore_parameters.hpp"


namespace SDK
{

// Function ModioUICore.ModioExtendedModInfoUIDetails.IsModEnabled
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioExtendedModInfoUIDetails::IsModEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioExtendedModInfoUIDetails", "IsModEnabled");

	Params::ModioExtendedModInfoUIDetails_IsModEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioExtendedModInfoUIDetails.HasModErrors
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioExtendedModInfoUIDetails::HasModErrors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioExtendedModInfoUIDetails", "HasModErrors");

	Params::ModioExtendedModInfoUIDetails_HasModErrors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioExtendedModInfoUIDetails.IsModDownloading
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioExtendedModInfoUIDetails::IsModDownloading() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioExtendedModInfoUIDetails", "IsModDownloading");

	Params::ModioExtendedModInfoUIDetails_IsModDownloading Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioExtendedModInfoUIDetails.IsModExtracting
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioExtendedModInfoUIDetails::IsModExtracting() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioExtendedModInfoUIDetails", "IsModExtracting");

	Params::ModioExtendedModInfoUIDetails_IsModExtracting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioExtendedModInfoUIDetails.IsModInQueue
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioExtendedModInfoUIDetails::IsModInQueue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioExtendedModInfoUIDetails", "IsModInQueue");

	Params::ModioExtendedModInfoUIDetails_IsModInQueue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioExtendedModInfoUIDetails.IsModInstalled
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioExtendedModInfoUIDetails::IsModInstalled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioExtendedModInfoUIDetails", "IsModInstalled");

	Params::ModioExtendedModInfoUIDetails_IsModInstalled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioExtendedModInfoUIDetails.IsModSubscribed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioExtendedModInfoUIDetails::IsModSubscribed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioExtendedModInfoUIDetails", "IsModSubscribed");

	Params::ModioExtendedModInfoUIDetails_IsModSubscribed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowserInterface.GetIsCollectionModDisableUIEnabled
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioModBrowserInterface::GetIsCollectionModDisableUIEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowserInterface", "GetIsCollectionModDisableUIEnabled");

	Params::ModioModBrowserInterface_GetIsCollectionModDisableUIEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowserInterface.IsDownloadDrawerOpen
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IModioModBrowserInterface::IsDownloadDrawerOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowserInterface", "IsDownloadDrawerOpen");

	Params::ModioModBrowserInterface_IsDownloadDrawerOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModBrowserInterface.LogOut
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioModBrowserInterface::LogOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowserInterface", "LogOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioModBrowserInterface.RequestExternalAuthentication
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EModioAuthenticationProvider            Provider                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioModBrowserInterface::RequestExternalAuthentication(EModioAuthenticationProvider Provider)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowserInterface", "RequestExternalAuthentication");

	Params::ModioModBrowserInterface_RequestExternalAuthentication Parms{};

	Parms.Provider = Provider;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioModBrowserInterface.ShowDetailsForMod
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioModID                      ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioModBrowserInterface::ShowDetailsForMod(const struct FModioModID& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowserInterface", "ShowDetailsForMod");

	Params::ModioModBrowserInterface_ShowDetailsForMod Parms{};

	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioModBrowserInterface.ShowDialog
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          DialogDataSource                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioModBrowserInterface::ShowDialog(class UObject* DialogDataSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowserInterface", "ShowDialog");

	Params::ModioModBrowserInterface_ShowDialog Parms{};

	Parms.DialogDataSource = DialogDataSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioModBrowserInterface.ShowModUnsubscribeDialog
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          DialogDataSource                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioModBrowserInterface::ShowModUnsubscribeDialog(class UObject* DialogDataSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowserInterface", "ShowModUnsubscribeDialog");

	Params::ModioModBrowserInterface_ShowModUnsubscribeDialog Parms{};

	Parms.DialogDataSource = DialogDataSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioModBrowserInterface.ShowReportMod
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          DialogDataSource                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioModBrowserInterface::ShowReportMod(class UObject* DialogDataSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowserInterface", "ShowReportMod");

	Params::ModioModBrowserInterface_ShowReportMod Parms{};

	Parms.DialogDataSource = DialogDataSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioModBrowserInterface.ShowSearchResults
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioModCategoryParams          FilterParams                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IModioModBrowserInterface::ShowSearchResults(const struct FModioModCategoryParams& FilterParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowserInterface", "ShowSearchResults");

	Params::ModioModBrowserInterface_ShowSearchResults Parms{};

	Parms.FilterParams = std::move(FilterParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioModBrowserInterface.ShowUserAuth
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioModBrowserInterface::ShowUserAuth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModBrowserInterface", "ShowUserAuth");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioModInfoUIDetails.GetFullModInfo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioModInfo                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FModioModInfo IModioModInfoUIDetails::GetFullModInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModInfoUIDetails", "GetFullModInfo");

	Params::ModioModInfoUIDetails_GetFullModInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioModInfoUIDetails.GetModID
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioModID                      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioModID IModioModInfoUIDetails::GetModID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModInfoUIDetails", "GetModID");

	Params::ModioModInfoUIDetails_GetModID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIAsyncHandlerWidget.LinkAsyncOperationWidget
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IModioUIAsyncOperationWidget>Widget                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIAsyncHandlerWidget::LinkAsyncOperationWidget(const TScriptInterface<class IModioUIAsyncOperationWidget>& Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAsyncHandlerWidget", "LinkAsyncOperationWidget");

	Params::ModioUIAsyncHandlerWidget_LinkAsyncOperationWidget Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIAsyncHandlerWidget.GetAsyncOperationState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EModioUIAsyncOperationWidgetState       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EModioUIAsyncOperationWidgetState IModioUIAsyncHandlerWidget::GetAsyncOperationState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAsyncHandlerWidget", "GetAsyncOperationState");

	Params::ModioUIAsyncHandlerWidget_GetAsyncOperationState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIAsyncOperationWidget.NotifyOperationState
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EModioUIAsyncOperationWidgetState       NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIAsyncOperationWidget::NotifyOperationState(EModioUIAsyncOperationWidgetState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAsyncOperationWidget", "NotifyOperationState");

	Params::ModioUIAsyncOperationWidget_NotifyOperationState Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIAsyncOperationWidget.RequestOperationRetry
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioUIAsyncOperationWidget::RequestOperationRetry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAsyncOperationWidget", "RequestOperationRetry");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIAsyncOperationWidget.SetOperationStateDelegate
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void(EModioUIAsyncOperationWidgetState NewState)>Delegate                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIAsyncOperationWidget::SetOperationStateDelegate(const TDelegate<void(EModioUIAsyncOperationWidgetState NewState)>& Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAsyncOperationWidget", "SetOperationStateDelegate");

	Params::ModioUIAsyncOperationWidget_SetOperationStateDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIAsyncRetryWidget.SetRetryRequestedDelegate
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void()>                       Delegate                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIAsyncRetryWidget::SetRetryRequestedDelegate(const TDelegate<void()>& Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAsyncRetryWidget", "SetRetryRequestedDelegate");

	Params::ModioUIAsyncRetryWidget_SetRetryRequestedDelegate Parms{};

	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIAuthenticationChangedReceiver.OnAuthenticationChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FModioOptionalUser               User                                                   (Parm, NativeAccessSpecifierPublic)

void IModioUIAuthenticationChangedReceiver::OnAuthenticationChanged(const struct FModioOptionalUser& User)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAuthenticationChangedReceiver", "OnAuthenticationChanged");

	Params::ModioUIAuthenticationChangedReceiver_OnAuthenticationChanged Parms{};

	Parms.User = std::move(User);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUIMediaDownloadCompletedReceiver.OnModCreatorAvatarDownloadCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FModioModID                      ModId                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioErrorCode                  Ec                                                     (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioOptionalImage              Image                                                  (Parm, NativeAccessSpecifierPublic)

void IModioUIMediaDownloadCompletedReceiver::OnModCreatorAvatarDownloadCompleted(const struct FModioModID& ModId, const struct FModioErrorCode& Ec, const struct FModioOptionalImage& Image)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIMediaDownloadCompletedReceiver", "OnModCreatorAvatarDownloadCompleted");

	Params::ModioUIMediaDownloadCompletedReceiver_OnModCreatorAvatarDownloadCompleted Parms{};

	Parms.ModId = std::move(ModId);
	Parms.Ec = std::move(Ec);
	Parms.Image = std::move(Image);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUIMediaDownloadCompletedReceiver.OnModGalleryImageDownloadCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FModioModID                      ModId                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioErrorCode                  Ec                                                     (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ImageIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioOptionalImage              Image                                                  (Parm, NativeAccessSpecifierPublic)

void IModioUIMediaDownloadCompletedReceiver::OnModGalleryImageDownloadCompleted(const struct FModioModID& ModId, const struct FModioErrorCode& Ec, int32 ImageIndex, const struct FModioOptionalImage& Image)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIMediaDownloadCompletedReceiver", "OnModGalleryImageDownloadCompleted");

	Params::ModioUIMediaDownloadCompletedReceiver_OnModGalleryImageDownloadCompleted Parms{};

	Parms.ModId = std::move(ModId);
	Parms.Ec = std::move(Ec);
	Parms.ImageIndex = ImageIndex;
	Parms.Image = std::move(Image);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUIMediaDownloadCompletedReceiver.OnModLogoDownloadCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FModioModID                      ModId                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioErrorCode                  Ec                                                     (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioOptionalImage              Image                                                  (Parm, NativeAccessSpecifierPublic)
// EModioLogoSize                          LogoSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIMediaDownloadCompletedReceiver::OnModLogoDownloadCompleted(const struct FModioModID& ModId, const struct FModioErrorCode& Ec, const struct FModioOptionalImage& Image, EModioLogoSize LogoSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIMediaDownloadCompletedReceiver", "OnModLogoDownloadCompleted");

	Params::ModioUIMediaDownloadCompletedReceiver_OnModLogoDownloadCompleted Parms{};

	Parms.ModId = std::move(ModId);
	Parms.Ec = std::move(Ec);
	Parms.Image = std::move(Image);
	Parms.LogoSize = LogoSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUIModEnableWidget.ModEnabledStateChangedHandler
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FModioModID                      ModId                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewSubscriptionState                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIModEnableWidget::ModEnabledStateChangedHandler(const struct FModioModID& ModId, bool bNewSubscriptionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIModEnableWidget", "ModEnabledStateChangedHandler");

	Params::ModioUIModEnableWidget_ModEnabledStateChangedHandler Parms{};

	Parms.ModId = std::move(ModId);
	Parms.bNewSubscriptionState = bNewSubscriptionState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIModEnableWidget.OnModEnabledStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FModioModID                      ModId                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewSubscriptionState                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUIModEnableWidget::OnModEnabledStateChanged(const struct FModioModID& ModId, bool bNewSubscriptionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIModEnableWidget", "OnModEnabledStateChanged");

	Params::ModioUIModEnableWidget_OnModEnabledStateChanged Parms{};

	Parms.ModId = std::move(ModId);
	Parms.bNewSubscriptionState = bNewSubscriptionState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUIModInfoReceiver.OnListAllModsRequestCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FString                           RequestIdentifier                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioErrorCode                  Ec                                                     (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioOptionalModInfoList        List                                                   (Parm, NativeAccessSpecifierPublic)

void IModioUIModInfoReceiver::OnListAllModsRequestCompleted(const class FString& RequestIdentifier, const struct FModioErrorCode& Ec, const struct FModioOptionalModInfoList& List)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIModInfoReceiver", "OnListAllModsRequestCompleted");

	Params::ModioUIModInfoReceiver_OnListAllModsRequestCompleted Parms{};

	Parms.RequestIdentifier = std::move(RequestIdentifier);
	Parms.Ec = std::move(Ec);
	Parms.List = std::move(List);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUIModInfoReceiver.OnModInfoRequestCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FModioModID                      ModId                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioErrorCode                  Ec                                                     (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioOptionalModInfo            Info                                                   (Parm, NativeAccessSpecifierPublic)

void IModioUIModInfoReceiver::OnModInfoRequestCompleted(const struct FModioModID& ModId, const struct FModioErrorCode& Ec, const struct FModioOptionalModInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIModInfoReceiver", "OnModInfoRequestCompleted");

	Params::ModioUIModInfoReceiver_OnModInfoRequestCompleted Parms{};

	Parms.ModId = std::move(ModId);
	Parms.Ec = std::move(Ec);
	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUIModManagementEventReceiver.OnModManagementEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FModioModManagementEvent         Event                                                  (Parm, NativeAccessSpecifierPublic)

void IModioUIModManagementEventReceiver::OnModManagementEvent(const struct FModioModManagementEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIModManagementEventReceiver", "OnModManagementEvent");

	Params::ModioUIModManagementEventReceiver_OnModManagementEvent Parms{};

	Parms.Event = std::move(Event);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioNotificationParamsLibrary.AddFormatText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FModioNotificationParams         NotificationParams                                     (Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Name_0                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FModioNotificationParams         ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioNotificationParams UModioNotificationParamsLibrary::AddFormatText(struct FModioNotificationParams& NotificationParams, const class FName& Name_0, const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioNotificationParamsLibrary", "AddFormatText");

	Params::ModioNotificationParamsLibrary_AddFormatText Parms{};

	Parms.NotificationParams = std::move(NotificationParams);
	Parms.Name_0 = Name_0;
	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	NotificationParams = std::move(Parms.NotificationParams);

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioNotificationParamsLibrary.CreateInstallationNotification
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FModioErrorCode                  StatusCode                                             (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IModioModInfoUIDetails>ModInfo                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioNotificationParams         ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioNotificationParams UModioNotificationParamsLibrary::CreateInstallationNotification(const struct FModioErrorCode& StatusCode, const TScriptInterface<class IModioModInfoUIDetails>& ModInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioNotificationParamsLibrary", "CreateInstallationNotification");

	Params::ModioNotificationParamsLibrary_CreateInstallationNotification Parms{};

	Parms.StatusCode = std::move(StatusCode);
	Parms.ModInfo = ModInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioNotificationParamsLibrary.CreateNotificationParams
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FModioErrorCode                  StatusCode                                             (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             TitleText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             SuccessText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ErrorText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FModioNotificationParams         ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioNotificationParams UModioNotificationParamsLibrary::CreateNotificationParams(const struct FModioErrorCode& StatusCode, const class FText& TitleText, const class FText& SuccessText, const class FText& ErrorText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioNotificationParamsLibrary", "CreateNotificationParams");

	Params::ModioNotificationParamsLibrary_CreateNotificationParams Parms{};

	Parms.StatusCode = std::move(StatusCode);
	Parms.TitleText = std::move(TitleText);
	Parms.SuccessText = std::move(SuccessText);
	Parms.ErrorText = std::move(ErrorText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioNotificationParamsLibrary.CreateRatingNotification
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FModioErrorCode                  StatusCode                                             (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IModioModInfoUIDetails>ModInfo                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioNotificationParams         ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioNotificationParams UModioNotificationParamsLibrary::CreateRatingNotification(const struct FModioErrorCode& StatusCode, const TScriptInterface<class IModioModInfoUIDetails>& ModInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioNotificationParamsLibrary", "CreateRatingNotification");

	Params::ModioNotificationParamsLibrary_CreateRatingNotification Parms{};

	Parms.StatusCode = std::move(StatusCode);
	Parms.ModInfo = ModInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioNotificationParamsLibrary.CreateSubscriptionNotification
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FModioErrorCode                  StatusCode                                             (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IModioModInfoUIDetails>ModInfo                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioNotificationParams         ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioNotificationParams UModioNotificationParamsLibrary::CreateSubscriptionNotification(const struct FModioErrorCode& StatusCode, const TScriptInterface<class IModioModInfoUIDetails>& ModInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioNotificationParamsLibrary", "CreateSubscriptionNotification");

	Params::ModioNotificationParamsLibrary_CreateSubscriptionNotification Parms{};

	Parms.StatusCode = std::move(StatusCode);
	Parms.ModInfo = ModInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioNotificationParamsLibrary.CreateUninstallNotification
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FModioErrorCode                  StatusCode                                             (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IModioModInfoUIDetails>ModInfo                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioNotificationParams         ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioNotificationParams UModioNotificationParamsLibrary::CreateUninstallNotification(const struct FModioErrorCode& StatusCode, const TScriptInterface<class IModioModInfoUIDetails>& ModInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioNotificationParamsLibrary", "CreateUninstallNotification");

	Params::ModioNotificationParamsLibrary_CreateUninstallNotification Parms{};

	Parms.StatusCode = std::move(StatusCode);
	Parms.ModInfo = ModInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioNotificationParamsLibrary.CreateUnsubscriptionNotification
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FModioErrorCode                  StatusCode                                             (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IModioModInfoUIDetails>ModInfo                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioNotificationParams         ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioNotificationParams UModioNotificationParamsLibrary::CreateUnsubscriptionNotification(const struct FModioErrorCode& StatusCode, const TScriptInterface<class IModioModInfoUIDetails>& ModInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioNotificationParamsLibrary", "CreateUnsubscriptionNotification");

	Params::ModioNotificationParamsLibrary_CreateUnsubscriptionNotification Parms{};

	Parms.StatusCode = std::move(StatusCode);
	Parms.ModInfo = ModInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioNotificationParamsLibrary.SetFloatArg
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FModioNotificationParams         NotificationParams                                     (Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioNotificationParams         ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioNotificationParams UModioNotificationParamsLibrary::SetFloatArg(struct FModioNotificationParams& NotificationParams, const class FString& Name_0, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioNotificationParamsLibrary", "SetFloatArg");

	Params::ModioNotificationParamsLibrary_SetFloatArg Parms{};

	Parms.NotificationParams = std::move(NotificationParams);
	Parms.Name_0 = std::move(Name_0);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	NotificationParams = std::move(Parms.NotificationParams);

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioNotificationParamsLibrary.SetIntegerArg
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FModioNotificationParams         NotificationParams                                     (Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioNotificationParams         ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioNotificationParams UModioNotificationParamsLibrary::SetIntegerArg(struct FModioNotificationParams& NotificationParams, const class FString& Name_0, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioNotificationParamsLibrary", "SetIntegerArg");

	Params::ModioNotificationParamsLibrary_SetIntegerArg Parms{};

	Parms.NotificationParams = std::move(NotificationParams);
	Parms.Name_0 = std::move(Name_0);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	NotificationParams = std::move(Parms.NotificationParams);

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioNotificationParamsLibrary.SetStringArg
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FModioNotificationParams         NotificationParams                                     (Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioNotificationParams         ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioNotificationParams UModioNotificationParamsLibrary::SetStringArg(struct FModioNotificationParams& NotificationParams, const class FString& Name_0, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioNotificationParamsLibrary", "SetStringArg");

	Params::ModioNotificationParamsLibrary_SetStringArg Parms{};

	Parms.NotificationParams = std::move(NotificationParams);
	Parms.Name_0 = std::move(Name_0);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	NotificationParams = std::move(Parms.NotificationParams);

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioNotificationParamsLibrary.SetTextArg
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FModioNotificationParams         NotificationParams                                     (Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FModioNotificationParams         ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FModioNotificationParams UModioNotificationParamsLibrary::SetTextArg(struct FModioNotificationParams& NotificationParams, const class FString& Name_0, const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModioNotificationParamsLibrary", "SetTextArg");

	Params::ModioNotificationParamsLibrary_SetTextArg Parms{};

	Parms.NotificationParams = std::move(NotificationParams);
	Parms.Name_0 = std::move(Name_0);
	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	NotificationParams = std::move(Parms.NotificationParams);

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUINotification.Configure
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioNotificationParams         Params_0                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUINotification::Configure(const struct FModioNotificationParams& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUINotification", "Configure");

	Params::ModioUINotification_Configure Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUINotification.ConfigureManual
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Title                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsError                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUINotification::ConfigureManual(const class FText& Title, const class FText& Message, bool bIsError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUINotification", "ConfigureManual");

	Params::ModioUINotification_ConfigureManual Parms{};

	Parms.Title = std::move(Title);
	Parms.Message = std::move(Message);
	Parms.bIsError = bIsError;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUINotification.Display
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IModioUINotification::Display()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUINotification", "Display");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUINotification.GetAsWidget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* IModioUINotification::GetAsWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUINotification", "GetAsWidget");

	Params::ModioUINotification_GetAsWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUINotification.SetNotificationExpireHandler
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void(class UWidget* NotificationWidget)>InDelegate                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUINotification::SetNotificationExpireHandler(const TDelegate<void(class UWidget* NotificationWidget)>& InDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUINotification", "SetNotificationExpireHandler");

	Params::ModioUINotification_SetNotificationExpireHandler Parms{};

	Parms.InDelegate = InDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUINotificationController.DisplayNotification
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IModioUINotification>Notification                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUINotificationController::DisplayNotification(const TScriptInterface<class IModioUINotification>& Notification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUINotificationController", "DisplayNotification");

	Params::ModioUINotificationController_DisplayNotification Parms{};

	Parms.Notification = Notification;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUINotificationController.DisplayNotificationManual
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Title                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsError                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUINotificationController::DisplayNotificationManual(const class FText& Title, const class FText& Message, bool bIsError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUINotificationController", "DisplayNotificationManual");

	Params::ModioUINotificationController_DisplayNotificationManual Parms{};

	Parms.Title = std::move(Title);
	Parms.Message = std::move(Message);
	Parms.bIsError = bIsError;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUINotificationController.DisplayNotificationParams
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FModioNotificationParams         Params_0                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUINotificationController::DisplayNotificationParams(const struct FModioNotificationParams& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUINotificationController", "DisplayNotificationParams");

	Params::ModioUINotificationController_DisplayNotificationParams Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUINotificationController.HandleDisplayManual
// (Native, Protected, HasOutParams)
// Parameters:
// class FText                             Title                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsError                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUINotificationController::HandleDisplayManual(const class FText& Title, const class FText& Message, bool bIsError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUINotificationController", "HandleDisplayManual");

	Params::ModioUINotificationController_HandleDisplayManual Parms{};

	Parms.Title = std::move(Title);
	Parms.Message = std::move(Message);
	Parms.bIsError = bIsError;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUINotificationController.HandleDisplayNotificationParams
// (Native, Protected, HasOutParams)
// Parameters:
// struct FModioNotificationParams         Params_0                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUINotificationController::HandleDisplayNotificationParams(const struct FModioNotificationParams& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUINotificationController", "HandleDisplayNotificationParams");

	Params::ModioUINotificationController_HandleDisplayNotificationParams Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUINotificationController.HandleDisplayNotificationWidget
// (Native, Protected, HasOutParams)
// Parameters:
// TScriptInterface<class IModioUINotification>Notification                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUINotificationController::HandleDisplayNotificationWidget(TScriptInterface<class IModioUINotification>* Notification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUINotificationController", "HandleDisplayNotificationWidget");

	Params::ModioUINotificationController_HandleDisplayNotificationWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Notification != nullptr)
		*Notification = Parms.Notification;
}


// Function ModioUICore.ModioUINotificationController.RegisterUserWidget
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IModioUINotificationController>ControllerWidget                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUINotificationController::RegisterUserWidget(const TScriptInterface<class IModioUINotificationController>& ControllerWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUINotificationController", "RegisterUserWidget");

	Params::ModioUINotificationController_RegisterUserWidget Parms{};

	Parms.ControllerWidget = ControllerWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubscriptionsChangedReceiver.OnSubscriptionsChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FModioModID                      ModId                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewSubscriptionState                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IModioUISubscriptionsChangedReceiver::OnSubscriptionsChanged(const struct FModioModID& ModId, bool bNewSubscriptionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubscriptionsChangedReceiver", "OnSubscriptionsChanged");

	Params::ModioUISubscriptionsChangedReceiver_OnSubscriptionsChanged Parms{};

	Parms.ModId = std::move(ModId);
	Parms.bNewSubscriptionState = bNewSubscriptionState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUIUserAvatarDownloadCompletedReceiver.OnUserAvatarDownloadCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FModioErrorCode                  Ec                                                     (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioOptionalImage              Image                                                  (Parm, NativeAccessSpecifierPublic)

void IModioUIUserAvatarDownloadCompletedReceiver::OnUserAvatarDownloadCompleted(const struct FModioErrorCode& Ec, const struct FModioOptionalImage& Image)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIUserAvatarDownloadCompletedReceiver", "OnUserAvatarDownloadCompleted");

	Params::ModioUIUserAvatarDownloadCompletedReceiver_OnUserAvatarDownloadCompleted Parms{};

	Parms.Ec = std::move(Ec);
	Parms.Image = std::move(Image);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioUIUserChangedReceiver.OnUserChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FModioOptionalUser               NewUser                                                (Parm, NativeAccessSpecifierPublic)

void IModioUIUserChangedReceiver::OnUserChanged(const struct FModioOptionalUser& NewUser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIUserChangedReceiver", "OnUserChanged");

	Params::ModioUIUserChangedReceiver_OnUserChanged Parms{};

	Parms.NewUser = std::move(NewUser);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModioUICore.ModioTagOptionsUI.GetTagCategoriesForUI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UModioTagInfoUI*>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UModioTagInfoUI*> UModioTagOptionsUI::GetTagCategoriesForUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTagOptionsUI", "GetTagCategoriesForUI");

	Params::ModioTagOptionsUI_GetTagCategoriesForUI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUIAsyncLoader.NativeHandleAsyncOperationStateChange
// (Native, Protected)
// Parameters:
// EModioUIAsyncOperationWidgetState       NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUIAsyncLoader::NativeHandleAsyncOperationStateChange(EModioUIAsyncOperationWidgetState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAsyncLoader", "NativeHandleAsyncOperationStateChange");

	Params::ModioUIAsyncLoader_NativeHandleAsyncOperationStateChange Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIAsyncLoader.OnRetryRequested
// (Native, Protected)

void UModioUIAsyncLoader::OnRetryRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAsyncLoader", "OnRetryRequested");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUIAsyncLoader.Retry
// (Final, Native, Public)

void UModioUIAsyncLoader::Retry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUIAsyncLoader", "Retry");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.CloseModBrowserUI
// (Final, Native, Public, BlueprintCallable)

void UModioUISubsystem::CloseModBrowserUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "CloseModBrowserUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.DisplayErrorDialog
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FModioErrorCode                  ErrorCode                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::DisplayErrorDialog(const struct FModioErrorCode& ErrorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "DisplayErrorDialog");

	Params::ModioUISubsystem_DisplayErrorDialog Parms{};

	Parms.ErrorCode = std::move(ErrorCode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.DisplayNotification
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TScriptInterface<class IModioUINotification>Notification                                           (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::DisplayNotification(TScriptInterface<class IModioUINotification>& Notification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "DisplayNotification");

	Params::ModioUISubsystem_DisplayNotification Parms{};

	Parms.Notification = Notification;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Notification = Parms.Notification;
}


// Function ModioUICore.ModioUISubsystem.DisplayNotificationManual
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             Title                                                  (Parm, NativeAccessSpecifierPublic)
// class FText                             Message                                                (Parm, NativeAccessSpecifierPublic)
// bool                                    bIsError                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::DisplayNotificationManual(const class FText& Title, const class FText& Message, bool bIsError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "DisplayNotificationManual");

	Params::ModioUISubsystem_DisplayNotificationManual Parms{};

	Parms.Title = std::move(Title);
	Parms.Message = std::move(Message);
	Parms.bIsError = bIsError;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.DisplayNotificationParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FModioNotificationParams         Params_0                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::DisplayNotificationParams(const struct FModioNotificationParams& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "DisplayNotificationParams");

	Params::ModioUISubsystem_DisplayNotificationParams Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.ExecuteOnModBrowserCloseRequestedDelegate
// (Final, Native, Public, BlueprintCallable)

void UModioUISubsystem::ExecuteOnModBrowserCloseRequestedDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "ExecuteOnModBrowserCloseRequestedDelegate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.FormatText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             Input                                                  (Parm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UModioUISubsystem::FormatText(const class FText& Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "FormatText");

	Params::ModioUISubsystem_FormatText Parms{};

	Parms.Input = std::move(Input);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUISubsystem.GetCurrentDPIScaleValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UModioUISubsystem::GetCurrentDPIScaleValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "GetCurrentDPIScaleValue");

	Params::ModioUISubsystem_GetCurrentDPIScaleValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUISubsystem.GetIsCollectionModDisableUIEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUISubsystem::GetIsCollectionModDisableUIEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "GetIsCollectionModDisableUIEnabled");

	Params::ModioUISubsystem_GetIsCollectionModDisableUIEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUISubsystem.HideModBrowserUI
// (Final, Native, Public, BlueprintCallable)

void UModioUISubsystem::HideModBrowserUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "HideModBrowserUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.QueryIsModEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FModioModID                      ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUISubsystem::QueryIsModEnabled(const struct FModioModID& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "QueryIsModEnabled");

	Params::ModioUISubsystem_QueryIsModEnabled Parms{};

	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUISubsystem.RequestEmailAuthentication
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FModioEmailAuthCode              Code                                                   (Parm, NativeAccessSpecifierPublic)

void UModioUISubsystem::RequestEmailAuthentication(const struct FModioEmailAuthCode& Code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestEmailAuthentication");

	Params::ModioUISubsystem_RequestEmailAuthentication Parms{};

	Parms.Code = std::move(Code);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestExternalAuthentication
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EModioAuthenticationProvider            Provider                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::RequestExternalAuthentication(EModioAuthenticationProvider Provider)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestExternalAuthentication");

	Params::ModioUISubsystem_RequestExternalAuthentication Parms{};

	Parms.Provider = Provider;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestGalleryImageDownloadForModID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FModioModID                      ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioGallerySize                       ImageSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::RequestGalleryImageDownloadForModID(const struct FModioModID& ID, int32 Index_0, EModioGallerySize ImageSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestGalleryImageDownloadForModID");

	Params::ModioUISubsystem_RequestGalleryImageDownloadForModID Parms{};

	Parms.ID = std::move(ID);
	Parms.Index_0 = Index_0;
	Parms.ImageSize = ImageSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestListAllMods
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FModioFilterParams               Params_0                                               (Parm, NativeAccessSpecifierPublic)
// class FString                           RequestIdentifier                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::RequestListAllMods(const struct FModioFilterParams& Params_0, const class FString& RequestIdentifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestListAllMods");

	Params::ModioUISubsystem_RequestListAllMods Parms{};

	Parms.Params_0 = std::move(Params_0);
	Parms.RequestIdentifier = std::move(RequestIdentifier);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestLogoDownloadForModID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FModioModID                      ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModioLogoSize                          LogoSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::RequestLogoDownloadForModID(const struct FModioModID& ID, EModioLogoSize LogoSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestLogoDownloadForModID");

	Params::ModioUISubsystem_RequestLogoDownloadForModID Parms{};

	Parms.ID = std::move(ID);
	Parms.LogoSize = LogoSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestModEnabledState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FModioModID                      ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewEnabledState                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUISubsystem::RequestModEnabledState(const struct FModioModID& ID, bool bNewEnabledState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestModEnabledState");

	Params::ModioUISubsystem_RequestModEnabledState Parms{};

	Parms.ID = std::move(ID);
	Parms.bNewEnabledState = bNewEnabledState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUISubsystem.RequestModInfoForModIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FModioModID>              IDs                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UModioUISubsystem::RequestModInfoForModIDs(const TArray<struct FModioModID>& IDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestModInfoForModIDs");

	Params::ModioUISubsystem_RequestModInfoForModIDs Parms{};

	Parms.IDs = std::move(IDs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestRemoveSubscriptionForModID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FModioModID                      ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::RequestRemoveSubscriptionForModID(const struct FModioModID& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestRemoveSubscriptionForModID");

	Params::ModioUISubsystem_RequestRemoveSubscriptionForModID Parms{};

	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestSubscriptionForModID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FModioModID                      ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::RequestSubscriptionForModID(const struct FModioModID& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestSubscriptionForModID");

	Params::ModioUISubsystem_RequestSubscriptionForModID Parms{};

	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.RequestUserAvatar
// (Final, Native, Public, BlueprintCallable)

void UModioUISubsystem::RequestUserAvatar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "RequestUserAvatar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.ShowDetailsForMod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FModioModID                      ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::ShowDetailsForMod(const struct FModioModID& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "ShowDetailsForMod");

	Params::ModioUISubsystem_ShowDetailsForMod Parms{};

	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.ShowDialog
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          DialogDataSource                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::ShowDialog(class UObject* DialogDataSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "ShowDialog");

	Params::ModioUISubsystem_ShowDialog Parms{};

	Parms.DialogDataSource = DialogDataSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.ShowModBrowserUIForPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UUserWidget>          MenuClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnModBrowserCloseRequestedDelegate                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UModioUISubsystem::ShowModBrowserUIForPlayer(TSubclassOf<class UUserWidget> MenuClass, class APlayerController* Controller, TDelegate<void()> OnModBrowserCloseRequestedDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "ShowModBrowserUIForPlayer");

	Params::ModioUISubsystem_ShowModBrowserUIForPlayer Parms{};

	Parms.MenuClass = MenuClass;
	Parms.Controller = Controller;
	Parms.OnModBrowserCloseRequestedDelegate = OnModBrowserCloseRequestedDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUISubsystem.ShowSearchResults
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FModioModCategoryParams          SearchParameters                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioUISubsystem::ShowSearchResults(const struct FModioModCategoryParams& SearchParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "ShowSearchResults");

	Params::ModioUISubsystem_ShowSearchResults Parms{};

	Parms.SearchParameters = std::move(SearchParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModioUICore.ModioUISubsystem.SubscriptionHandler
// (Final, Native, Protected)
// Parameters:
// struct FModioErrorCode                  ErrorCode                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioModID                      ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::SubscriptionHandler(const struct FModioErrorCode& ErrorCode, const struct FModioModID& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "SubscriptionHandler");

	Params::ModioUISubsystem_SubscriptionHandler Parms{};

	Parms.ErrorCode = std::move(ErrorCode);
	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.UninstallHandler
// (Final, Native, Protected)
// Parameters:
// struct FModioErrorCode                  ErrorCode                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioModID                      ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::UninstallHandler(const struct FModioErrorCode& ErrorCode, const struct FModioModID& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "UninstallHandler");

	Params::ModioUISubsystem_UninstallHandler Parms{};

	Parms.ErrorCode = std::move(ErrorCode);
	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ModioUICore.ModioUISubsystem.UnsubscribeHandler
// (Final, Native, Protected)
// Parameters:
// struct FModioErrorCode                  ErrorCode                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModioModID                      ID                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UModioUISubsystem::UnsubscribeHandler(const struct FModioErrorCode& ErrorCode, const struct FModioModID& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioUISubsystem", "UnsubscribeHandler");

	Params::ModioUISubsystem_UnsubscribeHandler Parms{};

	Parms.ErrorCode = std::move(ErrorCode);
	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

