#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_L_cit_lamps_01_h_final

#include "Basic.hpp"

#include "BP_Light_Param_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_L_cit_lamps_01_h_final.BP_L_cit_lamps_01_h_final_C
// 0x0068 (0x07F0 - 0x0788)
class ABP_L_cit_lamps_01_h_final_C final : public ABP_Light_Param_C
{
public:
	class UDecalComponent*                        Decal_fake_Inner_light;                            // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_cit_lamps_01_h;                                 // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glow;                                              // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Main_Light;                                        // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_cit_lamps_01_j;                                 // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_cit_lamps_01_i;                                 // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Intensity_Decal;                                   // 0x07B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Scale_DecalMinus_Z;                                // 0x07C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Offset_DecalMinus_Z;                               // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Turn_OF_Decal;                                     // 0x07D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D1[0x7];                                      // 0x07D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Attenuation_Radius;                                // 0x07D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Outer_Cone_Angle;                                  // 0x07E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Light_Falloff_Exponent;                            // 0x07E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void PlayOffSound();
	void PlayOnSound();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_L_cit_lamps_01_h_final_C">();
	}
	static class ABP_L_cit_lamps_01_h_final_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_L_cit_lamps_01_h_final_C>();
	}
};
static_assert(alignof(ABP_L_cit_lamps_01_h_final_C) == 0x000008, "Wrong alignment on ABP_L_cit_lamps_01_h_final_C");
static_assert(sizeof(ABP_L_cit_lamps_01_h_final_C) == 0x0007F0, "Wrong size on ABP_L_cit_lamps_01_h_final_C");
static_assert(offsetof(ABP_L_cit_lamps_01_h_final_C, Decal_fake_Inner_light) == 0x000788, "Member 'ABP_L_cit_lamps_01_h_final_C::Decal_fake_Inner_light' has a wrong offset!");
static_assert(offsetof(ABP_L_cit_lamps_01_h_final_C, SM_cit_lamps_01_h) == 0x000790, "Member 'ABP_L_cit_lamps_01_h_final_C::SM_cit_lamps_01_h' has a wrong offset!");
static_assert(offsetof(ABP_L_cit_lamps_01_h_final_C, Glow) == 0x000798, "Member 'ABP_L_cit_lamps_01_h_final_C::Glow' has a wrong offset!");
static_assert(offsetof(ABP_L_cit_lamps_01_h_final_C, Main_Light) == 0x0007A0, "Member 'ABP_L_cit_lamps_01_h_final_C::Main_Light' has a wrong offset!");
static_assert(offsetof(ABP_L_cit_lamps_01_h_final_C, SM_cit_lamps_01_j) == 0x0007A8, "Member 'ABP_L_cit_lamps_01_h_final_C::SM_cit_lamps_01_j' has a wrong offset!");
static_assert(offsetof(ABP_L_cit_lamps_01_h_final_C, SM_cit_lamps_01_i) == 0x0007B0, "Member 'ABP_L_cit_lamps_01_h_final_C::SM_cit_lamps_01_i' has a wrong offset!");
static_assert(offsetof(ABP_L_cit_lamps_01_h_final_C, Intensity_Decal) == 0x0007B8, "Member 'ABP_L_cit_lamps_01_h_final_C::Intensity_Decal' has a wrong offset!");
static_assert(offsetof(ABP_L_cit_lamps_01_h_final_C, Scale_DecalMinus_Z) == 0x0007C0, "Member 'ABP_L_cit_lamps_01_h_final_C::Scale_DecalMinus_Z' has a wrong offset!");
static_assert(offsetof(ABP_L_cit_lamps_01_h_final_C, Offset_DecalMinus_Z) == 0x0007C8, "Member 'ABP_L_cit_lamps_01_h_final_C::Offset_DecalMinus_Z' has a wrong offset!");
static_assert(offsetof(ABP_L_cit_lamps_01_h_final_C, Turn_OF_Decal) == 0x0007D0, "Member 'ABP_L_cit_lamps_01_h_final_C::Turn_OF_Decal' has a wrong offset!");
static_assert(offsetof(ABP_L_cit_lamps_01_h_final_C, Attenuation_Radius) == 0x0007D8, "Member 'ABP_L_cit_lamps_01_h_final_C::Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(ABP_L_cit_lamps_01_h_final_C, Outer_Cone_Angle) == 0x0007E0, "Member 'ABP_L_cit_lamps_01_h_final_C::Outer_Cone_Angle' has a wrong offset!");
static_assert(offsetof(ABP_L_cit_lamps_01_h_final_C, Light_Falloff_Exponent) == 0x0007E8, "Member 'ABP_L_cit_lamps_01_h_final_C::Light_Falloff_Exponent' has a wrong offset!");

}

