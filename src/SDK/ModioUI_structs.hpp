#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModioUI

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "ModioUICore_structs.hpp"


namespace SDK
{

// Enum ModioUI.EModioCommonDialogButtonType
// NumValues: 0x0007
enum class EModioCommonDialogButtonType : uint8
{
	None                                     = 0,
	Back                                     = 1,
	Cancel                                   = 2,
	Confirm                                  = 4,
	Ok                                       = 8,
	ModDetails                               = 16,
	EModioCommonDialogButtonType_MAX         = 17,
};

// Enum ModioUI.EModioCommonSearchViewType
// NumValues: 0x0003
enum class EModioCommonSearchViewType : uint8
{
	SearchResults                            = 0,
	Collection                               = 1,
	EModioCommonSearchViewType_MAX           = 2,
};

// Enum ModioUI.EModioCommonRichTextStyleTextImageOrder
// NumValues: 0x0003
enum class EModioCommonRichTextStyleTextImageOrder : uint8
{
	ImageFirst                               = 0,
	TextFirst                                = 1,
	EModioCommonRichTextStyleTextImageOrder_MAX = 2,
};

// ScriptStruct ModioUI.ModioCommonAuthParamsSettings
// 0x0050 (0x0050 - 0x0000)
struct FModioCommonAuthParamsSettings final
{
public:
	struct FDataTableRowHandle                    BackInputAction;                                   // 0x0000(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    SubmitInputAction;                                 // 0x0010(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    CancelInputAction;                                 // 0x0020(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    TermsInputAction;                                  // 0x0030(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    PrivacyInputAction;                                // 0x0040(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonAuthParamsSettings) == 0x000008, "Wrong alignment on FModioCommonAuthParamsSettings");
static_assert(sizeof(FModioCommonAuthParamsSettings) == 0x000050, "Wrong size on FModioCommonAuthParamsSettings");
static_assert(offsetof(FModioCommonAuthParamsSettings, BackInputAction) == 0x000000, "Member 'FModioCommonAuthParamsSettings::BackInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonAuthParamsSettings, SubmitInputAction) == 0x000010, "Member 'FModioCommonAuthParamsSettings::SubmitInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonAuthParamsSettings, CancelInputAction) == 0x000020, "Member 'FModioCommonAuthParamsSettings::CancelInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonAuthParamsSettings, TermsInputAction) == 0x000030, "Member 'FModioCommonAuthParamsSettings::TermsInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonAuthParamsSettings, PrivacyInputAction) == 0x000040, "Member 'FModioCommonAuthParamsSettings::PrivacyInputAction' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonTabDescriptor
// 0x0030 (0x0030 - 0x0000)
struct FModioCommonTabDescriptor final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   TabText;                                           // 0x0008(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTabButtonBase>  TabButtonType;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UModioCommonTabButtonStyle> TabButtonStyle;                                    // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonTabDescriptor) == 0x000008, "Wrong alignment on FModioCommonTabDescriptor");
static_assert(sizeof(FModioCommonTabDescriptor) == 0x000030, "Wrong size on FModioCommonTabDescriptor");
static_assert(offsetof(FModioCommonTabDescriptor, TabId) == 0x000000, "Member 'FModioCommonTabDescriptor::TabId' has a wrong offset!");
static_assert(offsetof(FModioCommonTabDescriptor, TabText) == 0x000008, "Member 'FModioCommonTabDescriptor::TabText' has a wrong offset!");
static_assert(offsetof(FModioCommonTabDescriptor, TabButtonType) == 0x000020, "Member 'FModioCommonTabDescriptor::TabButtonType' has a wrong offset!");
static_assert(offsetof(FModioCommonTabDescriptor, TabButtonStyle) == 0x000028, "Member 'FModioCommonTabDescriptor::TabButtonStyle' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonEmailAuthCodeParamsSettings
// 0x0090 (0x0090 - 0x0000)
struct FModioCommonEmailAuthCodeParamsSettings final
{
public:
	class FText                                   TitleText;                                         // 0x0000(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   DescriptionText;                                   // 0x0018(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   ValidationText;                                    // 0x0030(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   BackButtonText;                                    // 0x0048(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   SubmitButtonText;                                  // 0x0060(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   CancelButtonText;                                  // 0x0078(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonEmailAuthCodeParamsSettings) == 0x000008, "Wrong alignment on FModioCommonEmailAuthCodeParamsSettings");
static_assert(sizeof(FModioCommonEmailAuthCodeParamsSettings) == 0x000090, "Wrong size on FModioCommonEmailAuthCodeParamsSettings");
static_assert(offsetof(FModioCommonEmailAuthCodeParamsSettings, TitleText) == 0x000000, "Member 'FModioCommonEmailAuthCodeParamsSettings::TitleText' has a wrong offset!");
static_assert(offsetof(FModioCommonEmailAuthCodeParamsSettings, DescriptionText) == 0x000018, "Member 'FModioCommonEmailAuthCodeParamsSettings::DescriptionText' has a wrong offset!");
static_assert(offsetof(FModioCommonEmailAuthCodeParamsSettings, ValidationText) == 0x000030, "Member 'FModioCommonEmailAuthCodeParamsSettings::ValidationText' has a wrong offset!");
static_assert(offsetof(FModioCommonEmailAuthCodeParamsSettings, BackButtonText) == 0x000048, "Member 'FModioCommonEmailAuthCodeParamsSettings::BackButtonText' has a wrong offset!");
static_assert(offsetof(FModioCommonEmailAuthCodeParamsSettings, SubmitButtonText) == 0x000060, "Member 'FModioCommonEmailAuthCodeParamsSettings::SubmitButtonText' has a wrong offset!");
static_assert(offsetof(FModioCommonEmailAuthCodeParamsSettings, CancelButtonText) == 0x000078, "Member 'FModioCommonEmailAuthCodeParamsSettings::CancelButtonText' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonEmailAuthLoadingParamsSettings
// 0x0048 (0x0048 - 0x0000)
struct FModioCommonEmailAuthLoadingParamsSettings final
{
public:
	class FText                                   TitleText;                                         // 0x0000(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   DescriptionText;                                   // 0x0018(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   CancelButtonText;                                  // 0x0030(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonEmailAuthLoadingParamsSettings) == 0x000008, "Wrong alignment on FModioCommonEmailAuthLoadingParamsSettings");
static_assert(sizeof(FModioCommonEmailAuthLoadingParamsSettings) == 0x000048, "Wrong size on FModioCommonEmailAuthLoadingParamsSettings");
static_assert(offsetof(FModioCommonEmailAuthLoadingParamsSettings, TitleText) == 0x000000, "Member 'FModioCommonEmailAuthLoadingParamsSettings::TitleText' has a wrong offset!");
static_assert(offsetof(FModioCommonEmailAuthLoadingParamsSettings, DescriptionText) == 0x000018, "Member 'FModioCommonEmailAuthLoadingParamsSettings::DescriptionText' has a wrong offset!");
static_assert(offsetof(FModioCommonEmailAuthLoadingParamsSettings, CancelButtonText) == 0x000030, "Member 'FModioCommonEmailAuthLoadingParamsSettings::CancelButtonText' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonEmailAuthParamsSettings
// 0x00A8 (0x00A8 - 0x0000)
struct FModioCommonEmailAuthParamsSettings final
{
public:
	class FText                                   TitleText;                                         // 0x0000(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   DescriptionText;                                   // 0x0018(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   ValidationText;                                    // 0x0030(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   EmailTooltipText;                                  // 0x0048(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   BackButtonText;                                    // 0x0060(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   SubmitButtonText;                                  // 0x0078(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   CancelButtonText;                                  // 0x0090(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonEmailAuthParamsSettings) == 0x000008, "Wrong alignment on FModioCommonEmailAuthParamsSettings");
static_assert(sizeof(FModioCommonEmailAuthParamsSettings) == 0x0000A8, "Wrong size on FModioCommonEmailAuthParamsSettings");
static_assert(offsetof(FModioCommonEmailAuthParamsSettings, TitleText) == 0x000000, "Member 'FModioCommonEmailAuthParamsSettings::TitleText' has a wrong offset!");
static_assert(offsetof(FModioCommonEmailAuthParamsSettings, DescriptionText) == 0x000018, "Member 'FModioCommonEmailAuthParamsSettings::DescriptionText' has a wrong offset!");
static_assert(offsetof(FModioCommonEmailAuthParamsSettings, ValidationText) == 0x000030, "Member 'FModioCommonEmailAuthParamsSettings::ValidationText' has a wrong offset!");
static_assert(offsetof(FModioCommonEmailAuthParamsSettings, EmailTooltipText) == 0x000048, "Member 'FModioCommonEmailAuthParamsSettings::EmailTooltipText' has a wrong offset!");
static_assert(offsetof(FModioCommonEmailAuthParamsSettings, BackButtonText) == 0x000060, "Member 'FModioCommonEmailAuthParamsSettings::BackButtonText' has a wrong offset!");
static_assert(offsetof(FModioCommonEmailAuthParamsSettings, SubmitButtonText) == 0x000078, "Member 'FModioCommonEmailAuthParamsSettings::SubmitButtonText' has a wrong offset!");
static_assert(offsetof(FModioCommonEmailAuthParamsSettings, CancelButtonText) == 0x000090, "Member 'FModioCommonEmailAuthParamsSettings::CancelButtonText' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonTermsOfUseParamsSettings
// 0x0090 (0x0090 - 0x0000)
struct FModioCommonTermsOfUseParamsSettings final
{
public:
	class FText                                   TitleText;                                         // 0x0000(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   ContentText;                                       // 0x0018(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   SubmitButtonText;                                  // 0x0030(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   CancelButtonText;                                  // 0x0048(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   TermsButtonText;                                   // 0x0060(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   PrivacyButtonText;                                 // 0x0078(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonTermsOfUseParamsSettings) == 0x000008, "Wrong alignment on FModioCommonTermsOfUseParamsSettings");
static_assert(sizeof(FModioCommonTermsOfUseParamsSettings) == 0x000090, "Wrong size on FModioCommonTermsOfUseParamsSettings");
static_assert(offsetof(FModioCommonTermsOfUseParamsSettings, TitleText) == 0x000000, "Member 'FModioCommonTermsOfUseParamsSettings::TitleText' has a wrong offset!");
static_assert(offsetof(FModioCommonTermsOfUseParamsSettings, ContentText) == 0x000018, "Member 'FModioCommonTermsOfUseParamsSettings::ContentText' has a wrong offset!");
static_assert(offsetof(FModioCommonTermsOfUseParamsSettings, SubmitButtonText) == 0x000030, "Member 'FModioCommonTermsOfUseParamsSettings::SubmitButtonText' has a wrong offset!");
static_assert(offsetof(FModioCommonTermsOfUseParamsSettings, CancelButtonText) == 0x000048, "Member 'FModioCommonTermsOfUseParamsSettings::CancelButtonText' has a wrong offset!");
static_assert(offsetof(FModioCommonTermsOfUseParamsSettings, TermsButtonText) == 0x000060, "Member 'FModioCommonTermsOfUseParamsSettings::TermsButtonText' has a wrong offset!");
static_assert(offsetof(FModioCommonTermsOfUseParamsSettings, PrivacyButtonText) == 0x000078, "Member 'FModioCommonTermsOfUseParamsSettings::PrivacyButtonText' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonCodeInputTextBoxInputStyle
// 0x0310 (0x06B0 - 0x03A0)
struct FModioCommonCodeInputTextBoxInputStyle final : public FTextBlockStyle
{
public:
	struct FSlateBrush                            CharacterBorderBrushBase;                          // 0x03A0(0x00F0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateBrush                            CharacterBorderBrushFocused;                       // 0x0490(0x00F0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMargin                                CharacterBorderPadding;                            // 0x0580(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FSlateBrush                            FakeCaretBrush;                                    // 0x0590(0x00F0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          FakeCaretHorizontalAlignment;                      // 0x0680(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVerticalAlignment                            FakeCaretVerticalAlignment;                        // 0x0681(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_682[0x2];                                      // 0x0682(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                CharacterPadding;                                  // 0x0684(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                                CharacterSpacing;                                  // 0x0694(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         MinimumCharacterWidth;                             // 0x06A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6A8[0x8];                                      // 0x06A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FModioCommonCodeInputTextBoxInputStyle) == 0x000010, "Wrong alignment on FModioCommonCodeInputTextBoxInputStyle");
static_assert(sizeof(FModioCommonCodeInputTextBoxInputStyle) == 0x0006B0, "Wrong size on FModioCommonCodeInputTextBoxInputStyle");
static_assert(offsetof(FModioCommonCodeInputTextBoxInputStyle, CharacterBorderBrushBase) == 0x0003A0, "Member 'FModioCommonCodeInputTextBoxInputStyle::CharacterBorderBrushBase' has a wrong offset!");
static_assert(offsetof(FModioCommonCodeInputTextBoxInputStyle, CharacterBorderBrushFocused) == 0x000490, "Member 'FModioCommonCodeInputTextBoxInputStyle::CharacterBorderBrushFocused' has a wrong offset!");
static_assert(offsetof(FModioCommonCodeInputTextBoxInputStyle, CharacterBorderPadding) == 0x000580, "Member 'FModioCommonCodeInputTextBoxInputStyle::CharacterBorderPadding' has a wrong offset!");
static_assert(offsetof(FModioCommonCodeInputTextBoxInputStyle, FakeCaretBrush) == 0x000590, "Member 'FModioCommonCodeInputTextBoxInputStyle::FakeCaretBrush' has a wrong offset!");
static_assert(offsetof(FModioCommonCodeInputTextBoxInputStyle, FakeCaretHorizontalAlignment) == 0x000680, "Member 'FModioCommonCodeInputTextBoxInputStyle::FakeCaretHorizontalAlignment' has a wrong offset!");
static_assert(offsetof(FModioCommonCodeInputTextBoxInputStyle, FakeCaretVerticalAlignment) == 0x000681, "Member 'FModioCommonCodeInputTextBoxInputStyle::FakeCaretVerticalAlignment' has a wrong offset!");
static_assert(offsetof(FModioCommonCodeInputTextBoxInputStyle, CharacterPadding) == 0x000684, "Member 'FModioCommonCodeInputTextBoxInputStyle::CharacterPadding' has a wrong offset!");
static_assert(offsetof(FModioCommonCodeInputTextBoxInputStyle, CharacterSpacing) == 0x000694, "Member 'FModioCommonCodeInputTextBoxInputStyle::CharacterSpacing' has a wrong offset!");
static_assert(offsetof(FModioCommonCodeInputTextBoxInputStyle, MinimumCharacterWidth) == 0x0006A4, "Member 'FModioCommonCodeInputTextBoxInputStyle::MinimumCharacterWidth' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonErrorWithRetryParamsSettings
// 0x0028 (0x0028 - 0x0000)
struct FModioCommonErrorWithRetryParamsSettings final
{
public:
	class FText                                   RetryButtonTextLabel;                              // 0x0000(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    RetryInputAction;                                  // 0x0018(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonErrorWithRetryParamsSettings) == 0x000008, "Wrong alignment on FModioCommonErrorWithRetryParamsSettings");
static_assert(sizeof(FModioCommonErrorWithRetryParamsSettings) == 0x000028, "Wrong size on FModioCommonErrorWithRetryParamsSettings");
static_assert(offsetof(FModioCommonErrorWithRetryParamsSettings, RetryButtonTextLabel) == 0x000000, "Member 'FModioCommonErrorWithRetryParamsSettings::RetryButtonTextLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonErrorWithRetryParamsSettings, RetryInputAction) == 0x000018, "Member 'FModioCommonErrorWithRetryParamsSettings::RetryInputAction' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonFilteredModListParams
// 0x00B0 (0x00B0 - 0x0000)
struct FModioCommonFilteredModListParams final
{
public:
	class FText                                   PreviousPageLabel;                                 // 0x0000(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   NextPageLabel;                                     // 0x0018(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   CurrentPageTextFormat;                             // 0x0030(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   TotalPagesTextFormat;                              // 0x0048(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   TotalModsTextFormat;                               // 0x0060(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   TotalSingleModTextFormat;                          // 0x0078(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    PreviousPageInputAction;                           // 0x0090(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    NextPageInputAction;                               // 0x00A0(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonFilteredModListParams) == 0x000008, "Wrong alignment on FModioCommonFilteredModListParams");
static_assert(sizeof(FModioCommonFilteredModListParams) == 0x0000B0, "Wrong size on FModioCommonFilteredModListParams");
static_assert(offsetof(FModioCommonFilteredModListParams, PreviousPageLabel) == 0x000000, "Member 'FModioCommonFilteredModListParams::PreviousPageLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonFilteredModListParams, NextPageLabel) == 0x000018, "Member 'FModioCommonFilteredModListParams::NextPageLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonFilteredModListParams, CurrentPageTextFormat) == 0x000030, "Member 'FModioCommonFilteredModListParams::CurrentPageTextFormat' has a wrong offset!");
static_assert(offsetof(FModioCommonFilteredModListParams, TotalPagesTextFormat) == 0x000048, "Member 'FModioCommonFilteredModListParams::TotalPagesTextFormat' has a wrong offset!");
static_assert(offsetof(FModioCommonFilteredModListParams, TotalModsTextFormat) == 0x000060, "Member 'FModioCommonFilteredModListParams::TotalModsTextFormat' has a wrong offset!");
static_assert(offsetof(FModioCommonFilteredModListParams, TotalSingleModTextFormat) == 0x000078, "Member 'FModioCommonFilteredModListParams::TotalSingleModTextFormat' has a wrong offset!");
static_assert(offsetof(FModioCommonFilteredModListParams, PreviousPageInputAction) == 0x000090, "Member 'FModioCommonFilteredModListParams::PreviousPageInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonFilteredModListParams, NextPageInputAction) == 0x0000A0, "Member 'FModioCommonFilteredModListParams::NextPageInputAction' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonCollectionParamsSettings
// 0x00C8 (0x00C8 - 0x0000)
struct FModioCommonCollectionParamsSettings final
{
public:
	class FText                                   ErrorsLabel;                                       // 0x0000(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   InstalledModsLabel;                                // 0x0018(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   InstalledModsDescription;                          // 0x0030(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   DefaultFetchUpdateButtonLabel;                     // 0x0048(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   SearchingFetchUpdateButtonLabel;                   // 0x0060(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   OwnedModsLabel;                                    // 0x0078(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   FilterButtonLabel;                                 // 0x0090(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    CheckForUpdatesInputAction;                        // 0x00A8(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    FilterInputAction;                                 // 0x00B8(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonCollectionParamsSettings) == 0x000008, "Wrong alignment on FModioCommonCollectionParamsSettings");
static_assert(sizeof(FModioCommonCollectionParamsSettings) == 0x0000C8, "Wrong size on FModioCommonCollectionParamsSettings");
static_assert(offsetof(FModioCommonCollectionParamsSettings, ErrorsLabel) == 0x000000, "Member 'FModioCommonCollectionParamsSettings::ErrorsLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonCollectionParamsSettings, InstalledModsLabel) == 0x000018, "Member 'FModioCommonCollectionParamsSettings::InstalledModsLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonCollectionParamsSettings, InstalledModsDescription) == 0x000030, "Member 'FModioCommonCollectionParamsSettings::InstalledModsDescription' has a wrong offset!");
static_assert(offsetof(FModioCommonCollectionParamsSettings, DefaultFetchUpdateButtonLabel) == 0x000048, "Member 'FModioCommonCollectionParamsSettings::DefaultFetchUpdateButtonLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonCollectionParamsSettings, SearchingFetchUpdateButtonLabel) == 0x000060, "Member 'FModioCommonCollectionParamsSettings::SearchingFetchUpdateButtonLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonCollectionParamsSettings, OwnedModsLabel) == 0x000078, "Member 'FModioCommonCollectionParamsSettings::OwnedModsLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonCollectionParamsSettings, FilterButtonLabel) == 0x000090, "Member 'FModioCommonCollectionParamsSettings::FilterButtonLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonCollectionParamsSettings, CheckForUpdatesInputAction) == 0x0000A8, "Member 'FModioCommonCollectionParamsSettings::CheckForUpdatesInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonCollectionParamsSettings, FilterInputAction) == 0x0000B8, "Member 'FModioCommonCollectionParamsSettings::FilterInputAction' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonFeaturedParamsSettings
// 0x0010 (0x0010 - 0x0000)
struct FModioCommonFeaturedParamsSettings final
{
public:
	TArray<struct FModioModCategoryParams>        CategoryParams;                                    // 0x0000(0x0010)(Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonFeaturedParamsSettings) == 0x000008, "Wrong alignment on FModioCommonFeaturedParamsSettings");
static_assert(sizeof(FModioCommonFeaturedParamsSettings) == 0x000010, "Wrong size on FModioCommonFeaturedParamsSettings");
static_assert(offsetof(FModioCommonFeaturedParamsSettings, CategoryParams) == 0x000000, "Member 'FModioCommonFeaturedParamsSettings::CategoryParams' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonModBrowserParamsSettings
// 0x0050 (0x0050 - 0x0000)
struct FModioCommonModBrowserParamsSettings final
{
public:
	class FText                                   CollectionViewTabText;                             // 0x0000(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   SearchResultsViewTabText;                          // 0x0018(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    PreviousTabInputAction;                            // 0x0030(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    NextTabInputAction;                                // 0x0040(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonModBrowserParamsSettings) == 0x000008, "Wrong alignment on FModioCommonModBrowserParamsSettings");
static_assert(sizeof(FModioCommonModBrowserParamsSettings) == 0x000050, "Wrong size on FModioCommonModBrowserParamsSettings");
static_assert(offsetof(FModioCommonModBrowserParamsSettings, CollectionViewTabText) == 0x000000, "Member 'FModioCommonModBrowserParamsSettings::CollectionViewTabText' has a wrong offset!");
static_assert(offsetof(FModioCommonModBrowserParamsSettings, SearchResultsViewTabText) == 0x000018, "Member 'FModioCommonModBrowserParamsSettings::SearchResultsViewTabText' has a wrong offset!");
static_assert(offsetof(FModioCommonModBrowserParamsSettings, PreviousTabInputAction) == 0x000030, "Member 'FModioCommonModBrowserParamsSettings::PreviousTabInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonModBrowserParamsSettings, NextTabInputAction) == 0x000040, "Member 'FModioCommonModBrowserParamsSettings::NextTabInputAction' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonModDetailsParamsSettings
// 0x01D0 (0x01D0 - 0x0000)
struct FModioCommonModDetailsParamsSettings final
{
public:
	class FText                                   SubscribeLabel;                                    // 0x0000(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   UnsubscribeLabel;                                  // 0x0018(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   CancelLabel;                                       // 0x0030(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   RateUpLabel;                                       // 0x0048(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   RateDownLabel;                                     // 0x0060(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   ReportLabel;                                       // 0x0078(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   FileSizeLabel;                                     // 0x0090(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   LastUpdatedLabel;                                  // 0x00A8(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   ReleaseDateLabel;                                  // 0x00C0(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   SubscribersLabel;                                  // 0x00D8(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   CreatedByLabel;                                    // 0x00F0(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   TagsLabel;                                         // 0x0108(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   ModDescriptionLabel;                               // 0x0120(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   SimilarModsLabel;                                  // 0x0138(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   DownloadingLabel;                                  // 0x0150(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   ExtractingLabel;                                   // 0x0168(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    SubscribeInputAction;                              // 0x0180(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    CancelInputAction;                                 // 0x0190(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    RateUpInputAction;                                 // 0x01A0(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    RateDownInputAction;                               // 0x01B0(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    OpenReportInputAction;                             // 0x01C0(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonModDetailsParamsSettings) == 0x000008, "Wrong alignment on FModioCommonModDetailsParamsSettings");
static_assert(sizeof(FModioCommonModDetailsParamsSettings) == 0x0001D0, "Wrong size on FModioCommonModDetailsParamsSettings");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, SubscribeLabel) == 0x000000, "Member 'FModioCommonModDetailsParamsSettings::SubscribeLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, UnsubscribeLabel) == 0x000018, "Member 'FModioCommonModDetailsParamsSettings::UnsubscribeLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, CancelLabel) == 0x000030, "Member 'FModioCommonModDetailsParamsSettings::CancelLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, RateUpLabel) == 0x000048, "Member 'FModioCommonModDetailsParamsSettings::RateUpLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, RateDownLabel) == 0x000060, "Member 'FModioCommonModDetailsParamsSettings::RateDownLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, ReportLabel) == 0x000078, "Member 'FModioCommonModDetailsParamsSettings::ReportLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, FileSizeLabel) == 0x000090, "Member 'FModioCommonModDetailsParamsSettings::FileSizeLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, LastUpdatedLabel) == 0x0000A8, "Member 'FModioCommonModDetailsParamsSettings::LastUpdatedLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, ReleaseDateLabel) == 0x0000C0, "Member 'FModioCommonModDetailsParamsSettings::ReleaseDateLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, SubscribersLabel) == 0x0000D8, "Member 'FModioCommonModDetailsParamsSettings::SubscribersLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, CreatedByLabel) == 0x0000F0, "Member 'FModioCommonModDetailsParamsSettings::CreatedByLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, TagsLabel) == 0x000108, "Member 'FModioCommonModDetailsParamsSettings::TagsLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, ModDescriptionLabel) == 0x000120, "Member 'FModioCommonModDetailsParamsSettings::ModDescriptionLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, SimilarModsLabel) == 0x000138, "Member 'FModioCommonModDetailsParamsSettings::SimilarModsLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, DownloadingLabel) == 0x000150, "Member 'FModioCommonModDetailsParamsSettings::DownloadingLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, ExtractingLabel) == 0x000168, "Member 'FModioCommonModDetailsParamsSettings::ExtractingLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, SubscribeInputAction) == 0x000180, "Member 'FModioCommonModDetailsParamsSettings::SubscribeInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, CancelInputAction) == 0x000190, "Member 'FModioCommonModDetailsParamsSettings::CancelInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, RateUpInputAction) == 0x0001A0, "Member 'FModioCommonModDetailsParamsSettings::RateUpInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, RateDownInputAction) == 0x0001B0, "Member 'FModioCommonModDetailsParamsSettings::RateDownInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonModDetailsParamsSettings, OpenReportInputAction) == 0x0001C0, "Member 'FModioCommonModDetailsParamsSettings::OpenReportInputAction' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonModEntryParamsSettings
// 0x01C0 (0x01C0 - 0x0000)
struct FModioCommonModEntryParamsSettings final
{
public:
	class FText                                   SubscribeLabel;                                    // 0x0000(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   UnsubscribeLabel;                                  // 0x0018(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   CancelLabel;                                       // 0x0030(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   EnableLabel;                                       // 0x0048(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   DisableLabel;                                      // 0x0060(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   ForceUninstallLabel;                               // 0x0078(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   OpenModDetailsLabel;                               // 0x0090(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   OpenReportLabel;                                   // 0x00A8(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   DownloadingLabel;                                  // 0x00C0(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   ExtractingLabel;                                   // 0x00D8(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   QueuedLabel;                                       // 0x00F0(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   SpeedLabel;                                        // 0x0108(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   SizeLabel;                                         // 0x0120(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   ErrorLabel;                                        // 0x0138(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   InstalledByOthersLabel;                            // 0x0150(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         DeselectionDelay;                                  // 0x0168(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    SubscribeInputAction;                              // 0x0170(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    CancelInputAction;                                 // 0x0180(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    SwitchEnabledInputAction;                          // 0x0190(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    OpenModDetailsInputAction;                         // 0x01A0(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    ForceUninstallInputAction;                         // 0x01B0(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonModEntryParamsSettings) == 0x000008, "Wrong alignment on FModioCommonModEntryParamsSettings");
static_assert(sizeof(FModioCommonModEntryParamsSettings) == 0x0001C0, "Wrong size on FModioCommonModEntryParamsSettings");
static_assert(offsetof(FModioCommonModEntryParamsSettings, SubscribeLabel) == 0x000000, "Member 'FModioCommonModEntryParamsSettings::SubscribeLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModEntryParamsSettings, UnsubscribeLabel) == 0x000018, "Member 'FModioCommonModEntryParamsSettings::UnsubscribeLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModEntryParamsSettings, CancelLabel) == 0x000030, "Member 'FModioCommonModEntryParamsSettings::CancelLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModEntryParamsSettings, EnableLabel) == 0x000048, "Member 'FModioCommonModEntryParamsSettings::EnableLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModEntryParamsSettings, DisableLabel) == 0x000060, "Member 'FModioCommonModEntryParamsSettings::DisableLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModEntryParamsSettings, ForceUninstallLabel) == 0x000078, "Member 'FModioCommonModEntryParamsSettings::ForceUninstallLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModEntryParamsSettings, OpenModDetailsLabel) == 0x000090, "Member 'FModioCommonModEntryParamsSettings::OpenModDetailsLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModEntryParamsSettings, OpenReportLabel) == 0x0000A8, "Member 'FModioCommonModEntryParamsSettings::OpenReportLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModEntryParamsSettings, DownloadingLabel) == 0x0000C0, "Member 'FModioCommonModEntryParamsSettings::DownloadingLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModEntryParamsSettings, ExtractingLabel) == 0x0000D8, "Member 'FModioCommonModEntryParamsSettings::ExtractingLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModEntryParamsSettings, QueuedLabel) == 0x0000F0, "Member 'FModioCommonModEntryParamsSettings::QueuedLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModEntryParamsSettings, SpeedLabel) == 0x000108, "Member 'FModioCommonModEntryParamsSettings::SpeedLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModEntryParamsSettings, SizeLabel) == 0x000120, "Member 'FModioCommonModEntryParamsSettings::SizeLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModEntryParamsSettings, ErrorLabel) == 0x000138, "Member 'FModioCommonModEntryParamsSettings::ErrorLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModEntryParamsSettings, InstalledByOthersLabel) == 0x000150, "Member 'FModioCommonModEntryParamsSettings::InstalledByOthersLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonModEntryParamsSettings, DeselectionDelay) == 0x000168, "Member 'FModioCommonModEntryParamsSettings::DeselectionDelay' has a wrong offset!");
static_assert(offsetof(FModioCommonModEntryParamsSettings, SubscribeInputAction) == 0x000170, "Member 'FModioCommonModEntryParamsSettings::SubscribeInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonModEntryParamsSettings, CancelInputAction) == 0x000180, "Member 'FModioCommonModEntryParamsSettings::CancelInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonModEntryParamsSettings, SwitchEnabledInputAction) == 0x000190, "Member 'FModioCommonModEntryParamsSettings::SwitchEnabledInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonModEntryParamsSettings, OpenModDetailsInputAction) == 0x0001A0, "Member 'FModioCommonModEntryParamsSettings::OpenModDetailsInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonModEntryParamsSettings, ForceUninstallInputAction) == 0x0001B0, "Member 'FModioCommonModEntryParamsSettings::ForceUninstallInputAction' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonModGalleryParamsSettings
// 0x0030 (0x0030 - 0x0000)
struct FModioCommonModGalleryParamsSettings final
{
public:
	struct FDataTableRowHandle                    PreviousImageInputAction;                          // 0x0000(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    NextImageInputAction;                              // 0x0010(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    SubscribeInputAction;                              // 0x0020(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonModGalleryParamsSettings) == 0x000008, "Wrong alignment on FModioCommonModGalleryParamsSettings");
static_assert(sizeof(FModioCommonModGalleryParamsSettings) == 0x000030, "Wrong size on FModioCommonModGalleryParamsSettings");
static_assert(offsetof(FModioCommonModGalleryParamsSettings, PreviousImageInputAction) == 0x000000, "Member 'FModioCommonModGalleryParamsSettings::PreviousImageInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonModGalleryParamsSettings, NextImageInputAction) == 0x000010, "Member 'FModioCommonModGalleryParamsSettings::NextImageInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonModGalleryParamsSettings, SubscribeInputAction) == 0x000020, "Member 'FModioCommonModGalleryParamsSettings::SubscribeInputAction' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonModOperationTrackerParamsSettings
// 0x0048 (0x0048 - 0x0000)
struct FModioCommonModOperationTrackerParamsSettings final
{
public:
	class FText                                   OverallOperationPercentageLabelText;               // 0x0000(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   QueuedOperationNumberLabelText;                    // 0x0018(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   SpeedLabelText;                                    // 0x0030(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonModOperationTrackerParamsSettings) == 0x000008, "Wrong alignment on FModioCommonModOperationTrackerParamsSettings");
static_assert(sizeof(FModioCommonModOperationTrackerParamsSettings) == 0x000048, "Wrong size on FModioCommonModOperationTrackerParamsSettings");
static_assert(offsetof(FModioCommonModOperationTrackerParamsSettings, OverallOperationPercentageLabelText) == 0x000000, "Member 'FModioCommonModOperationTrackerParamsSettings::OverallOperationPercentageLabelText' has a wrong offset!");
static_assert(offsetof(FModioCommonModOperationTrackerParamsSettings, QueuedOperationNumberLabelText) == 0x000018, "Member 'FModioCommonModOperationTrackerParamsSettings::QueuedOperationNumberLabelText' has a wrong offset!");
static_assert(offsetof(FModioCommonModOperationTrackerParamsSettings, SpeedLabelText) == 0x000030, "Member 'FModioCommonModOperationTrackerParamsSettings::SpeedLabelText' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonQuickAccessParamsSettings
// 0x0098 (0x0098 - 0x0000)
struct FModioCommonQuickAccessParamsSettings final
{
public:
	class FText                                   MainGameMenuButtonLabel;                           // 0x0000(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   MyCollectionButtonLabel;                           // 0x0018(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   LogInButtonLabel;                                  // 0x0030(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   LogOutButtonLabel;                                 // 0x0048(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    MainGameMenuInputAction;                           // 0x0060(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    AuthInputAction;                                   // 0x0070(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    MyCollectionInputAction;                           // 0x0080(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bShowMainGameMenu;                                 // 0x0090(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FModioCommonQuickAccessParamsSettings) == 0x000008, "Wrong alignment on FModioCommonQuickAccessParamsSettings");
static_assert(sizeof(FModioCommonQuickAccessParamsSettings) == 0x000098, "Wrong size on FModioCommonQuickAccessParamsSettings");
static_assert(offsetof(FModioCommonQuickAccessParamsSettings, MainGameMenuButtonLabel) == 0x000000, "Member 'FModioCommonQuickAccessParamsSettings::MainGameMenuButtonLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonQuickAccessParamsSettings, MyCollectionButtonLabel) == 0x000018, "Member 'FModioCommonQuickAccessParamsSettings::MyCollectionButtonLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonQuickAccessParamsSettings, LogInButtonLabel) == 0x000030, "Member 'FModioCommonQuickAccessParamsSettings::LogInButtonLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonQuickAccessParamsSettings, LogOutButtonLabel) == 0x000048, "Member 'FModioCommonQuickAccessParamsSettings::LogOutButtonLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonQuickAccessParamsSettings, MainGameMenuInputAction) == 0x000060, "Member 'FModioCommonQuickAccessParamsSettings::MainGameMenuInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonQuickAccessParamsSettings, AuthInputAction) == 0x000070, "Member 'FModioCommonQuickAccessParamsSettings::AuthInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonQuickAccessParamsSettings, MyCollectionInputAction) == 0x000080, "Member 'FModioCommonQuickAccessParamsSettings::MyCollectionInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonQuickAccessParamsSettings, bShowMainGameMenu) == 0x000090, "Member 'FModioCommonQuickAccessParamsSettings::bShowMainGameMenu' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonReportParamsSettings
// 0x0048 (0x0048 - 0x0000)
struct FModioCommonReportParamsSettings final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    ProceedInputAction;                                // 0x0008(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    BackInputAction;                                   // 0x0018(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    SubmitInputAction;                                 // 0x0028(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    CancelInputAction;                                 // 0x0038(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonReportParamsSettings) == 0x000008, "Wrong alignment on FModioCommonReportParamsSettings");
static_assert(sizeof(FModioCommonReportParamsSettings) == 0x000048, "Wrong size on FModioCommonReportParamsSettings");
static_assert(offsetof(FModioCommonReportParamsSettings, ProceedInputAction) == 0x000008, "Member 'FModioCommonReportParamsSettings::ProceedInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonReportParamsSettings, BackInputAction) == 0x000018, "Member 'FModioCommonReportParamsSettings::BackInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonReportParamsSettings, SubmitInputAction) == 0x000028, "Member 'FModioCommonReportParamsSettings::SubmitInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonReportParamsSettings, CancelInputAction) == 0x000038, "Member 'FModioCommonReportParamsSettings::CancelInputAction' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonReportReasonParamsSettings
// 0x0048 (0x0048 - 0x0000)
struct FModioCommonReportReasonParamsSettings final
{
public:
	class FText                                   DescriptionText;                                   // 0x0000(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   ProceedButtonText;                                 // 0x0018(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   CancelButtonText;                                  // 0x0030(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonReportReasonParamsSettings) == 0x000008, "Wrong alignment on FModioCommonReportReasonParamsSettings");
static_assert(sizeof(FModioCommonReportReasonParamsSettings) == 0x000048, "Wrong size on FModioCommonReportReasonParamsSettings");
static_assert(offsetof(FModioCommonReportReasonParamsSettings, DescriptionText) == 0x000000, "Member 'FModioCommonReportReasonParamsSettings::DescriptionText' has a wrong offset!");
static_assert(offsetof(FModioCommonReportReasonParamsSettings, ProceedButtonText) == 0x000018, "Member 'FModioCommonReportReasonParamsSettings::ProceedButtonText' has a wrong offset!");
static_assert(offsetof(FModioCommonReportReasonParamsSettings, CancelButtonText) == 0x000030, "Member 'FModioCommonReportReasonParamsSettings::CancelButtonText' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonReportEmailParamsSettings
// 0x0090 (0x0090 - 0x0000)
struct FModioCommonReportEmailParamsSettings final
{
public:
	class FText                                   DescriptionText;                                   // 0x0000(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   ValidationText;                                    // 0x0018(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   EmailTooltipText;                                  // 0x0030(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   BackButtonText;                                    // 0x0048(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   SubmitButtonText;                                  // 0x0060(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   CancelButtonText;                                  // 0x0078(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonReportEmailParamsSettings) == 0x000008, "Wrong alignment on FModioCommonReportEmailParamsSettings");
static_assert(sizeof(FModioCommonReportEmailParamsSettings) == 0x000090, "Wrong size on FModioCommonReportEmailParamsSettings");
static_assert(offsetof(FModioCommonReportEmailParamsSettings, DescriptionText) == 0x000000, "Member 'FModioCommonReportEmailParamsSettings::DescriptionText' has a wrong offset!");
static_assert(offsetof(FModioCommonReportEmailParamsSettings, ValidationText) == 0x000018, "Member 'FModioCommonReportEmailParamsSettings::ValidationText' has a wrong offset!");
static_assert(offsetof(FModioCommonReportEmailParamsSettings, EmailTooltipText) == 0x000030, "Member 'FModioCommonReportEmailParamsSettings::EmailTooltipText' has a wrong offset!");
static_assert(offsetof(FModioCommonReportEmailParamsSettings, BackButtonText) == 0x000048, "Member 'FModioCommonReportEmailParamsSettings::BackButtonText' has a wrong offset!");
static_assert(offsetof(FModioCommonReportEmailParamsSettings, SubmitButtonText) == 0x000060, "Member 'FModioCommonReportEmailParamsSettings::SubmitButtonText' has a wrong offset!");
static_assert(offsetof(FModioCommonReportEmailParamsSettings, CancelButtonText) == 0x000078, "Member 'FModioCommonReportEmailParamsSettings::CancelButtonText' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonReportMessageParamsSettings
// 0x0098 (0x0098 - 0x0000)
struct FModioCommonReportMessageParamsSettings final
{
public:
	class FText                                   DescriptionText;                                   // 0x0000(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   ValidationText;                                    // 0x0018(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         MessageLength;                                     // 0x0030(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   MessageTooltipText;                                // 0x0038(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   BackButtonText;                                    // 0x0050(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   SubmitButtonText;                                  // 0x0068(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   CancelButtonText;                                  // 0x0080(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonReportMessageParamsSettings) == 0x000008, "Wrong alignment on FModioCommonReportMessageParamsSettings");
static_assert(sizeof(FModioCommonReportMessageParamsSettings) == 0x000098, "Wrong size on FModioCommonReportMessageParamsSettings");
static_assert(offsetof(FModioCommonReportMessageParamsSettings, DescriptionText) == 0x000000, "Member 'FModioCommonReportMessageParamsSettings::DescriptionText' has a wrong offset!");
static_assert(offsetof(FModioCommonReportMessageParamsSettings, ValidationText) == 0x000018, "Member 'FModioCommonReportMessageParamsSettings::ValidationText' has a wrong offset!");
static_assert(offsetof(FModioCommonReportMessageParamsSettings, MessageLength) == 0x000030, "Member 'FModioCommonReportMessageParamsSettings::MessageLength' has a wrong offset!");
static_assert(offsetof(FModioCommonReportMessageParamsSettings, MessageTooltipText) == 0x000038, "Member 'FModioCommonReportMessageParamsSettings::MessageTooltipText' has a wrong offset!");
static_assert(offsetof(FModioCommonReportMessageParamsSettings, BackButtonText) == 0x000050, "Member 'FModioCommonReportMessageParamsSettings::BackButtonText' has a wrong offset!");
static_assert(offsetof(FModioCommonReportMessageParamsSettings, SubmitButtonText) == 0x000068, "Member 'FModioCommonReportMessageParamsSettings::SubmitButtonText' has a wrong offset!");
static_assert(offsetof(FModioCommonReportMessageParamsSettings, CancelButtonText) == 0x000080, "Member 'FModioCommonReportMessageParamsSettings::CancelButtonText' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonReportSummaryParamsSettings
// 0x00A8 (0x00A8 - 0x0000)
struct FModioCommonReportSummaryParamsSettings final
{
public:
	class FText                                   DescriptionText;                                   // 0x0000(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   ReasonLabelText;                                   // 0x0018(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   EmailLabelText;                                    // 0x0030(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   DetailsLabelText;                                  // 0x0048(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   BackButtonText;                                    // 0x0060(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   SubmitButtonText;                                  // 0x0078(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   CancelButtonText;                                  // 0x0090(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonReportSummaryParamsSettings) == 0x000008, "Wrong alignment on FModioCommonReportSummaryParamsSettings");
static_assert(sizeof(FModioCommonReportSummaryParamsSettings) == 0x0000A8, "Wrong size on FModioCommonReportSummaryParamsSettings");
static_assert(offsetof(FModioCommonReportSummaryParamsSettings, DescriptionText) == 0x000000, "Member 'FModioCommonReportSummaryParamsSettings::DescriptionText' has a wrong offset!");
static_assert(offsetof(FModioCommonReportSummaryParamsSettings, ReasonLabelText) == 0x000018, "Member 'FModioCommonReportSummaryParamsSettings::ReasonLabelText' has a wrong offset!");
static_assert(offsetof(FModioCommonReportSummaryParamsSettings, EmailLabelText) == 0x000030, "Member 'FModioCommonReportSummaryParamsSettings::EmailLabelText' has a wrong offset!");
static_assert(offsetof(FModioCommonReportSummaryParamsSettings, DetailsLabelText) == 0x000048, "Member 'FModioCommonReportSummaryParamsSettings::DetailsLabelText' has a wrong offset!");
static_assert(offsetof(FModioCommonReportSummaryParamsSettings, BackButtonText) == 0x000060, "Member 'FModioCommonReportSummaryParamsSettings::BackButtonText' has a wrong offset!");
static_assert(offsetof(FModioCommonReportSummaryParamsSettings, SubmitButtonText) == 0x000078, "Member 'FModioCommonReportSummaryParamsSettings::SubmitButtonText' has a wrong offset!");
static_assert(offsetof(FModioCommonReportSummaryParamsSettings, CancelButtonText) == 0x000090, "Member 'FModioCommonReportSummaryParamsSettings::CancelButtonText' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonSearchParamsSettings
// 0x0100 (0x0100 - 0x0000)
struct FModioCommonSearchParamsSettings final
{
public:
	class FText                                   SearchTabTitle;                                    // 0x0000(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   SearchButtonLabel;                                 // 0x0018(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   ResetButtonLabel;                                  // 0x0030(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   CloseButtonLabel;                                  // 0x0048(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   KeywordsLabel;                                     // 0x0060(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   CategoriesLabel;                                   // 0x0078(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   EditSearchButtonLabel;                             // 0x0090(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   ShowingAllModsLabel;                               // 0x00A8(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    CloseInputAction;                                  // 0x00C0(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    SearchInputAction;                                 // 0x00D0(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    ResetInputAction;                                  // 0x00E0(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    EditSearchInputAction;                             // 0x00F0(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonSearchParamsSettings) == 0x000008, "Wrong alignment on FModioCommonSearchParamsSettings");
static_assert(sizeof(FModioCommonSearchParamsSettings) == 0x000100, "Wrong size on FModioCommonSearchParamsSettings");
static_assert(offsetof(FModioCommonSearchParamsSettings, SearchTabTitle) == 0x000000, "Member 'FModioCommonSearchParamsSettings::SearchTabTitle' has a wrong offset!");
static_assert(offsetof(FModioCommonSearchParamsSettings, SearchButtonLabel) == 0x000018, "Member 'FModioCommonSearchParamsSettings::SearchButtonLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonSearchParamsSettings, ResetButtonLabel) == 0x000030, "Member 'FModioCommonSearchParamsSettings::ResetButtonLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonSearchParamsSettings, CloseButtonLabel) == 0x000048, "Member 'FModioCommonSearchParamsSettings::CloseButtonLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonSearchParamsSettings, KeywordsLabel) == 0x000060, "Member 'FModioCommonSearchParamsSettings::KeywordsLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonSearchParamsSettings, CategoriesLabel) == 0x000078, "Member 'FModioCommonSearchParamsSettings::CategoriesLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonSearchParamsSettings, EditSearchButtonLabel) == 0x000090, "Member 'FModioCommonSearchParamsSettings::EditSearchButtonLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonSearchParamsSettings, ShowingAllModsLabel) == 0x0000A8, "Member 'FModioCommonSearchParamsSettings::ShowingAllModsLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonSearchParamsSettings, CloseInputAction) == 0x0000C0, "Member 'FModioCommonSearchParamsSettings::CloseInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonSearchParamsSettings, SearchInputAction) == 0x0000D0, "Member 'FModioCommonSearchParamsSettings::SearchInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonSearchParamsSettings, ResetInputAction) == 0x0000E0, "Member 'FModioCommonSearchParamsSettings::ResetInputAction' has a wrong offset!");
static_assert(offsetof(FModioCommonSearchParamsSettings, EditSearchInputAction) == 0x0000F0, "Member 'FModioCommonSearchParamsSettings::EditSearchInputAction' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonStorageSpaceTrackerParamsSettings
// 0x0048 (0x0048 - 0x0000)
struct FModioCommonStorageSpaceTrackerParamsSettings final
{
public:
	class FText                                   UsedSpaceLabelText;                                // 0x0000(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   FreeSpaceLabelText;                                // 0x0018(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   TotalSpaceLabelText;                               // 0x0030(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonStorageSpaceTrackerParamsSettings) == 0x000008, "Wrong alignment on FModioCommonStorageSpaceTrackerParamsSettings");
static_assert(sizeof(FModioCommonStorageSpaceTrackerParamsSettings) == 0x000048, "Wrong size on FModioCommonStorageSpaceTrackerParamsSettings");
static_assert(offsetof(FModioCommonStorageSpaceTrackerParamsSettings, UsedSpaceLabelText) == 0x000000, "Member 'FModioCommonStorageSpaceTrackerParamsSettings::UsedSpaceLabelText' has a wrong offset!");
static_assert(offsetof(FModioCommonStorageSpaceTrackerParamsSettings, FreeSpaceLabelText) == 0x000018, "Member 'FModioCommonStorageSpaceTrackerParamsSettings::FreeSpaceLabelText' has a wrong offset!");
static_assert(offsetof(FModioCommonStorageSpaceTrackerParamsSettings, TotalSpaceLabelText) == 0x000030, "Member 'FModioCommonStorageSpaceTrackerParamsSettings::TotalSpaceLabelText' has a wrong offset!");

// ScriptStruct ModioUI.ModioCommonUserProfileWidgetParamsSettings
// 0x0028 (0x0028 - 0x0000)
struct FModioCommonUserProfileWidgetParamsSettings final
{
public:
	class FText                                   ProfileButtonLabel;                                // 0x0000(0x0018)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    ProfileInputAction;                                // 0x0018(0x0010)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModioCommonUserProfileWidgetParamsSettings) == 0x000008, "Wrong alignment on FModioCommonUserProfileWidgetParamsSettings");
static_assert(sizeof(FModioCommonUserProfileWidgetParamsSettings) == 0x000028, "Wrong size on FModioCommonUserProfileWidgetParamsSettings");
static_assert(offsetof(FModioCommonUserProfileWidgetParamsSettings, ProfileButtonLabel) == 0x000000, "Member 'FModioCommonUserProfileWidgetParamsSettings::ProfileButtonLabel' has a wrong offset!");
static_assert(offsetof(FModioCommonUserProfileWidgetParamsSettings, ProfileInputAction) == 0x000018, "Member 'FModioCommonUserProfileWidgetParamsSettings::ProfileInputAction' has a wrong offset!");

}

