#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Slot_Notification

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Stalker2_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Slot_Notification.W_Slot_Notification_C
// 0x0030 (0x0388 - 0x0358)
class UW_Slot_Notification_C final : public UQuestNotification
{
public:
	class UImage*                                 BodyCenter;                                        // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BodyDwn;                                           // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BodyTop;                                           // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimBuf;                                           // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TitleColor;                                        // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Slot_Notification_C">();
	}
	static class UW_Slot_Notification_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Slot_Notification_C>();
	}
};
static_assert(alignof(UW_Slot_Notification_C) == 0x000008, "Wrong alignment on UW_Slot_Notification_C");
static_assert(sizeof(UW_Slot_Notification_C) == 0x000388, "Wrong size on UW_Slot_Notification_C");
static_assert(offsetof(UW_Slot_Notification_C, BodyCenter) == 0x000358, "Member 'UW_Slot_Notification_C::BodyCenter' has a wrong offset!");
static_assert(offsetof(UW_Slot_Notification_C, BodyDwn) == 0x000360, "Member 'UW_Slot_Notification_C::BodyDwn' has a wrong offset!");
static_assert(offsetof(UW_Slot_Notification_C, BodyTop) == 0x000368, "Member 'UW_Slot_Notification_C::BodyTop' has a wrong offset!");
static_assert(offsetof(UW_Slot_Notification_C, AnimBuf) == 0x000370, "Member 'UW_Slot_Notification_C::AnimBuf' has a wrong offset!");
static_assert(offsetof(UW_Slot_Notification_C, TitleColor) == 0x000378, "Member 'UW_Slot_Notification_C::TitleColor' has a wrong offset!");

}

