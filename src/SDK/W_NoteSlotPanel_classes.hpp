#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_NoteSlotPanel

#include "Basic.hpp"

#include "Stalker2_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_NoteSlotPanel.W_NoteSlotPanel_C
// 0x0048 (0x03A0 - 0x0358)
class UW_NoteSlotPanel_C final : public UPDANotePanel
{
public:
	class UW_Text_C*                              W_AbsentNoteText;                                  // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PDANotesSlot_C*                      W_PDANotesSlot;                                    // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PDANotesSlot_C*                      W_PDANotesSlot_1;                                  // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PDANotesSlot_C*                      W_PDANotesSlot_2;                                  // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PDANotesSlot_C*                      W_PDANotesSlot_3;                                  // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PDANotesSlot_C*                      W_PDANotesSlot_4;                                  // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PDANotesSlot_C*                      W_PDANotesSlot_5;                                  // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PDANotesSlot_C*                      W_PDANotesSlot_6;                                  // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PDANotesSlot_C*                      W_PDANotesSlot_7;                                  // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_NoteSlotPanel_C">();
	}
	static class UW_NoteSlotPanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_NoteSlotPanel_C>();
	}
};
static_assert(alignof(UW_NoteSlotPanel_C) == 0x000008, "Wrong alignment on UW_NoteSlotPanel_C");
static_assert(sizeof(UW_NoteSlotPanel_C) == 0x0003A0, "Wrong size on UW_NoteSlotPanel_C");
static_assert(offsetof(UW_NoteSlotPanel_C, W_AbsentNoteText) == 0x000358, "Member 'UW_NoteSlotPanel_C::W_AbsentNoteText' has a wrong offset!");
static_assert(offsetof(UW_NoteSlotPanel_C, W_PDANotesSlot) == 0x000360, "Member 'UW_NoteSlotPanel_C::W_PDANotesSlot' has a wrong offset!");
static_assert(offsetof(UW_NoteSlotPanel_C, W_PDANotesSlot_1) == 0x000368, "Member 'UW_NoteSlotPanel_C::W_PDANotesSlot_1' has a wrong offset!");
static_assert(offsetof(UW_NoteSlotPanel_C, W_PDANotesSlot_2) == 0x000370, "Member 'UW_NoteSlotPanel_C::W_PDANotesSlot_2' has a wrong offset!");
static_assert(offsetof(UW_NoteSlotPanel_C, W_PDANotesSlot_3) == 0x000378, "Member 'UW_NoteSlotPanel_C::W_PDANotesSlot_3' has a wrong offset!");
static_assert(offsetof(UW_NoteSlotPanel_C, W_PDANotesSlot_4) == 0x000380, "Member 'UW_NoteSlotPanel_C::W_PDANotesSlot_4' has a wrong offset!");
static_assert(offsetof(UW_NoteSlotPanel_C, W_PDANotesSlot_5) == 0x000388, "Member 'UW_NoteSlotPanel_C::W_PDANotesSlot_5' has a wrong offset!");
static_assert(offsetof(UW_NoteSlotPanel_C, W_PDANotesSlot_6) == 0x000390, "Member 'UW_NoteSlotPanel_C::W_PDANotesSlot_6' has a wrong offset!");
static_assert(offsetof(UW_NoteSlotPanel_C, W_PDANotesSlot_7) == 0x000398, "Member 'UW_NoteSlotPanel_C::W_PDANotesSlot_7' has a wrong offset!");

}

