#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Photos

#include "Basic.hpp"

#include "E_Atlases_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Photos.BP_Photos_C
// 0x0020 (0x02B8 - 0x0298)
class ABP_Photos_C final : public AActor
{
public:
	class UStaticMeshComponent*                   SM_pos_photos_01;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	E_Atlases                                     Atlas;                                             // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RandomDamage;                                      // 0x02A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AA[0x2];                                      // 0x02AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _Image;                                            // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _Damage;                                           // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Photos_C">();
	}
	static class ABP_Photos_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Photos_C>();
	}
};
static_assert(alignof(ABP_Photos_C) == 0x000008, "Wrong alignment on ABP_Photos_C");
static_assert(sizeof(ABP_Photos_C) == 0x0002B8, "Wrong size on ABP_Photos_C");
static_assert(offsetof(ABP_Photos_C, SM_pos_photos_01) == 0x000298, "Member 'ABP_Photos_C::SM_pos_photos_01' has a wrong offset!");
static_assert(offsetof(ABP_Photos_C, DefaultSceneRoot) == 0x0002A0, "Member 'ABP_Photos_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Photos_C, Atlas) == 0x0002A8, "Member 'ABP_Photos_C::Atlas' has a wrong offset!");
static_assert(offsetof(ABP_Photos_C, RandomDamage) == 0x0002A9, "Member 'ABP_Photos_C::RandomDamage' has a wrong offset!");
static_assert(offsetof(ABP_Photos_C, _Image) == 0x0002AC, "Member 'ABP_Photos_C::_Image' has a wrong offset!");
static_assert(offsetof(ABP_Photos_C, _Damage) == 0x0002B0, "Member 'ABP_Photos_C::_Damage' has a wrong offset!");

}

