#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_AK74_fp

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "AnimBP_AK74_fp_structs.hpp"
#include "Stalker2_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_AK74_fp.AnimBP_AK74_fp_C
// 0x1080 (0x14F0 - 0x0470)
class UAnimBP_AK74_fp_C final : public UAnimInstancePlayerFirearm
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0470(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct AnimBP_AK74_fp::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0478(0x0018)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0490(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0498(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x04A0(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_14;                // 0x04C0(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_13;                // 0x0500(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_12;                // 0x0540(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_11;                // 0x0580(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_10;                // 0x05C0(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_9;                 // 0x0600(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_8;                 // 0x0640(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_7;                 // 0x0680(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_6;                 // 0x06C0(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_5;                 // 0x0700(0x0040)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_4;                   // 0x0740(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x0788(0x0108)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x0890(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_3;                   // 0x08D8(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_2;                   // 0x0920(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_4;                 // 0x0968(0x0040)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x09A8(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x09D0(0x0108)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_5;                  // 0x0AD8(0x00E0)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x0BB8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0C00(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_4;                  // 0x0C48(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x0D28(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x0D50(0x0028)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x0D78(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x0DC0(0x00E0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0EA0(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_3;                 // 0x0EE8(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_2;                 // 0x0F28(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x0F68(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x0FA8(0x0040)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0FE8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x1010(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1038(0x0108)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1140(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x1188(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x11B0(0x00E0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x1290(0x00E0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x1370(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x13B8(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x13E0(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x14C0(0x0028)()
	float                                         Delta_Time_X;                                      // 0x14E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AnimBP_AK74_fp(int32 EntryPoint);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_AK74_fp_C">();
	}
	static class UAnimBP_AK74_fp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_AK74_fp_C>();
	}
};
static_assert(alignof(UAnimBP_AK74_fp_C) == 0x000010, "Wrong alignment on UAnimBP_AK74_fp_C");
static_assert(sizeof(UAnimBP_AK74_fp_C) == 0x0014F0, "Wrong size on UAnimBP_AK74_fp_C");
static_assert(offsetof(UAnimBP_AK74_fp_C, UberGraphFrame) == 0x000470, "Member 'UAnimBP_AK74_fp_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, __AnimBlueprintMutables) == 0x000478, "Member 'UAnimBP_AK74_fp_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimBlueprintExtension_PropertyAccess) == 0x000490, "Member 'UAnimBP_AK74_fp_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimBlueprintExtension_Base) == 0x000498, "Member 'UAnimBP_AK74_fp_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_Root) == 0x0004A0, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_SequenceEvaluator_14) == 0x0004C0, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_SequenceEvaluator_14' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_SequenceEvaluator_13) == 0x000500, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_SequenceEvaluator_13' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_SequenceEvaluator_12) == 0x000540, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_SequenceEvaluator_12' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_SequenceEvaluator_11) == 0x000580, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_SequenceEvaluator_11' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_SequenceEvaluator_10) == 0x0005C0, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_SequenceEvaluator_10' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_SequenceEvaluator_9) == 0x000600, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_SequenceEvaluator_9' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_SequenceEvaluator_8) == 0x000640, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_SequenceEvaluator_8' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_SequenceEvaluator_7) == 0x000680, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_SequenceEvaluator_7' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_SequenceEvaluator_6) == 0x0006C0, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_SequenceEvaluator_6' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_SequenceEvaluator_5) == 0x000700, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_SequenceEvaluator_5' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_BlendListByEnum_4) == 0x000740, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_BlendListByEnum_4' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_SaveCachedPose_2) == 0x000788, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_Slot_2) == 0x000890, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_BlendListByEnum_3) == 0x0008D8, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_BlendListByEnum_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_BlendListByEnum_2) == 0x000920, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_BlendListByEnum_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_SequenceEvaluator_4) == 0x000968, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_SequenceEvaluator_4' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_UseCachedPose_7) == 0x0009A8, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_SaveCachedPose_1) == 0x0009D0, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_LayeredBoneBlend_5) == 0x000AD8, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_LayeredBoneBlend_5' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_BlendListByInt) == 0x000BB8, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_BlendListByBool) == 0x000C00, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_LayeredBoneBlend_4) == 0x000C48, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_LayeredBoneBlend_4' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_UseCachedPose_6) == 0x000D28, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_UseCachedPose_5) == 0x000D50, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_BlendListByEnum_1) == 0x000D78, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_LayeredBoneBlend_3) == 0x000DC0, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_Slot_1) == 0x000EA0, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_SequenceEvaluator_3) == 0x000EE8, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_SequenceEvaluator_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_SequenceEvaluator_2) == 0x000F28, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_SequenceEvaluator_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_SequenceEvaluator_1) == 0x000F68, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_SequenceEvaluator) == 0x000FA8, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_UseCachedPose_4) == 0x000FE8, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_UseCachedPose_3) == 0x001010, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_SaveCachedPose) == 0x001038, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_Slot) == 0x001140, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_UseCachedPose_2) == 0x001188, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_LayeredBoneBlend_2) == 0x0011B0, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_LayeredBoneBlend_1) == 0x001290, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_BlendListByEnum) == 0x001370, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_UseCachedPose_1) == 0x0013B8, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_LayeredBoneBlend) == 0x0013E0, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, AnimGraphNode_UseCachedPose) == 0x0014C0, "Member 'UAnimBP_AK74_fp_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UAnimBP_AK74_fp_C, Delta_Time_X) == 0x0014E8, "Member 'UAnimBP_AK74_fp_C::Delta_Time_X' has a wrong offset!");

}

