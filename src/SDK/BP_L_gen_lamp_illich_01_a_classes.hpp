#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_L_gen_lamp_illich_01_a

#include "Basic.hpp"

#include "BP_Light_Param_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_L_gen_lamp_illich_01_a.BP_L_gen_lamp_illich_01_a_C
// 0x0030 (0x07B8 - 0x0788)
class ABP_L_gen_lamp_illich_01_a_C final : public ABP_Light_Param_C
{
public:
	class UStaticMeshComponent*                   Glow;                                              // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightBulb_Core;                                    // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Main_Light;                                        // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_gen_lamp_illich_01_a;                           // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Attenuation_Radius;                                // 0x07A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Light_Falloff_Exponent;                            // 0x07B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void PlayOffSound();
	void PlayOnSound();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_L_gen_lamp_illich_01_a_C">();
	}
	static class ABP_L_gen_lamp_illich_01_a_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_L_gen_lamp_illich_01_a_C>();
	}
};
static_assert(alignof(ABP_L_gen_lamp_illich_01_a_C) == 0x000008, "Wrong alignment on ABP_L_gen_lamp_illich_01_a_C");
static_assert(sizeof(ABP_L_gen_lamp_illich_01_a_C) == 0x0007B8, "Wrong size on ABP_L_gen_lamp_illich_01_a_C");
static_assert(offsetof(ABP_L_gen_lamp_illich_01_a_C, Glow) == 0x000788, "Member 'ABP_L_gen_lamp_illich_01_a_C::Glow' has a wrong offset!");
static_assert(offsetof(ABP_L_gen_lamp_illich_01_a_C, LightBulb_Core) == 0x000790, "Member 'ABP_L_gen_lamp_illich_01_a_C::LightBulb_Core' has a wrong offset!");
static_assert(offsetof(ABP_L_gen_lamp_illich_01_a_C, Main_Light) == 0x000798, "Member 'ABP_L_gen_lamp_illich_01_a_C::Main_Light' has a wrong offset!");
static_assert(offsetof(ABP_L_gen_lamp_illich_01_a_C, SM_gen_lamp_illich_01_a) == 0x0007A0, "Member 'ABP_L_gen_lamp_illich_01_a_C::SM_gen_lamp_illich_01_a' has a wrong offset!");
static_assert(offsetof(ABP_L_gen_lamp_illich_01_a_C, Attenuation_Radius) == 0x0007A8, "Member 'ABP_L_gen_lamp_illich_01_a_C::Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(ABP_L_gen_lamp_illich_01_a_C, Light_Falloff_Exponent) == 0x0007B0, "Member 'ABP_L_gen_lamp_illich_01_a_C::Light_Falloff_Exponent' has a wrong offset!");

}

