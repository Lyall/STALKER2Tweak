#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_Human_viper

#include "Basic.hpp"

#include "AnimBP_Human_viper_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Stalker2_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_Human_viper.AnimBP_Human_viper_C
// 0x05E0 (0x17D0 - 0x11F0)
class UAnimBP_Human_viper_C final : public UAnimInstanceHuman
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x11F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct AnimBP_Human_viper::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x11F8(0x0004)(HasGetValueTypeHash)
	uint8                                         Pad_11FC[0x4];                                     // 0x11FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x1200(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x1208(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1210(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x1230(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_3;                 // 0x1278(0x0040)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_1;            // 0x12B8(0x00D0)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive;              // 0x1388(0x00D0)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_2;                 // 0x1458(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x1498(0x0040)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x14D8(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1520(0x0108)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x1628(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x16F0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1718(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1740(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x1788(0x0040)()

public:
	void AnimGraph(const struct FPoseLink& Locomotion, struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_AnimBP_Human_viper(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_Human_viper_C">();
	}
	static class UAnimBP_Human_viper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_Human_viper_C>();
	}
};
static_assert(alignof(UAnimBP_Human_viper_C) == 0x000010, "Wrong alignment on UAnimBP_Human_viper_C");
static_assert(sizeof(UAnimBP_Human_viper_C) == 0x0017D0, "Wrong size on UAnimBP_Human_viper_C");
static_assert(offsetof(UAnimBP_Human_viper_C, UberGraphFrame) == 0x0011F0, "Member 'UAnimBP_Human_viper_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_Human_viper_C, __AnimBlueprintMutables) == 0x0011F8, "Member 'UAnimBP_Human_viper_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UAnimBP_Human_viper_C, AnimBlueprintExtension_PropertyAccess) == 0x001200, "Member 'UAnimBP_Human_viper_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAnimBP_Human_viper_C, AnimBlueprintExtension_Base) == 0x001208, "Member 'UAnimBP_Human_viper_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAnimBP_Human_viper_C, AnimGraphNode_Root) == 0x001210, "Member 'UAnimBP_Human_viper_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAnimBP_Human_viper_C, AnimGraphNode_BlendListByBool_2) == 0x001230, "Member 'UAnimBP_Human_viper_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_Human_viper_C, AnimGraphNode_SequenceEvaluator_3) == 0x001278, "Member 'UAnimBP_Human_viper_C::AnimGraphNode_SequenceEvaluator_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_Human_viper_C, AnimGraphNode_ApplyMeshSpaceAdditive_1) == 0x0012B8, "Member 'UAnimBP_Human_viper_C::AnimGraphNode_ApplyMeshSpaceAdditive_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_Human_viper_C, AnimGraphNode_ApplyMeshSpaceAdditive) == 0x001388, "Member 'UAnimBP_Human_viper_C::AnimGraphNode_ApplyMeshSpaceAdditive' has a wrong offset!");
static_assert(offsetof(UAnimBP_Human_viper_C, AnimGraphNode_SequenceEvaluator_2) == 0x001458, "Member 'UAnimBP_Human_viper_C::AnimGraphNode_SequenceEvaluator_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_Human_viper_C, AnimGraphNode_SequenceEvaluator_1) == 0x001498, "Member 'UAnimBP_Human_viper_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_Human_viper_C, AnimGraphNode_BlendListByBool_1) == 0x0014D8, "Member 'UAnimBP_Human_viper_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_Human_viper_C, AnimGraphNode_SaveCachedPose) == 0x001520, "Member 'UAnimBP_Human_viper_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UAnimBP_Human_viper_C, AnimGraphNode_LinkedInputPose) == 0x001628, "Member 'UAnimBP_Human_viper_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UAnimBP_Human_viper_C, AnimGraphNode_UseCachedPose_1) == 0x0016F0, "Member 'UAnimBP_Human_viper_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_Human_viper_C, AnimGraphNode_UseCachedPose) == 0x001718, "Member 'UAnimBP_Human_viper_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UAnimBP_Human_viper_C, AnimGraphNode_BlendListByBool) == 0x001740, "Member 'UAnimBP_Human_viper_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UAnimBP_Human_viper_C, AnimGraphNode_SequenceEvaluator) == 0x001788, "Member 'UAnimBP_Human_viper_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");

}

