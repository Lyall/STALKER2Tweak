#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FenceGenerator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "MeshOverrideStruct_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass FenceGenerator.FenceGenerator_C
// 0x0140 (0x03D8 - 0x0298)
class AFenceGenerator_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USplineComponent*                       Spline;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            PicketMesh;                                        // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   NewVar_0;                                          // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        FenceMesh_EndOffset;                               // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collision;                                         // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            FenceMesh;                                         // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoTangentLength;                                 // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Fence_Height_Offset;                               // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            FenceMesh_End;                                     // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          DifferentEndMesh_;                                 // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DrawPickets_;                                      // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DrawFirstPicket_;                                  // 0x02F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F3[0x5];                                      // 0x02F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Picket_Yaw_Min;                                    // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Picket_Yaw_Max;                                    // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Picket_Scale_Min;                                  // 0x0308(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TraceDepth;                                        // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AlignToSurface_;                                   // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            FenceMesh_Start;                                   // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          DifferentStartMesh_;                               // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   NewVar_1;                                          // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   MySplineMesh;                                      // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Picket_Scale_Max;                                  // 0x0350(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DrawFenceMesh_;                                    // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DrawLastPicket_;                                   // 0x0369(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpdateRandomScaleAndYaw;                           // 0x036A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowPointNumbers;                                  // 0x036B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TextOffset;                                        // 0x0370(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, struct FMeshOverrideStruct>       FenceOverride;                                     // 0x0388(0x0050)(Edit, BlueprintVisible)

public:
	void AlignToSurface();
	void BuildFence(class UStaticMesh* FenceMesh_0, class UStaticMesh* PicketMesh_0, class UStaticMesh* FenceMeshEnd, class UStaticMesh* FenceMeshStart);
	void ExecuteUbergraph_FenceGenerator(int32 EntryPoint);
	void GetMeshesData(int32 PointIndex, class UStaticMesh** FenceMesh_0, class UStaticMesh** FenceMeshEnd, class UStaticMesh** FenceMeshStart, class UStaticMesh** PicketMesh_0);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FenceGenerator_C">();
	}
	static class AFenceGenerator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFenceGenerator_C>();
	}
};
static_assert(alignof(AFenceGenerator_C) == 0x000008, "Wrong alignment on AFenceGenerator_C");
static_assert(sizeof(AFenceGenerator_C) == 0x0003D8, "Wrong size on AFenceGenerator_C");
static_assert(offsetof(AFenceGenerator_C, UberGraphFrame) == 0x000298, "Member 'AFenceGenerator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, Spline) == 0x0002A0, "Member 'AFenceGenerator_C::Spline' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, DefaultSceneRoot) == 0x0002A8, "Member 'AFenceGenerator_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, PicketMesh) == 0x0002B0, "Member 'AFenceGenerator_C::PicketMesh' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, NewVar_0) == 0x0002B8, "Member 'AFenceGenerator_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, FenceMesh_EndOffset) == 0x0002C0, "Member 'AFenceGenerator_C::FenceMesh_EndOffset' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, Collision) == 0x0002C8, "Member 'AFenceGenerator_C::Collision' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, FenceMesh) == 0x0002D0, "Member 'AFenceGenerator_C::FenceMesh' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, AutoTangentLength) == 0x0002D8, "Member 'AFenceGenerator_C::AutoTangentLength' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, Fence_Height_Offset) == 0x0002E0, "Member 'AFenceGenerator_C::Fence_Height_Offset' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, FenceMesh_End) == 0x0002E8, "Member 'AFenceGenerator_C::FenceMesh_End' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, DifferentEndMesh_) == 0x0002F0, "Member 'AFenceGenerator_C::DifferentEndMesh_' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, DrawPickets_) == 0x0002F1, "Member 'AFenceGenerator_C::DrawPickets_' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, DrawFirstPicket_) == 0x0002F2, "Member 'AFenceGenerator_C::DrawFirstPicket_' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, Picket_Yaw_Min) == 0x0002F8, "Member 'AFenceGenerator_C::Picket_Yaw_Min' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, Picket_Yaw_Max) == 0x000300, "Member 'AFenceGenerator_C::Picket_Yaw_Max' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, Picket_Scale_Min) == 0x000308, "Member 'AFenceGenerator_C::Picket_Scale_Min' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, TraceDepth) == 0x000320, "Member 'AFenceGenerator_C::TraceDepth' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, AlignToSurface_) == 0x000328, "Member 'AFenceGenerator_C::AlignToSurface_' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, FenceMesh_Start) == 0x000330, "Member 'AFenceGenerator_C::FenceMesh_Start' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, DifferentStartMesh_) == 0x000338, "Member 'AFenceGenerator_C::DifferentStartMesh_' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, NewVar_1) == 0x000340, "Member 'AFenceGenerator_C::NewVar_1' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, MySplineMesh) == 0x000348, "Member 'AFenceGenerator_C::MySplineMesh' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, Picket_Scale_Max) == 0x000350, "Member 'AFenceGenerator_C::Picket_Scale_Max' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, DrawFenceMesh_) == 0x000368, "Member 'AFenceGenerator_C::DrawFenceMesh_' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, DrawLastPicket_) == 0x000369, "Member 'AFenceGenerator_C::DrawLastPicket_' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, UpdateRandomScaleAndYaw) == 0x00036A, "Member 'AFenceGenerator_C::UpdateRandomScaleAndYaw' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, ShowPointNumbers) == 0x00036B, "Member 'AFenceGenerator_C::ShowPointNumbers' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, TextOffset) == 0x000370, "Member 'AFenceGenerator_C::TextOffset' has a wrong offset!");
static_assert(offsetof(AFenceGenerator_C, FenceOverride) == 0x000388, "Member 'AFenceGenerator_C::FenceOverride' has a wrong offset!");

}

