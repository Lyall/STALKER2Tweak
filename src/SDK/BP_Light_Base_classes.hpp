#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Light_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Stalker2_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Light_Base.BP_Light_Base_C
// 0x0208 (0x04F0 - 0x02E8)
class ABP_Light_Base_C : public AInteractableObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ULightBulbComponent*                    LightBulb;                                         // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USignalReceiverComponent*               SignalReceiverFlickerDestroy;                      // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USignalReceiverComponent*               SignalReceiverFlickerOff;                          // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USignalReceiverComponent*               SignalReceiverFlickerOn;                           // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsInteractionComponent*           PhysicsInteraction;                                // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USingleClickComponent*                  SingleClick;                                       // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USignalReceiverComponent*               SignalReceiverOff;                                 // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageInteractableComponent*           DamageInteractable;                                // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHittableComponent*                     Hittable;                                          // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USignalReceiverComponent*               SignalReceiverOn;                                  // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         FlickerPattern_LightIntencityMultiplyer_01_2DB9D6514C154342AF39149971F164DA; // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FlickerPattern__Direction_2DB9D6514C154342AF39149971F164DA; // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345[0x3];                                      // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FlickerPattern;                                    // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          SwitchOnClick;                                     // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PhysicsActivateAfterDestroy;                       // 0x0351(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352[0x6];                                      // 0x0352(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         DestractionNiagaraEmitter_OnGlass;                 // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           SM_DestractibleGlass;                              // 0x0360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           SM_UdestractibleSM;                                // 0x0370(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UPointLightComponent*>           PointLights;                                       // 0x0380(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UPointLightComponent*>           InnerPointLights;                                  // 0x0390(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UPointLightComponent*>           OuterPointLights;                                  // 0x03A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class USpotLightComponent*>            SpotLights;                                        // 0x03B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class USpotLightComponent*>            InnerSpotLights;                                   // 0x03C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class USpotLightComponent*>            OuterSpotLights;                                   // 0x03D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class ABP_Light_Base_C*>               ChildActors;                                       // 0x03E0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         BaseIntensity;                                     // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         DestractionNiagaraEmitter_OnActor;                 // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          OnSound;                                           // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          OffSound;                                          // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          FlickSound;                                        // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          DestroySound;                                      // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            FlickerLightIntencityMultiplyerCurve;              // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            FlickerSoundEventsCurve;                           // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraComponent*>              NiagaraComponents;                                 // 0x0430(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	double                                        MaxRandomFlickDelay;                               // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseInnerIntensity;                                // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseOuterIntensity;                                // 0x044C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraComponent*>              InsectNiagaraComponents;                           // 0x0450(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          UseInsects;                                        // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ControlledLightsActors;                            // 0x0468(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          NeedOffFlickerOnEndEmission;                       // 0x0478(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OffMaxDelay;                                       // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           SM_EmissiveGlassOpaque;                            // 0x0488(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           SM_CustomDepth;                                    // 0x0498(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           SM_EmissiveGlow;                                   // 0x04A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          bEmissionFlickering;                               // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasBeganPlay;                                      // 0x04B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA[0x6];                                      // 0x04BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     LightFunction_Flickering;                          // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAffectedByEmission;                             // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                MultiplyForAmbientLight;                           // 0x04D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         IndexMultiplyForAmbientLight;                      // 0x04E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TurnOnOffIntensityWhileFlickering;                 // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_Light_Base_DamageInteractable_K2Node_ComponentBoundEvent_6_OnDamageAccumulated__DelegateSignature(const struct FUID& LastDamageDealerUID, bool bProjectileFlownThroughObject);
	void BndEvt__BP_Light_Base_SignalReceiverFlickerDestroy_K2Node_ComponentBoundEvent_5_SignalReceiverComponentReceiveSignature__DelegateSignature(class UObject* DataObject);
	void BndEvt__BP_Light_Base_SignalReceiverFlickerOff_K2Node_ComponentBoundEvent_4_SignalReceiverComponentReceiveSignature__DelegateSignature(class UObject* DataObject);
	void BndEvt__BP_Light_Base_SignalReceiverFlickerOn_K2Node_ComponentBoundEvent_3_SignalReceiverComponentReceiveSignature__DelegateSignature(class UObject* DataObject);
	void BndEvt__BP_Light_Base_SingleClick_K2Node_ComponentBoundEvent_2_InteractSignature__DelegateSignature();
	void BndEvt__BP_LightBulb_Base_SignalReceiver_K2Node_ComponentBoundEvent_0_SignalReceiverComponentReceiveSignature__DelegateSignature(class UObject* DataObject);
	void BndEvt__BP_LightBulb_Base_SignalReceiverOff_K2Node_ComponentBoundEvent_1_SignalReceiverComponentReceiveSignature__DelegateSignature(class UObject* DataObject);
	void CreateDynamicMaterialInstance();
	void DestroyLamp(bool SpawnEffect);
	void ExecuteUbergraph_BP_Light_Base(int32 EntryPoint);
	void FlickerPattern__FinishedFunc();
	void FlickerPattern__SoundEvents_01__EventFunc();
	void FlickerPattern__UpdateFunc();
	void FlickOffEmissionEnd();
	void FlickOnEmissionStart();
	void GetIntensityFromLights(TArray<class ULightComponent*>& Array, double* Value, bool* Has_Value);
	void GlassEmissive(bool OnOff);
	void GlassEmissiveFlick(double LightIntensity);
	void LightOff();
	void LightOffDayStart();
	void LightOn();
	void LightOnNightStart();
	void OnConstruction();
	void OnDayStart();
	void OnEmissionFinish();
	void OnEmissionStart();
	void OnNightStart();
	void PlayDestroySound();
	void PlayFlickeringSound();
	void PlayOffSound();
	void PlayOnSound();
	void PlaySound(class UAkAudioEvent* Sound);
	void ReceiveBeginPlay();
	void RemoveInsects();
	void ResetLightsIntencity();
	void SetCollisionProfile();
	void SetMaterialEnableFalse();
	void SetMaterialEnableTrue();
	void SetMultiplyArrey();
	void SetNewFlickPattern(class UCurveFloat* FlickerLightIntencityMultiplyerCurve_0, class UCurveFloat* FlickerSoundEventsCurve_0);
	void SpawnInsects();
	void StartFlicker();
	void StopFlicker();
	void TurnOffControlledLightsActors();
	void TurnOnControlledLightsActors();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Light_Base_C">();
	}
	static class ABP_Light_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Light_Base_C>();
	}
};
static_assert(alignof(ABP_Light_Base_C) == 0x000008, "Wrong alignment on ABP_Light_Base_C");
static_assert(sizeof(ABP_Light_Base_C) == 0x0004F0, "Wrong size on ABP_Light_Base_C");
static_assert(offsetof(ABP_Light_Base_C, UberGraphFrame) == 0x0002E8, "Member 'ABP_Light_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, LightBulb) == 0x0002F0, "Member 'ABP_Light_Base_C::LightBulb' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, SignalReceiverFlickerDestroy) == 0x0002F8, "Member 'ABP_Light_Base_C::SignalReceiverFlickerDestroy' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, SignalReceiverFlickerOff) == 0x000300, "Member 'ABP_Light_Base_C::SignalReceiverFlickerOff' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, SignalReceiverFlickerOn) == 0x000308, "Member 'ABP_Light_Base_C::SignalReceiverFlickerOn' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, PhysicsInteraction) == 0x000310, "Member 'ABP_Light_Base_C::PhysicsInteraction' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, SingleClick) == 0x000318, "Member 'ABP_Light_Base_C::SingleClick' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, SignalReceiverOff) == 0x000320, "Member 'ABP_Light_Base_C::SignalReceiverOff' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, DamageInteractable) == 0x000328, "Member 'ABP_Light_Base_C::DamageInteractable' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, Hittable) == 0x000330, "Member 'ABP_Light_Base_C::Hittable' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, SignalReceiverOn) == 0x000338, "Member 'ABP_Light_Base_C::SignalReceiverOn' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, FlickerPattern_LightIntencityMultiplyer_01_2DB9D6514C154342AF39149971F164DA) == 0x000340, "Member 'ABP_Light_Base_C::FlickerPattern_LightIntencityMultiplyer_01_2DB9D6514C154342AF39149971F164DA' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, FlickerPattern__Direction_2DB9D6514C154342AF39149971F164DA) == 0x000344, "Member 'ABP_Light_Base_C::FlickerPattern__Direction_2DB9D6514C154342AF39149971F164DA' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, FlickerPattern) == 0x000348, "Member 'ABP_Light_Base_C::FlickerPattern' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, SwitchOnClick) == 0x000350, "Member 'ABP_Light_Base_C::SwitchOnClick' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, PhysicsActivateAfterDestroy) == 0x000351, "Member 'ABP_Light_Base_C::PhysicsActivateAfterDestroy' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, DestractionNiagaraEmitter_OnGlass) == 0x000358, "Member 'ABP_Light_Base_C::DestractionNiagaraEmitter_OnGlass' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, SM_DestractibleGlass) == 0x000360, "Member 'ABP_Light_Base_C::SM_DestractibleGlass' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, SM_UdestractibleSM) == 0x000370, "Member 'ABP_Light_Base_C::SM_UdestractibleSM' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, PointLights) == 0x000380, "Member 'ABP_Light_Base_C::PointLights' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, InnerPointLights) == 0x000390, "Member 'ABP_Light_Base_C::InnerPointLights' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, OuterPointLights) == 0x0003A0, "Member 'ABP_Light_Base_C::OuterPointLights' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, SpotLights) == 0x0003B0, "Member 'ABP_Light_Base_C::SpotLights' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, InnerSpotLights) == 0x0003C0, "Member 'ABP_Light_Base_C::InnerSpotLights' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, OuterSpotLights) == 0x0003D0, "Member 'ABP_Light_Base_C::OuterSpotLights' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, ChildActors) == 0x0003E0, "Member 'ABP_Light_Base_C::ChildActors' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, BaseIntensity) == 0x0003F0, "Member 'ABP_Light_Base_C::BaseIntensity' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, DestractionNiagaraEmitter_OnActor) == 0x0003F8, "Member 'ABP_Light_Base_C::DestractionNiagaraEmitter_OnActor' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, OnSound) == 0x000400, "Member 'ABP_Light_Base_C::OnSound' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, OffSound) == 0x000408, "Member 'ABP_Light_Base_C::OffSound' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, FlickSound) == 0x000410, "Member 'ABP_Light_Base_C::FlickSound' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, DestroySound) == 0x000418, "Member 'ABP_Light_Base_C::DestroySound' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, FlickerLightIntencityMultiplyerCurve) == 0x000420, "Member 'ABP_Light_Base_C::FlickerLightIntencityMultiplyerCurve' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, FlickerSoundEventsCurve) == 0x000428, "Member 'ABP_Light_Base_C::FlickerSoundEventsCurve' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, NiagaraComponents) == 0x000430, "Member 'ABP_Light_Base_C::NiagaraComponents' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, MaxRandomFlickDelay) == 0x000440, "Member 'ABP_Light_Base_C::MaxRandomFlickDelay' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, BaseInnerIntensity) == 0x000448, "Member 'ABP_Light_Base_C::BaseInnerIntensity' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, BaseOuterIntensity) == 0x00044C, "Member 'ABP_Light_Base_C::BaseOuterIntensity' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, InsectNiagaraComponents) == 0x000450, "Member 'ABP_Light_Base_C::InsectNiagaraComponents' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, UseInsects) == 0x000460, "Member 'ABP_Light_Base_C::UseInsects' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, ControlledLightsActors) == 0x000468, "Member 'ABP_Light_Base_C::ControlledLightsActors' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, NeedOffFlickerOnEndEmission) == 0x000478, "Member 'ABP_Light_Base_C::NeedOffFlickerOnEndEmission' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, OffMaxDelay) == 0x000480, "Member 'ABP_Light_Base_C::OffMaxDelay' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, SM_EmissiveGlassOpaque) == 0x000488, "Member 'ABP_Light_Base_C::SM_EmissiveGlassOpaque' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, SM_CustomDepth) == 0x000498, "Member 'ABP_Light_Base_C::SM_CustomDepth' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, SM_EmissiveGlow) == 0x0004A8, "Member 'ABP_Light_Base_C::SM_EmissiveGlow' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, bEmissionFlickering) == 0x0004B8, "Member 'ABP_Light_Base_C::bEmissionFlickering' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, HasBeganPlay) == 0x0004B9, "Member 'ABP_Light_Base_C::HasBeganPlay' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, LightFunction_Flickering) == 0x0004C0, "Member 'ABP_Light_Base_C::LightFunction_Flickering' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, bIsAffectedByEmission) == 0x0004C8, "Member 'ABP_Light_Base_C::bIsAffectedByEmission' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, MultiplyForAmbientLight) == 0x0004D0, "Member 'ABP_Light_Base_C::MultiplyForAmbientLight' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, IndexMultiplyForAmbientLight) == 0x0004E0, "Member 'ABP_Light_Base_C::IndexMultiplyForAmbientLight' has a wrong offset!");
static_assert(offsetof(ABP_Light_Base_C, TurnOnOffIntensityWhileFlickering) == 0x0004E8, "Member 'ABP_Light_Base_C::TurnOnOffIntensityWhileFlickering' has a wrong offset!");

}

