#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SkinnedDecalComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function SkinnedDecalComponent.SkinnedDecalInstance.GetSampler
// 0x0008 (0x0008 - 0x0000)
struct SkinnedDecalInstance_GetSampler final
{
public:
	class USkinnedDecalSampler*                   ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnedDecalInstance_GetSampler) == 0x000008, "Wrong alignment on SkinnedDecalInstance_GetSampler");
static_assert(sizeof(SkinnedDecalInstance_GetSampler) == 0x000008, "Wrong size on SkinnedDecalInstance_GetSampler");
static_assert(offsetof(SkinnedDecalInstance_GetSampler, ReturnValue) == 0x000000, "Member 'SkinnedDecalInstance_GetSampler::ReturnValue' has a wrong offset!");

// Function SkinnedDecalComponent.SkinnedDecalSampler.CloneDecals
// 0x0008 (0x0008 - 0x0000)
struct SkinnedDecalSampler_CloneDecals final
{
public:
	class USkinnedDecalSampler*                   Source;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnedDecalSampler_CloneDecals) == 0x000008, "Wrong alignment on SkinnedDecalSampler_CloneDecals");
static_assert(sizeof(SkinnedDecalSampler_CloneDecals) == 0x000008, "Wrong size on SkinnedDecalSampler_CloneDecals");
static_assert(offsetof(SkinnedDecalSampler_CloneDecals, Source) == 0x000000, "Member 'SkinnedDecalSampler_CloneDecals::Source' has a wrong offset!");

// Function SkinnedDecalComponent.SkinnedDecalSampler.GetDataTarget
// 0x0008 (0x0008 - 0x0000)
struct SkinnedDecalSampler_GetDataTarget final
{
public:
	class UTextureRenderTarget2D*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnedDecalSampler_GetDataTarget) == 0x000008, "Wrong alignment on SkinnedDecalSampler_GetDataTarget");
static_assert(sizeof(SkinnedDecalSampler_GetDataTarget) == 0x000008, "Wrong size on SkinnedDecalSampler_GetDataTarget");
static_assert(offsetof(SkinnedDecalSampler_GetDataTarget, ReturnValue) == 0x000000, "Member 'SkinnedDecalSampler_GetDataTarget::ReturnValue' has a wrong offset!");

// Function SkinnedDecalComponent.SkinnedDecalSampler.RemoveDecal
// 0x0004 (0x0004 - 0x0000)
struct SkinnedDecalSampler_RemoveDecal final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnedDecalSampler_RemoveDecal) == 0x000004, "Wrong alignment on SkinnedDecalSampler_RemoveDecal");
static_assert(sizeof(SkinnedDecalSampler_RemoveDecal) == 0x000004, "Wrong size on SkinnedDecalSampler_RemoveDecal");
static_assert(offsetof(SkinnedDecalSampler_RemoveDecal, Index_0) == 0x000000, "Member 'SkinnedDecalSampler_RemoveDecal::Index_0' has a wrong offset!");

// Function SkinnedDecalComponent.SkinnedDecalSampler.SetMeshComponent
// 0x0010 (0x0010 - 0x0000)
struct SkinnedDecalSampler_SetMeshComponent final
{
public:
	class USkeletalMeshComponent*                 MeshComponent;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Child;                                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SkinnedDecalSampler_SetMeshComponent) == 0x000008, "Wrong alignment on SkinnedDecalSampler_SetMeshComponent");
static_assert(sizeof(SkinnedDecalSampler_SetMeshComponent) == 0x000010, "Wrong size on SkinnedDecalSampler_SetMeshComponent");
static_assert(offsetof(SkinnedDecalSampler_SetMeshComponent, MeshComponent) == 0x000000, "Member 'SkinnedDecalSampler_SetMeshComponent::MeshComponent' has a wrong offset!");
static_assert(offsetof(SkinnedDecalSampler_SetMeshComponent, Child) == 0x000008, "Member 'SkinnedDecalSampler_SetMeshComponent::Child' has a wrong offset!");

// Function SkinnedDecalComponent.SkinnedDecalSampler.SpawnDecal
// 0x0060 (0x0060 - 0x0000)
struct SkinnedDecalSampler_SpawnDecal final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  Rotation;                                          // 0x0020(0x0020)(ConstParm, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BoneName;                                          // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Size;                                              // 0x0048(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SubUV;                                             // 0x004C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0050(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0054(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SkinnedDecalSampler_SpawnDecal) == 0x000010, "Wrong alignment on SkinnedDecalSampler_SpawnDecal");
static_assert(sizeof(SkinnedDecalSampler_SpawnDecal) == 0x000060, "Wrong size on SkinnedDecalSampler_SpawnDecal");
static_assert(offsetof(SkinnedDecalSampler_SpawnDecal, Location) == 0x000000, "Member 'SkinnedDecalSampler_SpawnDecal::Location' has a wrong offset!");
static_assert(offsetof(SkinnedDecalSampler_SpawnDecal, Rotation) == 0x000020, "Member 'SkinnedDecalSampler_SpawnDecal::Rotation' has a wrong offset!");
static_assert(offsetof(SkinnedDecalSampler_SpawnDecal, BoneName) == 0x000040, "Member 'SkinnedDecalSampler_SpawnDecal::BoneName' has a wrong offset!");
static_assert(offsetof(SkinnedDecalSampler_SpawnDecal, Size) == 0x000048, "Member 'SkinnedDecalSampler_SpawnDecal::Size' has a wrong offset!");
static_assert(offsetof(SkinnedDecalSampler_SpawnDecal, SubUV) == 0x00004C, "Member 'SkinnedDecalSampler_SpawnDecal::SubUV' has a wrong offset!");
static_assert(offsetof(SkinnedDecalSampler_SpawnDecal, Index_0) == 0x000050, "Member 'SkinnedDecalSampler_SpawnDecal::Index_0' has a wrong offset!");
static_assert(offsetof(SkinnedDecalSampler_SpawnDecal, ReturnValue) == 0x000054, "Member 'SkinnedDecalSampler_SpawnDecal::ReturnValue' has a wrong offset!");

// Function SkinnedDecalComponent.SkinnedDecalSampler.UpdateInstance
// 0x0008 (0x0008 - 0x0000)
struct SkinnedDecalSampler_UpdateInstance final
{
public:
	class USkinnedDecalInstance*                  Instance;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SkinnedDecalSampler_UpdateInstance) == 0x000008, "Wrong alignment on SkinnedDecalSampler_UpdateInstance");
static_assert(sizeof(SkinnedDecalSampler_UpdateInstance) == 0x000008, "Wrong size on SkinnedDecalSampler_UpdateInstance");
static_assert(offsetof(SkinnedDecalSampler_UpdateInstance, Instance) == 0x000000, "Member 'SkinnedDecalSampler_UpdateInstance::Instance' has a wrong offset!");

}

