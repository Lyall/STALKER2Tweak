#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Interactable_Radio_120

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Stalker2_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Interactable_Radio_120.BP_Interactable_Radio_120_C
// 0x00A8 (0x0390 - 0x02E8)
class ABP_Interactable_Radio_120_C : public AInteractableObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        ArrowLookAt;                                       // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USignalSenderComponent*                 SenderOff;                                         // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USignalSenderComponent*                 SenderOn;                                          // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USignalSenderComponent*                 SenderFrequencySwitch;                             // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USignalReceiverComponent*               ReceiverOff;                                       // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USignalReceiverComponent*               ReceiverOn;                                        // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Destruct_Radio;                                 // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageInteractableComponent*           DamageInteractable;                                // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHittableComponent*                     Hittable;                                          // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           InteractableRadioAk;                               // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Radio;                                             // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHoldComponent*                         HoldOff;                                           // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHoldComponent*                         HoldOn;                                            // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USingleClickComponent*                  SingleClick;                                       // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_90D55A284453F9ACDD209F89A16AF286; // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_90D55A284453F9ACDD209F89A16AF286; // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          SFX_TurnOn;                                        // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          SFX_TurnOff;                                       // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          SFX_Destruct;                                      // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          SFX_FrequencySwitch;                               // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_Interactable_Radio_120_DamageInteractable_K2Node_ComponentBoundEvent_6_OnDamageAccumulated__DelegateSignature(const struct FUID& LastDamageDealerUID, bool bProjectileFlownThroughObject);
	void BndEvt__BP_Interactable_Radio_120_HoldOff_K2Node_ComponentBoundEvent_11_InteractSignature__DelegateSignature();
	void BndEvt__BP_Interactable_Radio_120_HoldOn_K2Node_ComponentBoundEvent_10_InteractSignature__DelegateSignature();
	void BndEvt__BP_Interactable_Radio_120_ReceiverOff_K2Node_ComponentBoundEvent_5_SignalReceiverComponentReceiveSignature__DelegateSignature(class UObject* DataObject);
	void BndEvt__BP_Interactable_Radio_120_ReceiverOn_K2Node_ComponentBoundEvent_1_SignalReceiverComponentReceiveSignature__DelegateSignature(class UObject* DataObject);
	void BndEvt__BP_Interactable_Radio_120_SingleClick_K2Node_ComponentBoundEvent_9_InteractSignature__DelegateSignature();
	void BndEvt__BP_Interactable_Radio_HoldOff_K2Node_ComponentBoundEvent_3_InteractSignature__DelegateSignature();
	void BndEvt__BP_Interactable_Radio_HoldOn_K2Node_ComponentBoundEvent_2_InteractSignature__DelegateSignature();
	void BndEvt__BP_Interactable_Radio_SingleClick_K2Node_ComponentBoundEvent_4_InteractSignature__DelegateSignature();
	void ExecuteUbergraph_BP_Interactable_Radio_120(int32 EntryPoint);
	void ReceiveBeginPlay();
	void StartFlickering();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void TurnOffAllInteract();
	void TurnOffRadioInteract();
	void TurnOnRadioInteract();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Interactable_Radio_120_C">();
	}
	static class ABP_Interactable_Radio_120_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Interactable_Radio_120_C>();
	}
};
static_assert(alignof(ABP_Interactable_Radio_120_C) == 0x000008, "Wrong alignment on ABP_Interactable_Radio_120_C");
static_assert(sizeof(ABP_Interactable_Radio_120_C) == 0x000390, "Wrong size on ABP_Interactable_Radio_120_C");
static_assert(offsetof(ABP_Interactable_Radio_120_C, UberGraphFrame) == 0x0002E8, "Member 'ABP_Interactable_Radio_120_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, ArrowLookAt) == 0x0002F0, "Member 'ABP_Interactable_Radio_120_C::ArrowLookAt' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, SenderOff) == 0x0002F8, "Member 'ABP_Interactable_Radio_120_C::SenderOff' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, SenderOn) == 0x000300, "Member 'ABP_Interactable_Radio_120_C::SenderOn' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, SenderFrequencySwitch) == 0x000308, "Member 'ABP_Interactable_Radio_120_C::SenderFrequencySwitch' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, ReceiverOff) == 0x000310, "Member 'ABP_Interactable_Radio_120_C::ReceiverOff' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, ReceiverOn) == 0x000318, "Member 'ABP_Interactable_Radio_120_C::ReceiverOn' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, NS_Destruct_Radio) == 0x000320, "Member 'ABP_Interactable_Radio_120_C::NS_Destruct_Radio' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, DamageInteractable) == 0x000328, "Member 'ABP_Interactable_Radio_120_C::DamageInteractable' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, Hittable) == 0x000330, "Member 'ABP_Interactable_Radio_120_C::Hittable' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, InteractableRadioAk) == 0x000338, "Member 'ABP_Interactable_Radio_120_C::InteractableRadioAk' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, Radio) == 0x000340, "Member 'ABP_Interactable_Radio_120_C::Radio' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, HoldOff) == 0x000348, "Member 'ABP_Interactable_Radio_120_C::HoldOff' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, HoldOn) == 0x000350, "Member 'ABP_Interactable_Radio_120_C::HoldOn' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, SingleClick) == 0x000358, "Member 'ABP_Interactable_Radio_120_C::SingleClick' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, Timeline_0_NewTrack_0_90D55A284453F9ACDD209F89A16AF286) == 0x000360, "Member 'ABP_Interactable_Radio_120_C::Timeline_0_NewTrack_0_90D55A284453F9ACDD209F89A16AF286' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, Timeline_0__Direction_90D55A284453F9ACDD209F89A16AF286) == 0x000364, "Member 'ABP_Interactable_Radio_120_C::Timeline_0__Direction_90D55A284453F9ACDD209F89A16AF286' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, Timeline_0) == 0x000368, "Member 'ABP_Interactable_Radio_120_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, SFX_TurnOn) == 0x000370, "Member 'ABP_Interactable_Radio_120_C::SFX_TurnOn' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, SFX_TurnOff) == 0x000378, "Member 'ABP_Interactable_Radio_120_C::SFX_TurnOff' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, SFX_Destruct) == 0x000380, "Member 'ABP_Interactable_Radio_120_C::SFX_Destruct' has a wrong offset!");
static_assert(offsetof(ABP_Interactable_Radio_120_C, SFX_FrequencySwitch) == 0x000388, "Member 'ABP_Interactable_Radio_120_C::SFX_FrequencySwitch' has a wrong offset!");

}

