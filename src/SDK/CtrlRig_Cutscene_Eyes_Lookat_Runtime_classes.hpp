#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CtrlRig_Cutscene_Eyes_Lookat_Runtime

#include "Basic.hpp"

#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "RigVM_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// RigVMMemoryStorageGeneratorClass CtrlRig_Cutscene_Eyes_Lookat_Runtime.RigVMMemory_Work
// 0x11F8 (0x1220 - 0x0028)
class CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	struct FControlRigExecuteContext              ExecuteContext_;                                   // 0x0028(0x0038)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___ToRigSpace_Location_1_Global;         // 0x0060(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTranslation_CachedIndex;   // 0x0078(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___LimitPosition_1_GetTransform_Transform; // 0x0090(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___LimitPosition_1_GetTransform_CachedIndex; // 0x00F0(0x0010)(Edit, EditConst, NonTransactional)
	double                                        RigVMModel___LimitPosition_1_Subtract_Result;      // 0x0100(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Multiply_Result;      // 0x0108(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Tan_Result;           // 0x0110(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Absolute_Result;      // 0x0118(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Absolute_Value;       // 0x0120(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Subtract_1_Result;    // 0x0128(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Multiply_1_Result;    // 0x0130(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___LimitPosition_1_If_Result;            // 0x0138(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___LimitPosition_1_Greater_Result : 1;   // 0x013C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___LimitPosition_1_Greater_A;            // 0x0140(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Multiply_1_A;         // 0x0148(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Absolute_1_Result;    // 0x0150(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Maximum_Maximum_1_Result; // 0x0158(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Maximum_Maximum_Result; // 0x0160(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Maximum_Maximum_B;    // 0x0168(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Clamp_1_Result;       // 0x0170(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_178[0x8];                                      // 0x0178(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___LimitPosition_1_Set_Transform_2_Value__IO; // 0x0180(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___LimitPosition_1_Set_Transform_2_CachedIndex; // 0x01E0(0x0010)(Edit, EditConst, NonTransactional)
	double                                        RigVMModel___LimitPosition_1_Clamp_Result;         // 0x01F0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Add_Result;           // 0x01F8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___LimitPosition_1_If_1_Result;          // 0x0200(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___LimitPosition_1_MathBoolOr_Result : 1; // 0x0204(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         BitPad_204_1 : 7;                                  // 0x0204(0x0001)(Fixing Bit-Field Size For New Byte [ Dumper-7 ])
	uint8                                         RigVMModel___LimitPosition_1_IsNearlyEqual_Result : 1; // 0x0205(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         BitPad_205_1 : 7;                                  // 0x0205(0x0001)(Fixing Bit-Field Size For New Byte [ Dumper-7 ])
	uint8                                         RigVMModel___LimitPosition_1_IsNearlyEqual_1_Result : 1; // 0x0206(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_207[0x1];                                      // 0x0207(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___LimitPosition_1_If_2_Result;          // 0x0208(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___LimitPosition_1_Less_Result : 1;      // 0x020C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___LimitPosition_1_Add_B;                // 0x0210(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_Result; // 0x0218(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_Transform; // 0x0230(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_CachedIndex; // 0x0290(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_A; // 0x02A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_Result; // 0x02B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Result; // 0x02D0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E8[0x8];                                      // 0x02E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_Transform; // 0x02F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_CachedIndex; // 0x0350(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Quaternion; // 0x0360(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Value__IO; // 0x0380(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_CachedIndex; // 0x03E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_1_Result; // 0x03F0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_1_Result; // 0x0408(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_Value__IO; // 0x0420(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_CachedIndex; // 0x0480(0x0010)(Edit, EditConst, NonTransactional)
	double                                        RigVMModel___Multiply_Result;                      // 0x0490(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigUnit_GetFloatAnimationChannel_Value; // 0x0498(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49C[0x4];                                      // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigElementKey>                 RigVMModel___RigUnit_GetFloatAnimationChannel_CachedChannelKey; // 0x04A0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___RigUnit_GetFloatAnimationChannel_CachedChannelHash; // 0x04B0(0x0010)(Edit, EditConst, NonTransactional)
	double                                        RigVMModel___Multiply_A;                           // 0x04C0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_4_Result;                          // 0x04C8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_4_Condition : 1;                   // 0x04CC(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_4CD[0x3];                                      // 0x04CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Clamp_Result;                         // 0x04D0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___If_4_True;                            // 0x04D8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Multiply_B;                           // 0x04E0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E8[0x8];                                      // 0x04E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_2_Transform;   // 0x04F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_2_CachedIndex; // 0x0550(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_2_Primary__IO;              // 0x0560(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         RigVMModel___AimItem_1_2_Weight;                   // 0x05A8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC[0x4];                                      // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_2_CachedItem;               // 0x05B0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_2_PrimaryCachedSpace;       // 0x05C0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_2_SecondaryCachedSpace;     // 0x05D0(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___OffsetTransformForItem_1_2_Weight;    // 0x05E0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E4[0x4];                                      // 0x05E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_CachedIndex; // 0x05E8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_5F8[0x8];                                      // 0x05F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_Transform;   // 0x0600(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_CachedIndex; // 0x0660(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_1_1_Primary__IO;            // 0x0670(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         RigVMModel___AimItem_1_1_1_Weight;                 // 0x06B8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BC[0x4];                                      // 0x06BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_1_CachedItem;             // 0x06C0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_1_PrimaryCachedSpace;     // 0x06D0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_1_SecondaryCachedSpace;   // 0x06E0(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___OffsetTransformForItem_1_2_1_Weight;  // 0x06F0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F4[0x4];                                      // 0x06F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_1_CachedIndex; // 0x06F8(0x0010)(Edit, EditConst, NonTransactional)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Absolute_Result; // 0x0708(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_Result; // 0x0710(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Atan_Result; // 0x0718(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Divide_Result; // 0x0720(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Vector; // 0x0728(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Minimum; // 0x0740(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Maximum; // 0x0758(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_CachedControlIndex; // 0x0770(0x0010)(Edit, EditConst, NonTransactional)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Divide_A;    // 0x0780(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Subtract_Result; // 0x0788(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Subtract_A;  // 0x0790(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___CalculateEyelidsOffset_1_GreaterEqual_Result : 1; // 0x0798(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_799[0x7];                                      // 0x0799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_1_Result;                      // 0x07A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_3_1_1_Condition : 1;               // 0x07C0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_7C1[0x7];                                      // 0x07C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___If_Result;                            // 0x07C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_Condition : 1;                     // 0x07E0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_7E1[0x7];                                      // 0x07E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_3_Result;                     // 0x07E8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_3_Factor;                     // 0x0800(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_804[0x4];                                      // 0x0804(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_Result;                       // 0x0808(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_Factor;                       // 0x0820(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_824[0xC];                                      // 0x0824(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_1_5_OffsetTransform__IO; // 0x0830(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___OffsetTransformForItem_1_2_1_1_5_Weight; // 0x0890(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_894[0x4];                                      // 0x0894(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_1_1_5_CachedIndex; // 0x0898(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_8A8[0x8];                                      // 0x08A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_Result;                        // 0x08B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_3_1_Condition : 1;                 // 0x08D0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_8D1[0x7];                                      // 0x08D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___If_1_Result;                          // 0x08D8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_1_Condition : 1;                   // 0x08F0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_8F1[0x7];                                      // 0x08F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_1_1_Result;                   // 0x08F8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_1_1_Factor;                   // 0x0910(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_914[0x4];                                      // 0x0914(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_1_Result;                     // 0x0918(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_1_Factor;                     // 0x0930(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_934[0xC];                                      // 0x0934(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_OffsetTransform__IO; // 0x0940(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_Weight; // 0x09A0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A4[0x4];                                      // 0x09A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_CachedIndex; // 0x09A8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_9B8[0x8];                                      // 0x09B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_Result;                          // 0x09C0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_3_Condition : 1;                   // 0x09E0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_9E1[0x7];                                      // 0x09E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___If_1_1_Result;                        // 0x09E8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_1_1_Condition : 1;                 // 0x0A00(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_A01[0x7];                                      // 0x0A01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_2_3_Result;                   // 0x0A08(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_2_3_Factor;                   // 0x0A20(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A24[0x4];                                      // 0x0A24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_2_Result;                     // 0x0A28(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_2_Factor;                     // 0x0A40(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A44[0xC];                                      // 0x0A44(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_OffsetTransform__IO; // 0x0A50(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_Weight; // 0x0AB0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB4[0x4];                                      // 0x0AB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_CachedIndex; // 0x0AB8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_AC8[0x8];                                      // 0x0AC8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_2_Result;                      // 0x0AD0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_3_1_2_Condition : 1;               // 0x0AF0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_AF1[0x7];                                      // 0x0AF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___If_1_1_1_Result;                      // 0x0AF8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_1_1_1_Condition : 1;               // 0x0B10(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_B11[0x7];                                      // 0x0B11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_2_1_1_Result;                 // 0x0B18(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_2_1_1_Factor;                 // 0x0B30(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B34[0x4];                                      // 0x0B34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_2_1_Result;                   // 0x0B38(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_2_1_Factor;                   // 0x0B50(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B54[0xC];                                      // 0x0B54(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_OffsetTransform__IO; // 0x0B60(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_Weight; // 0x0BC0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC4[0x4];                                      // 0x0BC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_CachedIndex; // 0x0BC8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_BD8[0x8];                                      // 0x0BD8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_1_1_Result;                    // 0x0BE0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_3_1_1_1_Condition : 1;             // 0x0C00(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_C01[0x7];                                      // 0x0C01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___If_2_Result;                          // 0x0C08(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_2_Condition : 1;                   // 0x0C20(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_C21[0x7];                                      // 0x0C21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_3_1_Result;                   // 0x0C28(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_3_1_Factor;                   // 0x0C40(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C44[0x4];                                      // 0x0C44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_4_Result;                     // 0x0C48(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_4_Factor;                     // 0x0C60(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C64[0xC];                                      // 0x0C64(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_OffsetTransform__IO; // 0x0C70(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_Weight; // 0x0CD0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD4[0x4];                                      // 0x0CD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_CachedIndex; // 0x0CD8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_CE8[0x8];                                      // 0x0CE8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_1_1_1_Result;                  // 0x0CF0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_3_1_1_1_1_Condition : 1;           // 0x0D10(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_D11[0x7];                                      // 0x0D11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___If_1_2_Result;                        // 0x0D18(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_1_2_Condition : 1;                 // 0x0D30(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_D31[0x7];                                      // 0x0D31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_1_1_1_Result;                 // 0x0D38(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_1_1_1_Factor;                 // 0x0D50(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D54[0x4];                                      // 0x0D54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_1_2_Result;                   // 0x0D58(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_1_2_Factor;                   // 0x0D70(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D74[0xC];                                      // 0x0D74(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_OffsetTransform__IO; // 0x0D80(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_Weight; // 0x0DE0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE4[0x4];                                      // 0x0DE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_CachedIndex; // 0x0DE8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_DF8[0x8];                                      // 0x0DF8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_1_1_1_1_Result;                // 0x0E00(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_3_1_1_1_1_1_Condition : 1;         // 0x0E20(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_E21[0x7];                                      // 0x0E21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___If_1_1_2_Result;                      // 0x0E28(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_1_1_2_Condition : 1;               // 0x0E40(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_E41[0x7];                                      // 0x0E41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_2_3_1_Result;                 // 0x0E48(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_2_3_1_Factor;                 // 0x0E60(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E64[0x4];                                      // 0x0E64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_2_2_Result;                   // 0x0E68(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_2_2_Factor;                   // 0x0E80(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E84[0xC];                                      // 0x0E84(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_OffsetTransform__IO; // 0x0E90(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_Weight; // 0x0EF0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF4[0x4];                                      // 0x0EF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_CachedIndex; // 0x0EF8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_F08[0x8];                                      // 0x0F08(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_1_1_1_2_Result;                // 0x0F10(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_3_1_1_1_1_2_Condition : 1;         // 0x0F30(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_F31[0x7];                                      // 0x0F31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___If_1_1_1_1_Result;                    // 0x0F38(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_1_1_1_1_Condition : 1;             // 0x0F50(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_F51[0x7];                                      // 0x0F51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_2_1_1_1_Result;               // 0x0F58(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_2_1_1_1_Factor;               // 0x0F70(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F74[0x4];                                      // 0x0F74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_2_1_2_Result;                 // 0x0F78(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_2_1_2_Factor;                 // 0x0F90(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F94[0xC];                                      // 0x0F94(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_OffsetTransform__IO; // 0x0FA0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_Weight; // 0x1000(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1004[0x4];                                     // 0x1004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_CachedIndex; // 0x1008(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         RigVMModel___Greater_Result : 1;                   // 0x1018(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_1019[0x3];                                     // 0x1019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___ProceduralEyesIdle_If_Result;         // 0x101C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___ProceduralEyesIdle_Greater_Result : 1; // 0x1020(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_1021[0x7];                                     // 0x1021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___ProceduralEyesIdle_Add_Result;        // 0x1028(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___ProceduralEyesIdle_Multiply_3_Result; // 0x1030(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___ProceduralEyesIdle_Divide_1_Result;   // 0x1038(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_GetDeltaTime_1_Result; // 0x1040(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1044[0x4];                                     // 0x1044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___ProceduralEyesIdle_Divide_1_A;        // 0x1048(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_If_False;          // 0x1050(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1054[0xC];                                     // 0x1054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___ProceduralEyesIdle_Cast_Result;       // 0x1060(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_Result; // 0x1080(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_Value; // 0x1084(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_TargetMaximum; // 0x1088(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_Result; // 0x108C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_Value; // 0x1090(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_TargetMaximum; // 0x1094(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_Result; // 0x1098(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_Value; // 0x109C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_TargetMaximum; // 0x10A0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A4[0x4];                                     // 0x10A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___ProceduralEyesIdle_Cast_Value__IO;    // 0x10A8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_1_OffsetTransform__IO; // 0x10C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_1_Weight; // 0x1120(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1124[0x4];                                     // 0x1124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_1_CachedIndex; // 0x1128(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_1138[0x8];                                     // 0x1138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___ProceduralEyesIdle_Cast_1_Result;     // 0x1140(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_2_Result; // 0x1160(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_2_Value; // 0x1164(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_2_TargetMaximum; // 0x1168(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_2_Result; // 0x116C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_2_Value; // 0x1170(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_2_TargetMaximum; // 0x1174(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_2_Result; // 0x1178(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_2_Value; // 0x117C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_2_TargetMaximum; // 0x1180(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1184[0x4];                                     // 0x1184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___ProceduralEyesIdle_Cast_1_Value__IO;  // 0x1188(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_OffsetTransform__IO; // 0x11A0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_Weight; // 0x1200(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1204[0x4];                                     // 0x1204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_CachedIndex; // 0x1208(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CtrlRig_Cutscene_Eyes_Lookat_Runtime.RigVMMemory_Work", true>();
	}
	static class CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work>();
	}
};
static_assert(alignof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work) == 0x000010, "Wrong alignment on CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work");
static_assert(sizeof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work) == 0x001220, "Wrong size on CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, ExecuteContext_) == 0x000028, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::ExecuteContext_' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ToRigSpace_Location_1_Global) == 0x000060, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ToRigSpace_Location_1_Global' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___RigUnit_SetTranslation_CachedIndex) == 0x000078, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___RigUnit_SetTranslation_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_GetTransform_Transform) == 0x000090, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_GetTransform_CachedIndex) == 0x0000F0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_Subtract_Result) == 0x000100, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_Subtract_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_Multiply_Result) == 0x000108, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_Multiply_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_Tan_Result) == 0x000110, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_Tan_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_Absolute_Result) == 0x000118, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_Absolute_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_Absolute_Value) == 0x000120, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_Absolute_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_Subtract_1_Result) == 0x000128, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_Subtract_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_Multiply_1_Result) == 0x000130, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_Multiply_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_If_Result) == 0x000138, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_If_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_Greater_A) == 0x000140, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_Greater_A' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_Multiply_1_A) == 0x000148, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_Multiply_1_A' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_Absolute_1_Result) == 0x000150, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_Absolute_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_Maximum_Maximum_1_Result) == 0x000158, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_Maximum_Maximum_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_Maximum_Maximum_Result) == 0x000160, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_Maximum_Maximum_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_Maximum_Maximum_B) == 0x000168, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_Maximum_Maximum_B' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_Clamp_1_Result) == 0x000170, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_Clamp_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_Set_Transform_2_Value__IO) == 0x000180, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_Set_Transform_2_Value__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_Set_Transform_2_CachedIndex) == 0x0001E0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_Set_Transform_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_Clamp_Result) == 0x0001F0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_Clamp_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_Add_Result) == 0x0001F8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_Add_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_If_1_Result) == 0x000200, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_If_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_If_2_Result) == 0x000208, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_If_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___LimitPosition_1_Add_B) == 0x000210, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___LimitPosition_1_Add_B' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_Result) == 0x000218, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_Transform) == 0x000230, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_CachedIndex) == 0x000290, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_A) == 0x0002A0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_A' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_Result) == 0x0002B8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Result) == 0x0002D0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_Transform) == 0x0002F0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_Transform' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_CachedIndex) == 0x000350, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Quaternion) == 0x000360, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Quaternion' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Value__IO) == 0x000380, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Value__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_CachedIndex) == 0x0003E0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_1_Result) == 0x0003F0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_1_Result) == 0x000408, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_Value__IO) == 0x000420, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_Value__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_CachedIndex) == 0x000480, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Multiply_Result) == 0x000490, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Multiply_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___RigUnit_GetFloatAnimationChannel_Value) == 0x000498, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___RigUnit_GetFloatAnimationChannel_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___RigUnit_GetFloatAnimationChannel_CachedChannelKey) == 0x0004A0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___RigUnit_GetFloatAnimationChannel_CachedChannelKey' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___RigUnit_GetFloatAnimationChannel_CachedChannelHash) == 0x0004B0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___RigUnit_GetFloatAnimationChannel_CachedChannelHash' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Multiply_A) == 0x0004C0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Multiply_A' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___If_4_Result) == 0x0004C8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___If_4_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Clamp_Result) == 0x0004D0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Clamp_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___If_4_True) == 0x0004D8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___If_4_True' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Multiply_B) == 0x0004E0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Multiply_B' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_Transform) == 0x0004F0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_Transform' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_CachedIndex) == 0x000550, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___AimItem_1_2_Primary__IO) == 0x000560, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___AimItem_1_2_Primary__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___AimItem_1_2_Weight) == 0x0005A8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___AimItem_1_2_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___AimItem_1_2_CachedItem) == 0x0005B0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___AimItem_1_2_CachedItem' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___AimItem_1_2_PrimaryCachedSpace) == 0x0005C0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___AimItem_1_2_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___AimItem_1_2_SecondaryCachedSpace) == 0x0005D0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___AimItem_1_2_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_Weight) == 0x0005E0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_CachedIndex) == 0x0005E8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_Transform) == 0x000600, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_Transform' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_CachedIndex) == 0x000660, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_Primary__IO) == 0x000670, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_Weight) == 0x0006B8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_CachedItem) == 0x0006C0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_CachedItem' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_PrimaryCachedSpace) == 0x0006D0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_SecondaryCachedSpace) == 0x0006E0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_Weight) == 0x0006F0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_CachedIndex) == 0x0006F8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_Absolute_Result) == 0x000708, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_Absolute_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_Result) == 0x000710, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_Atan_Result) == 0x000718, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_Atan_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_Divide_Result) == 0x000720, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_Divide_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Vector) == 0x000728, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Vector' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Minimum) == 0x000740, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Minimum' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Maximum) == 0x000758, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Maximum' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_CachedControlIndex) == 0x000770, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_Divide_A) == 0x000780, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_Divide_A' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_Subtract_Result) == 0x000788, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_Subtract_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_Subtract_A) == 0x000790, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_Subtract_A' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___If_3_1_1_Result) == 0x0007A0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___If_3_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___If_Result) == 0x0007C8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___If_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_3_Result) == 0x0007E8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_3_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_3_Factor) == 0x000800, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_3_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_Result) == 0x000808, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_Factor) == 0x000820, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_5_OffsetTransform__IO) == 0x000830, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_5_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_5_Weight) == 0x000890, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_5_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_5_CachedIndex) == 0x000898, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_5_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___If_3_1_Result) == 0x0008B0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___If_3_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___If_1_Result) == 0x0008D8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___If_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_1_1_Result) == 0x0008F8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_1_1_Factor) == 0x000910, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_1_1_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_1_Result) == 0x000918, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_1_Factor) == 0x000930, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_1_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_OffsetTransform__IO) == 0x000940, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_Weight) == 0x0009A0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_CachedIndex) == 0x0009A8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___If_3_Result) == 0x0009C0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___If_3_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___If_1_1_Result) == 0x0009E8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___If_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_2_3_Result) == 0x000A08, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_2_3_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_2_3_Factor) == 0x000A20, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_2_3_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_2_Result) == 0x000A28, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_2_Factor) == 0x000A40, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_2_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_OffsetTransform__IO) == 0x000A50, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_Weight) == 0x000AB0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_CachedIndex) == 0x000AB8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___If_3_1_2_Result) == 0x000AD0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___If_3_1_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___If_1_1_1_Result) == 0x000AF8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___If_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_2_1_1_Result) == 0x000B18, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_2_1_1_Factor) == 0x000B30, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_2_1_1_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_2_1_Result) == 0x000B38, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_2_1_Factor) == 0x000B50, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_2_1_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_OffsetTransform__IO) == 0x000B60, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_Weight) == 0x000BC0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_CachedIndex) == 0x000BC8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___If_3_1_1_1_Result) == 0x000BE0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___If_3_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___If_2_Result) == 0x000C08, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___If_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_3_1_Result) == 0x000C28, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_3_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_3_1_Factor) == 0x000C40, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_3_1_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_4_Result) == 0x000C48, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_4_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_4_Factor) == 0x000C60, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_4_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_OffsetTransform__IO) == 0x000C70, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_Weight) == 0x000CD0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_CachedIndex) == 0x000CD8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___If_3_1_1_1_1_Result) == 0x000CF0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___If_3_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___If_1_2_Result) == 0x000D18, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___If_1_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_1_1_1_Result) == 0x000D38, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_1_1_1_Factor) == 0x000D50, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_1_1_1_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_1_2_Result) == 0x000D58, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_1_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_1_2_Factor) == 0x000D70, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_1_2_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_OffsetTransform__IO) == 0x000D80, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_Weight) == 0x000DE0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_CachedIndex) == 0x000DE8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___If_3_1_1_1_1_1_Result) == 0x000E00, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___If_3_1_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___If_1_1_2_Result) == 0x000E28, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___If_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_2_3_1_Result) == 0x000E48, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_2_3_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_2_3_1_Factor) == 0x000E60, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_2_3_1_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_2_2_Result) == 0x000E68, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_2_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_2_2_Factor) == 0x000E80, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_2_2_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_OffsetTransform__IO) == 0x000E90, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_Weight) == 0x000EF0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_CachedIndex) == 0x000EF8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___If_3_1_1_1_1_2_Result) == 0x000F10, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___If_3_1_1_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___If_1_1_1_1_Result) == 0x000F38, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___If_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_2_1_1_1_Result) == 0x000F58, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_2_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_2_1_1_1_Factor) == 0x000F70, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_2_1_1_1_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_2_1_2_Result) == 0x000F78, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_2_1_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___Scale_2_2_1_2_Factor) == 0x000F90, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___Scale_2_2_1_2_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_OffsetTransform__IO) == 0x000FA0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_Weight) == 0x001000, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_CachedIndex) == 0x001008, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_If_Result) == 0x00101C, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_If_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_Add_Result) == 0x001028, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_Add_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_Multiply_3_Result) == 0x001030, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_Multiply_3_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_Divide_1_Result) == 0x001038, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_Divide_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_GetDeltaTime_1_Result) == 0x001040, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_GetDeltaTime_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_Divide_1_A) == 0x001048, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_Divide_1_A' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_If_False) == 0x001050, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_If_False' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_Cast_Result) == 0x001060, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_Cast_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_Result) == 0x001080, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_Value) == 0x001084, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_TargetMaximum) == 0x001088, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_TargetMaximum' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_Result) == 0x00108C, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_Value) == 0x001090, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_TargetMaximum) == 0x001094, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_TargetMaximum' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_Result) == 0x001098, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_Value) == 0x00109C, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_TargetMaximum) == 0x0010A0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_TargetMaximum' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_Cast_Value__IO) == 0x0010A8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_Cast_Value__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_1_OffsetTransform__IO) == 0x0010C0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_1_Weight) == 0x001120, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_1_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_1_CachedIndex) == 0x001128, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_Cast_1_Result) == 0x001140, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_2_Result) == 0x001160, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_2_Value) == 0x001164, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_2_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_2_TargetMaximum) == 0x001168, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_2_TargetMaximum' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_2_Result) == 0x00116C, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_2_Value) == 0x001170, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_2_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_2_TargetMaximum) == 0x001174, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_2_TargetMaximum' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_2_Result) == 0x001178, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_2_Value) == 0x00117C, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_2_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_2_TargetMaximum) == 0x001180, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_2_TargetMaximum' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_Cast_1_Value__IO) == 0x001188, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_OffsetTransform__IO) == 0x0011A0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_Weight) == 0x001200, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work, RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_CachedIndex) == 0x001208, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Work::RigVMModel___ProceduralEyesIdle_RigUnit_OffsetTransformForItem_CachedIndex' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass CtrlRig_Cutscene_Eyes_Lookat_Runtime.RigVMMemory_Literal
// 0x0A58 (0x0A80 - 0x0028)
class CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         RigVMModel___RigUnit_SetTranslation_Item__Const;   // 0x0028(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigVMModel___RigUnit_SetTranslation_Space__Const;  // 0x0034(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___RigUnit_SetTranslation_bInitial__Const : 1; // 0x0035(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___RigUnit_SetTranslation_Weight__Const; // 0x0038(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___RigUnit_SetTranslation_bPropagateToChildren__Const : 1; // 0x003C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	EBoneGetterSetterMode                         RigVMModel___LimitPosition_1_Set_Transform_2_Space__Const; // 0x003D(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___LimitPosition_1_Tan_Value__Const;     // 0x0040(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Subtract_B__Const;    // 0x0048(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Greater_B__Const;     // 0x0050(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___LimitPosition_1_If_True__Const;       // 0x0058(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___LimitPosition_1_If_False__Const;      // 0x005C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___LimitPosition_1_Set_Transform_2_Value__Const; // 0x0060(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Clamp_1_Minimum__Const; // 0x00C0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Clamp_1_Maximum__Const; // 0x00C8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_IsNearlyEqual_Tolerance__Const; // 0x00D0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___LimitPosition_1_If_2_True__Const;     // 0x00D8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___LimitPosition_1_If_2_False__Const;    // 0x00DC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___LimitPosition_1_If_1_False__Const;    // 0x00E0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___LimitPosition_1_Clamp_Minimum__Const; // 0x00E8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Clamp_Maximum__Const; // 0x00F0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Item__Const; // 0x00F8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0xC];                                      // 0x0104(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Value__Const; // 0x0110(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_Item__Const; // 0x0170(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EAxis                                         RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Axis__Const; // 0x017C(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_Length__Const; // 0x0180(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_Item__Const; // 0x0184(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_1_Length__Const; // 0x0190(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___RigUnit_GetFloatAnimationChannel_Control__Const; // 0x0194(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___RigUnit_GetFloatAnimationChannel_Channel__Const; // 0x019C(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_1_2_Item__Const;              // 0x01A4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_2_Primary__Const;           // 0x01B0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_2_Secondary__Const;         // 0x01F8(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimBone_DebugSettings         RigVMModel___AimItem_1_2_DebugSettings__Const;     // 0x0240(0x0070)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_OffsetTransform__Const; // 0x02B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_1_1_1_Item__Const;            // 0x0310(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_1_1_Secondary__Const;       // 0x0320(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_OffsetTransform__Const; // 0x0370(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Subtract_B__Const; // 0x03D0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_SourceMinimum__Const; // 0x03D8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_TargetMinimum__Const; // 0x03E0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_1_2_1_1_5_Item__Const; // 0x03E8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0xC];                                      // 0x03F4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_1_True__Const;                 // 0x0400(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___If_3_1_1_False__Const;                // 0x0420(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_3_Value__Const;               // 0x0440(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_Value__Const;                 // 0x0458(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_Item__Const; // 0x0470(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_OffsetTransform__Const; // 0x0480(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___If_3_1_True__Const;                   // 0x04E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___If_3_1_False__Const;                  // 0x0500(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_1_1_Value__Const;             // 0x0520(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_1_Value__Const;               // 0x0538(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_Item__Const; // 0x0550(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55C[0x4];                                      // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_True__Const;                     // 0x0560(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___If_3_False__Const;                    // 0x0580(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_2_3_Value__Const;             // 0x05A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_2_Value__Const;               // 0x05B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_Item__Const; // 0x05D0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DC[0x4];                                      // 0x05DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_2_False__Const;                // 0x05E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_2_1_1_Value__Const;           // 0x0600(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_2_1_Value__Const;             // 0x0618(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_Item__Const; // 0x0630(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63C[0x4];                                      // 0x063C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_1_1_False__Const;              // 0x0640(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_3_1_Value__Const;             // 0x0660(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_4_Value__Const;               // 0x0678(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_Item__Const; // 0x0690(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C[0x4];                                      // 0x069C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_1_1_1_Value__Const;           // 0x06A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_1_2_Value__Const;             // 0x06B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_Item__Const; // 0x06D0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_Item__Const; // 0x06DC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E8[0x8];                                      // 0x06E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_1_1_1_2_False__Const;          // 0x06F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_2_1_2_Value__Const;           // 0x0710(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___ProceduralEyesIdle_Divide_1_B__Const; // 0x0728(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___ProceduralEyesIdle_If_True__Const;    // 0x0730(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_734[0x4];                                      // 0x0734(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___ProceduralEyesIdle_Cast_Value__Const; // 0x0738(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FRuntimeFloatCurve                     RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_Curve__Const; // 0x0750(0x0088)(Edit, EditConst, NonTransactional)
	struct FRuntimeFloatCurve                     RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_Curve__Const; // 0x07D8(0x0088)(Edit, EditConst, NonTransactional)
	struct FRuntimeFloatCurve                     RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_Curve__Const; // 0x0860(0x0088)(Edit, EditConst, NonTransactional)
	struct FRuntimeFloatCurve                     RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_2_Curve__Const; // 0x08E8(0x0088)(Edit, EditConst, NonTransactional)
	struct FRuntimeFloatCurve                     RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_2_Curve__Const; // 0x0970(0x0088)(Edit, EditConst, NonTransactional)
	struct FRuntimeFloatCurve                     RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_2_Curve__Const; // 0x09F8(0x0088)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CtrlRig_Cutscene_Eyes_Lookat_Runtime.RigVMMemory_Literal", true>();
	}
	static class CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal>();
	}
};
static_assert(alignof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal) == 0x000010, "Wrong alignment on CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal");
static_assert(sizeof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal) == 0x000A80, "Wrong size on CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___RigUnit_SetTranslation_Item__Const) == 0x000028, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___RigUnit_SetTranslation_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___RigUnit_SetTranslation_Space__Const) == 0x000034, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___RigUnit_SetTranslation_Space__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___RigUnit_SetTranslation_Weight__Const) == 0x000038, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___RigUnit_SetTranslation_Weight__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___LimitPosition_1_Set_Transform_2_Space__Const) == 0x00003D, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___LimitPosition_1_Set_Transform_2_Space__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___LimitPosition_1_Tan_Value__Const) == 0x000040, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___LimitPosition_1_Tan_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___LimitPosition_1_Subtract_B__Const) == 0x000048, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___LimitPosition_1_Subtract_B__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___LimitPosition_1_Greater_B__Const) == 0x000050, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___LimitPosition_1_Greater_B__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___LimitPosition_1_If_True__Const) == 0x000058, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___LimitPosition_1_If_True__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___LimitPosition_1_If_False__Const) == 0x00005C, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___LimitPosition_1_If_False__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___LimitPosition_1_Set_Transform_2_Value__Const) == 0x000060, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___LimitPosition_1_Set_Transform_2_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___LimitPosition_1_Clamp_1_Minimum__Const) == 0x0000C0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___LimitPosition_1_Clamp_1_Minimum__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___LimitPosition_1_Clamp_1_Maximum__Const) == 0x0000C8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___LimitPosition_1_Clamp_1_Maximum__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___LimitPosition_1_IsNearlyEqual_Tolerance__Const) == 0x0000D0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___LimitPosition_1_IsNearlyEqual_Tolerance__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___LimitPosition_1_If_2_True__Const) == 0x0000D8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___LimitPosition_1_If_2_True__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___LimitPosition_1_If_2_False__Const) == 0x0000DC, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___LimitPosition_1_If_2_False__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___LimitPosition_1_If_1_False__Const) == 0x0000E0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___LimitPosition_1_If_1_False__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___LimitPosition_1_Clamp_Minimum__Const) == 0x0000E8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___LimitPosition_1_Clamp_Minimum__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___LimitPosition_1_Clamp_Maximum__Const) == 0x0000F0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___LimitPosition_1_Clamp_Maximum__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Item__Const) == 0x0000F8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Value__Const) == 0x000110, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_Item__Const) == 0x000170, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Axis__Const) == 0x00017C, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Axis__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_Length__Const) == 0x000180, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_Length__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_Item__Const) == 0x000184, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_1_Length__Const) == 0x000190, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_1_Length__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___RigUnit_GetFloatAnimationChannel_Control__Const) == 0x000194, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___RigUnit_GetFloatAnimationChannel_Control__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___RigUnit_GetFloatAnimationChannel_Channel__Const) == 0x00019C, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___RigUnit_GetFloatAnimationChannel_Channel__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___AimItem_1_2_Item__Const) == 0x0001A4, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___AimItem_1_2_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___AimItem_1_2_Primary__Const) == 0x0001B0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___AimItem_1_2_Primary__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___AimItem_1_2_Secondary__Const) == 0x0001F8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___AimItem_1_2_Secondary__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___AimItem_1_2_DebugSettings__Const) == 0x000240, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___AimItem_1_2_DebugSettings__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_OffsetTransform__Const) == 0x0002B0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_OffsetTransform__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___AimItem_1_1_1_Item__Const) == 0x000310, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___AimItem_1_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___AimItem_1_1_1_Secondary__Const) == 0x000320, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___AimItem_1_1_1_Secondary__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_OffsetTransform__Const) == 0x000370, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_OffsetTransform__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___CalculateEyelidsOffset_1_Subtract_B__Const) == 0x0003D0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___CalculateEyelidsOffset_1_Subtract_B__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_SourceMinimum__Const) == 0x0003D8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_SourceMinimum__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_TargetMinimum__Const) == 0x0003E0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_TargetMinimum__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_1_5_Item__Const) == 0x0003E8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_1_5_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___If_3_1_1_True__Const) == 0x000400, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___If_3_1_1_True__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___If_3_1_1_False__Const) == 0x000420, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___If_3_1_1_False__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___Scale_2_3_Value__Const) == 0x000440, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___Scale_2_3_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___Scale_2_Value__Const) == 0x000458, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___Scale_2_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_Item__Const) == 0x000470, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_OffsetTransform__Const) == 0x000480, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_OffsetTransform__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___If_3_1_True__Const) == 0x0004E0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___If_3_1_True__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___If_3_1_False__Const) == 0x000500, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___If_3_1_False__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___Scale_2_1_1_Value__Const) == 0x000520, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___Scale_2_1_1_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___Scale_2_1_Value__Const) == 0x000538, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___Scale_2_1_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_Item__Const) == 0x000550, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___If_3_True__Const) == 0x000560, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___If_3_True__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___If_3_False__Const) == 0x000580, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___If_3_False__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___Scale_2_2_3_Value__Const) == 0x0005A0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___Scale_2_2_3_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___Scale_2_2_Value__Const) == 0x0005B8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___Scale_2_2_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_Item__Const) == 0x0005D0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___If_3_1_2_False__Const) == 0x0005E0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___If_3_1_2_False__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___Scale_2_2_1_1_Value__Const) == 0x000600, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___Scale_2_2_1_1_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___Scale_2_2_1_Value__Const) == 0x000618, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___Scale_2_2_1_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_Item__Const) == 0x000630, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___If_3_1_1_1_False__Const) == 0x000640, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___If_3_1_1_1_False__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___Scale_2_3_1_Value__Const) == 0x000660, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___Scale_2_3_1_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___Scale_2_4_Value__Const) == 0x000678, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___Scale_2_4_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_Item__Const) == 0x000690, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___Scale_2_1_1_1_Value__Const) == 0x0006A0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___Scale_2_1_1_1_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___Scale_2_1_2_Value__Const) == 0x0006B8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___Scale_2_1_2_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_Item__Const) == 0x0006D0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_Item__Const) == 0x0006DC, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___If_3_1_1_1_1_2_False__Const) == 0x0006F0, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___If_3_1_1_1_1_2_False__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___Scale_2_2_1_2_Value__Const) == 0x000710, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___Scale_2_2_1_2_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___ProceduralEyesIdle_Divide_1_B__Const) == 0x000728, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___ProceduralEyesIdle_Divide_1_B__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___ProceduralEyesIdle_If_True__Const) == 0x000730, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___ProceduralEyesIdle_If_True__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___ProceduralEyesIdle_Cast_Value__Const) == 0x000738, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___ProceduralEyesIdle_Cast_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_Curve__Const) == 0x000750, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_Curve__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_Curve__Const) == 0x0007D8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_Curve__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_Curve__Const) == 0x000860, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_Curve__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_2_Curve__Const) == 0x0008E8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_2_Curve__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_2_Curve__Const) == 0x000970, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_1_1_2_Curve__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal, RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_2_Curve__Const) == 0x0009F8, "Member 'CtrlRig_Cutscene_Eyes_Lookat_Runtime::URigVMMemory_Literal::RigVMModel___ProceduralEyesIdle_AnimEvalRichCurve_2_Curve__Const' has a wrong offset!");

// ControlRigBlueprintGeneratedClass CtrlRig_Cutscene_Eyes_Lookat_Runtime.CtrlRig_Cutscene_Eyes_Lookat_Runtime_C
// 0x0080 (0x05E0 - 0x0560)
class UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C final : public UControlRig
{
public:
	double                                        EyelidsOffsetAbs;                                  // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtLocation;                                    // 0x0568(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtLocationLeftEye;                             // 0x0580(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LookAtWeight;                                      // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLookUp;                                           // 0x05A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HeadWeight;                                        // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldOffOnEdges;                                 // 0x05B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x05B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B2[0x6];                                      // 0x05B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ProceduralEyesIdleWeight;                          // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ProceduralEyesIdleAmplitude;                       // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ProceduralEyesIdleIntensity;                       // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentEyeCurveTime;                               // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EyesOnEdgeTurnOffWeight;                           // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CtrlRig_Cutscene_Eyes_Lookat_Runtime_C">();
	}
	static class UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C>();
	}
};
static_assert(alignof(UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C) == 0x000008, "Wrong alignment on UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C");
static_assert(sizeof(UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C) == 0x0005E0, "Wrong size on UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C");
static_assert(offsetof(UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C, EyelidsOffsetAbs) == 0x000560, "Member 'UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C::EyelidsOffsetAbs' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C, LookAtLocation) == 0x000568, "Member 'UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C::LookAtLocation' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C, LookAtLocationLeftEye) == 0x000580, "Member 'UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C::LookAtLocationLeftEye' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C, LookAtWeight) == 0x000598, "Member 'UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C::LookAtWeight' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C, bLookUp) == 0x0005A0, "Member 'UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C::bLookUp' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C, HeadWeight) == 0x0005A8, "Member 'UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C::HeadWeight' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C, bShouldOffOnEdges) == 0x0005B0, "Member 'UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C::bShouldOffOnEdges' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C, Condition) == 0x0005B1, "Member 'UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C::Condition' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C, ProceduralEyesIdleWeight) == 0x0005B8, "Member 'UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C::ProceduralEyesIdleWeight' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C, ProceduralEyesIdleAmplitude) == 0x0005C0, "Member 'UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C::ProceduralEyesIdleAmplitude' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C, ProceduralEyesIdleIntensity) == 0x0005C8, "Member 'UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C::ProceduralEyesIdleIntensity' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C, CurrentEyeCurveTime) == 0x0005D0, "Member 'UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C::CurrentEyeCurveTime' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C, EyesOnEdgeTurnOffWeight) == 0x0005D8, "Member 'UCtrlRig_Cutscene_Eyes_Lookat_Runtime_C::EyesOnEdgeTurnOffWeight' has a wrong offset!");

}

