#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameInputBase

#include "Basic.hpp"

#include "DeveloperSettings_structs.hpp"
#include "DeveloperSettings_classes.hpp"
#include "GameInputBase_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class GameInputBase.GameInputPlatformSettings
// 0x0010 (0x0050 - 0x0040)
class UGameInputPlatformSettings final : public UPlatformSettings
{
public:
	bool                                          bProcessController;                                // 0x0040(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bProcessRawInput;                                  // 0x0041(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSpecialDevicesRequireExplicitDeviceConfiguration; // 0x0042(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bProcessGamepad;                                   // 0x0043(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bProcessKeyboard;                                  // 0x0044(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bProcessMouse;                                     // 0x0045(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bProcessRacingWheel;                               // 0x0046(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_47[0x1];                                       // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RacingWheelDeadzone;                               // 0x0048(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameInputPlatformSettings">();
	}
	static class UGameInputPlatformSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameInputPlatformSettings>();
	}
};
static_assert(alignof(UGameInputPlatformSettings) == 0x000008, "Wrong alignment on UGameInputPlatformSettings");
static_assert(sizeof(UGameInputPlatformSettings) == 0x000050, "Wrong size on UGameInputPlatformSettings");
static_assert(offsetof(UGameInputPlatformSettings, bProcessController) == 0x000040, "Member 'UGameInputPlatformSettings::bProcessController' has a wrong offset!");
static_assert(offsetof(UGameInputPlatformSettings, bProcessRawInput) == 0x000041, "Member 'UGameInputPlatformSettings::bProcessRawInput' has a wrong offset!");
static_assert(offsetof(UGameInputPlatformSettings, bSpecialDevicesRequireExplicitDeviceConfiguration) == 0x000042, "Member 'UGameInputPlatformSettings::bSpecialDevicesRequireExplicitDeviceConfiguration' has a wrong offset!");
static_assert(offsetof(UGameInputPlatformSettings, bProcessGamepad) == 0x000043, "Member 'UGameInputPlatformSettings::bProcessGamepad' has a wrong offset!");
static_assert(offsetof(UGameInputPlatformSettings, bProcessKeyboard) == 0x000044, "Member 'UGameInputPlatformSettings::bProcessKeyboard' has a wrong offset!");
static_assert(offsetof(UGameInputPlatformSettings, bProcessMouse) == 0x000045, "Member 'UGameInputPlatformSettings::bProcessMouse' has a wrong offset!");
static_assert(offsetof(UGameInputPlatformSettings, bProcessRacingWheel) == 0x000046, "Member 'UGameInputPlatformSettings::bProcessRacingWheel' has a wrong offset!");
static_assert(offsetof(UGameInputPlatformSettings, RacingWheelDeadzone) == 0x000048, "Member 'UGameInputPlatformSettings::RacingWheelDeadzone' has a wrong offset!");

// Class GameInputBase.GameInputDeveloperSettings
// 0x0028 (0x0050 - 0x0028)
class UGameInputDeveloperSettings final : public UObject
{
public:
	TArray<struct FGameInputDeviceConfiguration>  DeviceConfigurations;                              // 0x0028(0x0010)(Edit, ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	struct FPerPlatformSettings                   PlatformSpecificSettings;                          // 0x0038(0x0010)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                          bDoNotProcessDuplicateCapabilitiesForSingleUser;   // 0x0048(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameInputDeveloperSettings">();
	}
	static class UGameInputDeveloperSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameInputDeveloperSettings>();
	}
};
static_assert(alignof(UGameInputDeveloperSettings) == 0x000008, "Wrong alignment on UGameInputDeveloperSettings");
static_assert(sizeof(UGameInputDeveloperSettings) == 0x000050, "Wrong size on UGameInputDeveloperSettings");
static_assert(offsetof(UGameInputDeveloperSettings, DeviceConfigurations) == 0x000028, "Member 'UGameInputDeveloperSettings::DeviceConfigurations' has a wrong offset!");
static_assert(offsetof(UGameInputDeveloperSettings, PlatformSpecificSettings) == 0x000038, "Member 'UGameInputDeveloperSettings::PlatformSpecificSettings' has a wrong offset!");
static_assert(offsetof(UGameInputDeveloperSettings, bDoNotProcessDuplicateCapabilitiesForSingleUser) == 0x000048, "Member 'UGameInputDeveloperSettings::bDoNotProcessDuplicateCapabilitiesForSingleUser' has a wrong offset!");

}

