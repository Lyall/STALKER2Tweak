#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CtrlRig_Standalone_Cutscene_Eyes_Lookat

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "Engine_structs.hpp"
#include "RigVM_classes.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass CtrlRig_Standalone_Cutscene_Eyes_Lookat.CtrlRig_Standalone_Cutscene_Eyes_Lookat_C
// 0x0058 (0x05B8 - 0x0560)
class UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C final : public UControlRig
{
public:
	double                                        EyelidsOffsetAbs;                                  // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtLocation;                                    // 0x0568(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtLocationLeftEye;                             // 0x0580(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LookAtWeight;                                      // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLookUp;                                           // 0x05A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HeadWeight;                                        // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentEyesCurveTime;                              // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CtrlRig_Standalone_Cutscene_Eyes_Lookat_C">();
	}
	static class UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C>();
	}
};
static_assert(alignof(UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C) == 0x000008, "Wrong alignment on UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C");
static_assert(sizeof(UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C) == 0x0005B8, "Wrong size on UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C");
static_assert(offsetof(UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C, EyelidsOffsetAbs) == 0x000560, "Member 'UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C::EyelidsOffsetAbs' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C, LookAtLocation) == 0x000568, "Member 'UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C::LookAtLocation' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C, LookAtLocationLeftEye) == 0x000580, "Member 'UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C::LookAtLocationLeftEye' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C, LookAtWeight) == 0x000598, "Member 'UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C::LookAtWeight' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C, bLookUp) == 0x0005A0, "Member 'UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C::bLookUp' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C, HeadWeight) == 0x0005A8, "Member 'UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C::HeadWeight' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C, CurrentEyesCurveTime) == 0x0005B0, "Member 'UCtrlRig_Standalone_Cutscene_Eyes_Lookat_C::CurrentEyesCurveTime' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass CtrlRig_Standalone_Cutscene_Eyes_Lookat.RigVMMemory_Literal
// 0x0B98 (0x0BC0 - 0x0028)
class CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         RigVMModel___LimitPosition_1_Set_Transform_2_Item__Const; // 0x0028(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigVMModel___LimitPosition_1_Set_Transform_2_Space__Const; // 0x0034(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___LimitPosition_1_Set_Transform_2_bInitial__Const : 1; // 0x0035(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_36[0xA];                                       // 0x0036(0x000A)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___LimitPosition_1_Set_Transform_2_Value__Const; // 0x0040(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Tan_Value__Const;     // 0x00A0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Subtract_B__Const;    // 0x00A8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Greater_B__Const;     // 0x00B0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___LimitPosition_1_If_True__Const;       // 0x00B8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___LimitPosition_1_If_False__Const;      // 0x00BC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Clamp_1_Minimum__Const; // 0x00C0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Clamp_1_Maximum__Const; // 0x00C8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___LimitPosition_1_Set_Transform_2_Weight__Const; // 0x00D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___LimitPosition_1_Set_Transform_2_bPropagateToChildren__Const : 1; // 0x00D4(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___LimitHeadPosition_Set_Transform_2_Item__Const; // 0x00D8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___LimitHeadPosition_Tan_Value__Const;   // 0x00E8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitHeadPosition_Subtract_B__Const;  // 0x00F0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___LimitHeadPosition_If_4_True__Const;   // 0x00F8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Item__Const; // 0x00FC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Space__Const; // 0x0108(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Value__Const; // 0x0110(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_Item__Const; // 0x0170(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EAxis                                         RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Axis__Const; // 0x017C(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_Length__Const; // 0x0180(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_Item__Const; // 0x0184(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___RigUnit_GetFloatAnimationChannel_Control__Const; // 0x0190(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___RigUnit_GetFloatAnimationChannel_Channel__Const; // 0x0198(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_1_2_Item__Const;              // 0x01A0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_2_Primary__Const;           // 0x01B0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_2_Secondary__Const;         // 0x01F8(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimBone_DebugSettings         RigVMModel___AimItem_1_2_DebugSettings__Const;     // 0x0240(0x0070)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_OffsetTransform__Const; // 0x02B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_1_1_1_Item__Const;            // 0x0310(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_1_1_Secondary__Const;       // 0x0320(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_OffsetTransform__Const; // 0x0370(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Subtract_B__Const; // 0x03D0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_SourceMinimum__Const; // 0x03D8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_TargetMinimum__Const; // 0x03E0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_TargetMaximum__Const; // 0x03E8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_1_2_1_1_5_Item__Const; // 0x03F0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_1_True__Const;                 // 0x0400(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___If_3_1_1_False__Const;                // 0x0420(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_3_Value__Const;               // 0x0440(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_Value__Const;                 // 0x0458(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_Item__Const; // 0x0470(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_OffsetTransform__Const; // 0x0480(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___If_3_1_True__Const;                   // 0x04E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___If_3_1_False__Const;                  // 0x0500(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_1_1_Value__Const;             // 0x0520(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_1_Value__Const;               // 0x0538(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_Item__Const; // 0x0550(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55C[0x4];                                      // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_True__Const;                     // 0x0560(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___If_3_False__Const;                    // 0x0580(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_2_3_Value__Const;             // 0x05A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_2_Value__Const;               // 0x05B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_Item__Const; // 0x05D0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DC[0x4];                                      // 0x05DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_2_False__Const;                // 0x05E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_2_1_1_Value__Const;           // 0x0600(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_2_1_Value__Const;             // 0x0618(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_Item__Const; // 0x0630(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63C[0x4];                                      // 0x063C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_1_1_False__Const;              // 0x0640(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_3_1_Value__Const;             // 0x0660(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_4_Value__Const;               // 0x0678(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_Item__Const; // 0x0690(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C[0x4];                                      // 0x069C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_1_1_1_Value__Const;           // 0x06A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_1_2_Value__Const;             // 0x06B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_Item__Const; // 0x06D0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_Item__Const; // 0x06DC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E8[0x8];                                      // 0x06E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_1_1_1_2_False__Const;          // 0x06F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Scale_2_2_1_2_Value__Const;           // 0x0710(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___RigUnit_GetFloatAnimationChannel_1_Control__Const; // 0x0728(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___RigUnit_GetFloatAnimationChannel_1_Channel__Const; // 0x0730(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_1_2_1_Item__Const;            // 0x0738(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_744[0x4];                                      // 0x0744(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_2_1_Primary__Const;         // 0x0748(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_2_1_OffsetTransform__Const; // 0x0790(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_2_OffsetTransform__Const; // 0x07F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___AddEyesAdditiveIdle_Divide_1_B__Const; // 0x0850(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_Channel__Const; // 0x0858(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AddEyesAdditiveIdle_If_True__Const;   // 0x0860(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_864[0x4];                                      // 0x0864(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RigVMModel___AddEyesAdditiveIdle_Cast_Value__Const; // 0x0868(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FRuntimeFloatCurve                     RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_Curve__Const; // 0x0880(0x0088)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_1_Channel__Const; // 0x0908(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRuntimeFloatCurve                     RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_1_Curve__Const; // 0x0910(0x0088)(Edit, EditConst, NonTransactional)
	struct FRuntimeFloatCurve                     RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_Curve__Const; // 0x0998(0x0088)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_1_Channel__Const; // 0x0A20(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRuntimeFloatCurve                     RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_2_Curve__Const; // 0x0A28(0x0088)(Edit, EditConst, NonTransactional)
	struct FRuntimeFloatCurve                     RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_1_2_Curve__Const; // 0x0AB0(0x0088)(Edit, EditConst, NonTransactional)
	struct FRuntimeFloatCurve                     RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_2_Curve__Const; // 0x0B38(0x0088)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CtrlRig_Standalone_Cutscene_Eyes_Lookat.RigVMMemory_Literal", true>();
	}
	static class CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal>();
	}
};
static_assert(alignof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal) == 0x000010, "Wrong alignment on CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal");
static_assert(sizeof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal) == 0x000BC0, "Wrong size on CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___LimitPosition_1_Set_Transform_2_Item__Const) == 0x000028, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___LimitPosition_1_Set_Transform_2_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___LimitPosition_1_Set_Transform_2_Space__Const) == 0x000034, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___LimitPosition_1_Set_Transform_2_Space__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___LimitPosition_1_Set_Transform_2_Value__Const) == 0x000040, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___LimitPosition_1_Set_Transform_2_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___LimitPosition_1_Tan_Value__Const) == 0x0000A0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___LimitPosition_1_Tan_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___LimitPosition_1_Subtract_B__Const) == 0x0000A8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___LimitPosition_1_Subtract_B__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___LimitPosition_1_Greater_B__Const) == 0x0000B0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___LimitPosition_1_Greater_B__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___LimitPosition_1_If_True__Const) == 0x0000B8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___LimitPosition_1_If_True__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___LimitPosition_1_If_False__Const) == 0x0000BC, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___LimitPosition_1_If_False__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___LimitPosition_1_Clamp_1_Minimum__Const) == 0x0000C0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___LimitPosition_1_Clamp_1_Minimum__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___LimitPosition_1_Clamp_1_Maximum__Const) == 0x0000C8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___LimitPosition_1_Clamp_1_Maximum__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___LimitPosition_1_Set_Transform_2_Weight__Const) == 0x0000D0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___LimitPosition_1_Set_Transform_2_Weight__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___LimitHeadPosition_Set_Transform_2_Item__Const) == 0x0000D8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___LimitHeadPosition_Set_Transform_2_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___LimitHeadPosition_Tan_Value__Const) == 0x0000E8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___LimitHeadPosition_Tan_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___LimitHeadPosition_Subtract_B__Const) == 0x0000F0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___LimitHeadPosition_Subtract_B__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___LimitHeadPosition_If_4_True__Const) == 0x0000F8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___LimitHeadPosition_If_4_True__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Item__Const) == 0x0000FC, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Space__Const) == 0x000108, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Space__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Value__Const) == 0x000110, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_Item__Const) == 0x000170, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Axis__Const) == 0x00017C, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Axis__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_Length__Const) == 0x000180, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_Length__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_Item__Const) == 0x000184, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___RigUnit_GetFloatAnimationChannel_Control__Const) == 0x000190, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___RigUnit_GetFloatAnimationChannel_Control__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___RigUnit_GetFloatAnimationChannel_Channel__Const) == 0x000198, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___RigUnit_GetFloatAnimationChannel_Channel__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___AimItem_1_2_Item__Const) == 0x0001A0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___AimItem_1_2_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___AimItem_1_2_Primary__Const) == 0x0001B0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___AimItem_1_2_Primary__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___AimItem_1_2_Secondary__Const) == 0x0001F8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___AimItem_1_2_Secondary__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___AimItem_1_2_DebugSettings__Const) == 0x000240, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___AimItem_1_2_DebugSettings__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_OffsetTransform__Const) == 0x0002B0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_OffsetTransform__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___AimItem_1_1_1_Item__Const) == 0x000310, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___AimItem_1_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___AimItem_1_1_1_Secondary__Const) == 0x000320, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___AimItem_1_1_1_Secondary__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_OffsetTransform__Const) == 0x000370, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_OffsetTransform__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___CalculateEyelidsOffset_1_Subtract_B__Const) == 0x0003D0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___CalculateEyelidsOffset_1_Subtract_B__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_SourceMinimum__Const) == 0x0003D8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_SourceMinimum__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_TargetMinimum__Const) == 0x0003E0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_TargetMinimum__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_TargetMaximum__Const) == 0x0003E8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_TargetMaximum__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_1_5_Item__Const) == 0x0003F0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_1_5_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___If_3_1_1_True__Const) == 0x000400, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___If_3_1_1_True__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___If_3_1_1_False__Const) == 0x000420, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___If_3_1_1_False__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___Scale_2_3_Value__Const) == 0x000440, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___Scale_2_3_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___Scale_2_Value__Const) == 0x000458, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___Scale_2_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_Item__Const) == 0x000470, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_OffsetTransform__Const) == 0x000480, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_OffsetTransform__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___If_3_1_True__Const) == 0x0004E0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___If_3_1_True__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___If_3_1_False__Const) == 0x000500, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___If_3_1_False__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___Scale_2_1_1_Value__Const) == 0x000520, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___Scale_2_1_1_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___Scale_2_1_Value__Const) == 0x000538, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___Scale_2_1_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_Item__Const) == 0x000550, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___If_3_True__Const) == 0x000560, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___If_3_True__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___If_3_False__Const) == 0x000580, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___If_3_False__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___Scale_2_2_3_Value__Const) == 0x0005A0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___Scale_2_2_3_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___Scale_2_2_Value__Const) == 0x0005B8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___Scale_2_2_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_Item__Const) == 0x0005D0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___If_3_1_2_False__Const) == 0x0005E0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___If_3_1_2_False__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___Scale_2_2_1_1_Value__Const) == 0x000600, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___Scale_2_2_1_1_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___Scale_2_2_1_Value__Const) == 0x000618, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___Scale_2_2_1_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_Item__Const) == 0x000630, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___If_3_1_1_1_False__Const) == 0x000640, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___If_3_1_1_1_False__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___Scale_2_3_1_Value__Const) == 0x000660, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___Scale_2_3_1_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___Scale_2_4_Value__Const) == 0x000678, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___Scale_2_4_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_Item__Const) == 0x000690, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___Scale_2_1_1_1_Value__Const) == 0x0006A0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___Scale_2_1_1_1_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___Scale_2_1_2_Value__Const) == 0x0006B8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___Scale_2_1_2_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_Item__Const) == 0x0006D0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_Item__Const) == 0x0006DC, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___If_3_1_1_1_1_2_False__Const) == 0x0006F0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___If_3_1_1_1_1_2_False__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___Scale_2_2_1_2_Value__Const) == 0x000710, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___Scale_2_2_1_2_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___RigUnit_GetFloatAnimationChannel_1_Control__Const) == 0x000728, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___RigUnit_GetFloatAnimationChannel_1_Control__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___RigUnit_GetFloatAnimationChannel_1_Channel__Const) == 0x000730, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___RigUnit_GetFloatAnimationChannel_1_Channel__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___AimItem_1_2_1_Item__Const) == 0x000738, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___AimItem_1_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___AimItem_1_2_1_Primary__Const) == 0x000748, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___AimItem_1_2_1_Primary__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_1_2_1_OffsetTransform__Const) == 0x000790, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_1_2_1_OffsetTransform__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_2_2_OffsetTransform__Const) == 0x0007F0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_2_2_OffsetTransform__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___AddEyesAdditiveIdle_Divide_1_B__Const) == 0x000850, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___AddEyesAdditiveIdle_Divide_1_B__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_Channel__Const) == 0x000858, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_Channel__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___AddEyesAdditiveIdle_If_True__Const) == 0x000860, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___AddEyesAdditiveIdle_If_True__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___AddEyesAdditiveIdle_Cast_Value__Const) == 0x000868, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___AddEyesAdditiveIdle_Cast_Value__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_Curve__Const) == 0x000880, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_Curve__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_1_Channel__Const) == 0x000908, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_1_Channel__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_1_Curve__Const) == 0x000910, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_1_Curve__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_Curve__Const) == 0x000998, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_Curve__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_1_Channel__Const) == 0x000A20, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_1_Channel__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_2_Curve__Const) == 0x000A28, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_2_Curve__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_1_2_Curve__Const) == 0x000AB0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_1_2_Curve__Const' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal, RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_2_Curve__Const) == 0x000B38, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Literal::RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_2_Curve__Const' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass CtrlRig_Standalone_Cutscene_Eyes_Lookat.RigVMMemory_Work
// 0x1658 (0x1680 - 0x0028)
class CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	struct FControlRigExecuteContext              ExecuteContext_;                                   // 0x0028(0x0038)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___LimitPosition_1_GetTransform_Transform; // 0x0060(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___LimitPosition_1_GetTransform_CachedIndex; // 0x00C0(0x0010)(Edit, EditConst, NonTransactional)
	double                                        RigVMModel___LimitPosition_1_Maximum_Maximum_1_Result; // 0x00D0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Maximum_Maximum_Result; // 0x00D8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Subtract_Result;      // 0x00E0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Multiply_Result;      // 0x00E8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Tan_Result;           // 0x00F0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Absolute_Result;      // 0x00F8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Absolute_Value;       // 0x0100(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Maximum_Maximum_B;    // 0x0108(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Subtract_1_Result;    // 0x0110(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Multiply_1_Result;    // 0x0118(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___LimitPosition_1_If_Result;            // 0x0120(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___LimitPosition_1_Greater_Result : 1;   // 0x0124(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___LimitPosition_1_Greater_A;            // 0x0128(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Multiply_1_A;         // 0x0130(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Absolute_1_Result;    // 0x0138(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitPosition_1_Clamp_1_Result;       // 0x0140(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_148[0x8];                                      // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___LimitPosition_1_Set_Transform_2_Value__IO; // 0x0150(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___LimitPosition_1_Set_Transform_2_CachedIndex; // 0x01B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___LimitHeadPosition_GetTransform_Transform; // 0x01C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___LimitHeadPosition_GetTransform_CachedIndex; // 0x0220(0x0010)(Edit, EditConst, NonTransactional)
	double                                        RigVMModel___LimitHeadPosition_Maximum_Maximum_1_Result; // 0x0230(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitHeadPosition_Maximum_Maximum_Result; // 0x0238(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitHeadPosition_Subtract_Result;    // 0x0240(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitHeadPosition_Multiply_Result;    // 0x0248(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitHeadPosition_Tan_Result;         // 0x0250(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitHeadPosition_Absolute_Result;    // 0x0258(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitHeadPosition_Absolute_Value;     // 0x0260(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitHeadPosition_Maximum_Maximum_B;  // 0x0268(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitHeadPosition_Subtract_1_Result;  // 0x0270(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitHeadPosition_Multiply_1_Result;  // 0x0278(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___LimitHeadPosition_If_4_Result;        // 0x0280(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___LimitHeadPosition_Greater_Result : 1; // 0x0284(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___LimitHeadPosition_Greater_A;          // 0x0288(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitHeadPosition_Multiply_1_A;       // 0x0290(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitHeadPosition_Absolute_1_Result;  // 0x0298(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LimitHeadPosition_Clamp_1_Result;     // 0x02A0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A8[0x8];                                      // 0x02A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___LimitHeadPosition_Set_Transform_2_Value__IO; // 0x02B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___LimitHeadPosition_Set_Transform_2_CachedIndex; // 0x0310(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_Result; // 0x0320(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_Transform; // 0x0340(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_CachedIndex; // 0x03A0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_A; // 0x03B0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_Result; // 0x03C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Result; // 0x03E0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F8[0x8];                                      // 0x03F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_Transform; // 0x0400(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_CachedIndex; // 0x0460(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Quaternion; // 0x0470(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Value__IO; // 0x0490(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_CachedIndex; // 0x04F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_1_Result; // 0x0500(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_1_Result; // 0x0518(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_Value__IO; // 0x0530(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_CachedIndex; // 0x0590(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___RigUnit_GetFloatAnimationChannel_Value; // 0x05A0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4[0x4];                                      // 0x05A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigElementKey>                 RigVMModel___RigUnit_GetFloatAnimationChannel_CachedChannelKey; // 0x05A8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___RigUnit_GetFloatAnimationChannel_CachedChannelHash; // 0x05B8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_5C8[0x8];                                      // 0x05C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_2_Transform;   // 0x05D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_2_CachedIndex; // 0x0630(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_2_Primary__IO;              // 0x0640(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         RigVMModel___AimItem_1_2_Weight;                   // 0x0688(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68C[0x4];                                      // 0x068C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_2_CachedItem;               // 0x0690(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_2_PrimaryCachedSpace;       // 0x06A0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_2_SecondaryCachedSpace;     // 0x06B0(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___OffsetTransformForItem_1_2_Weight;    // 0x06C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C4[0x4];                                      // 0x06C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_CachedIndex; // 0x06C8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_6D8[0x8];                                      // 0x06D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_1_Transform;   // 0x06E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_1_CachedIndex; // 0x0740(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_1_1_Primary__IO;            // 0x0750(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         RigVMModel___AimItem_1_1_1_Weight;                 // 0x0798(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79C[0x4];                                      // 0x079C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_1_CachedItem;             // 0x07A0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_1_PrimaryCachedSpace;     // 0x07B0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_1_SecondaryCachedSpace;   // 0x07C0(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___OffsetTransformForItem_1_2_1_Weight;  // 0x07D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D4[0x4];                                      // 0x07D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_1_CachedIndex; // 0x07D8(0x0010)(Edit, EditConst, NonTransactional)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Absolute_Result; // 0x07E8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_Result; // 0x07F0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Atan_Result; // 0x07F8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Divide_Result; // 0x0800(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Vector; // 0x0808(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Minimum; // 0x0820(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Maximum; // 0x0838(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_CachedControlIndex; // 0x0850(0x0010)(Edit, EditConst, NonTransactional)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Divide_A;    // 0x0860(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Subtract_Result; // 0x0868(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___CalculateEyelidsOffset_1_Subtract_A;  // 0x0870(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___CalculateEyelidsOffset_1_GreaterEqual_Result : 1; // 0x0878(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_879[0x7];                                      // 0x0879(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_1_Result;                      // 0x0880(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_3_1_1_Condition : 1;               // 0x08A0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_8A1[0x7];                                      // 0x08A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___If_Result;                            // 0x08A8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_Condition : 1;                     // 0x08C0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_8C1[0x7];                                      // 0x08C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_3_Result;                     // 0x08C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_3_Factor;                     // 0x08E0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E4[0x4];                                      // 0x08E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_Result;                       // 0x08E8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_Factor;                       // 0x0900(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_904[0xC];                                      // 0x0904(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_1_5_OffsetTransform__IO; // 0x0910(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___OffsetTransformForItem_1_2_1_1_5_Weight; // 0x0970(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_974[0x4];                                      // 0x0974(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_1_1_5_CachedIndex; // 0x0978(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_988[0x8];                                      // 0x0988(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_Result;                        // 0x0990(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_3_1_Condition : 1;                 // 0x09B0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_9B1[0x7];                                      // 0x09B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___If_1_Result;                          // 0x09B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_1_Condition : 1;                   // 0x09D0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_9D1[0x7];                                      // 0x09D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_1_1_Result;                   // 0x09D8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_1_1_Factor;                   // 0x09F0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F4[0x4];                                      // 0x09F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_1_Result;                     // 0x09F8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_1_Factor;                     // 0x0A10(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A14[0xC];                                      // 0x0A14(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_OffsetTransform__IO; // 0x0A20(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_Weight; // 0x0A80(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A84[0x4];                                      // 0x0A84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_CachedIndex; // 0x0A88(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_A98[0x8];                                      // 0x0A98(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_Result;                          // 0x0AA0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_3_Condition : 1;                   // 0x0AC0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_AC1[0x7];                                      // 0x0AC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___If_1_1_Result;                        // 0x0AC8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_1_1_Condition : 1;                 // 0x0AE0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_AE1[0x7];                                      // 0x0AE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_2_3_Result;                   // 0x0AE8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_2_3_Factor;                   // 0x0B00(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B04[0x4];                                      // 0x0B04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_2_Result;                     // 0x0B08(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_2_Factor;                     // 0x0B20(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B24[0xC];                                      // 0x0B24(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_OffsetTransform__IO; // 0x0B30(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_Weight; // 0x0B90(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B94[0x4];                                      // 0x0B94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_CachedIndex; // 0x0B98(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_BA8[0x8];                                      // 0x0BA8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_2_Result;                      // 0x0BB0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_3_1_2_Condition : 1;               // 0x0BD0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_BD1[0x7];                                      // 0x0BD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___If_1_1_1_Result;                      // 0x0BD8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_1_1_1_Condition : 1;               // 0x0BF0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_BF1[0x7];                                      // 0x0BF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_2_1_1_Result;                 // 0x0BF8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_2_1_1_Factor;                 // 0x0C10(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C14[0x4];                                      // 0x0C14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_2_1_Result;                   // 0x0C18(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_2_1_Factor;                   // 0x0C30(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C34[0xC];                                      // 0x0C34(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_OffsetTransform__IO; // 0x0C40(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_Weight; // 0x0CA0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA4[0x4];                                      // 0x0CA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_CachedIndex; // 0x0CA8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_CB8[0x8];                                      // 0x0CB8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_1_1_Result;                    // 0x0CC0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_3_1_1_1_Condition : 1;             // 0x0CE0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_CE1[0x7];                                      // 0x0CE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___If_2_Result;                          // 0x0CE8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_2_Condition : 1;                   // 0x0D00(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_D01[0x7];                                      // 0x0D01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_3_1_Result;                   // 0x0D08(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_3_1_Factor;                   // 0x0D20(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D24[0x4];                                      // 0x0D24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_4_Result;                     // 0x0D28(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_4_Factor;                     // 0x0D40(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D44[0xC];                                      // 0x0D44(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_OffsetTransform__IO; // 0x0D50(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_Weight; // 0x0DB0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB4[0x4];                                      // 0x0DB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_CachedIndex; // 0x0DB8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_DC8[0x8];                                      // 0x0DC8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_1_1_1_Result;                  // 0x0DD0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_3_1_1_1_1_Condition : 1;           // 0x0DF0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_DF1[0x7];                                      // 0x0DF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___If_1_2_Result;                        // 0x0DF8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_1_2_Condition : 1;                 // 0x0E10(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_E11[0x7];                                      // 0x0E11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_1_1_1_Result;                 // 0x0E18(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_1_1_1_Factor;                 // 0x0E30(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E34[0x4];                                      // 0x0E34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_1_2_Result;                   // 0x0E38(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_1_2_Factor;                   // 0x0E50(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E54[0xC];                                      // 0x0E54(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_OffsetTransform__IO; // 0x0E60(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_Weight; // 0x0EC0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC4[0x4];                                      // 0x0EC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_CachedIndex; // 0x0EC8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_ED8[0x8];                                      // 0x0ED8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_1_1_1_1_Result;                // 0x0EE0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_3_1_1_1_1_1_Condition : 1;         // 0x0F00(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_F01[0x7];                                      // 0x0F01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___If_1_1_2_Result;                      // 0x0F08(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_1_1_2_Condition : 1;               // 0x0F20(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_F21[0x7];                                      // 0x0F21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_2_3_1_Result;                 // 0x0F28(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_2_3_1_Factor;                 // 0x0F40(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F44[0x4];                                      // 0x0F44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_2_2_Result;                   // 0x0F48(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_2_2_Factor;                   // 0x0F60(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F64[0xC];                                      // 0x0F64(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_OffsetTransform__IO; // 0x0F70(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_Weight; // 0x0FD0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD4[0x4];                                      // 0x0FD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_CachedIndex; // 0x0FD8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_FE8[0x8];                                      // 0x0FE8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___If_3_1_1_1_1_2_Result;                // 0x0FF0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_3_1_1_1_1_2_Condition : 1;         // 0x1010(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_1011[0x7];                                     // 0x1011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___If_1_1_1_1_Result;                    // 0x1018(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___If_1_1_1_1_Condition : 1;             // 0x1030(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_1031[0x7];                                     // 0x1031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_2_1_1_1_Result;               // 0x1038(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_2_1_1_1_Factor;               // 0x1050(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1054[0x4];                                     // 0x1054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Scale_2_2_1_2_Result;                 // 0x1058(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___Scale_2_2_1_2_Factor;                 // 0x1070(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1074[0xC];                                     // 0x1074(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_OffsetTransform__IO; // 0x1080(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_Weight; // 0x10E0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10E4[0x4];                                     // 0x10E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_CachedIndex; // 0x10E8(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___RigUnit_GetFloatAnimationChannel_1_Value; // 0x10F8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10FC[0x4];                                     // 0x10FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigElementKey>                 RigVMModel___RigUnit_GetFloatAnimationChannel_1_CachedChannelKey; // 0x1100(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___RigUnit_GetFloatAnimationChannel_1_CachedChannelHash; // 0x1110(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_2_1_Transform; // 0x1120(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_2_1_CachedIndex; // 0x1180(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_2_1_Primary__IO;            // 0x1190(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         RigVMModel___AimItem_1_2_1_Weight;                 // 0x11D8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11DC[0x4];                                     // 0x11DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_2_1_CachedItem;             // 0x11E0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_2_1_PrimaryCachedSpace;     // 0x11F0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_2_1_SecondaryCachedSpace;   // 0x1200(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___OffsetTransformForItem_1_2_1_2_1_Weight; // 0x1210(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1214[0x4];                                     // 0x1214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_1_2_1_CachedIndex; // 0x1218(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_1228[0x8];                                     // 0x1228(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_2_2_Transform; // 0x1230(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_2_2_CachedIndex; // 0x1290(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_2_2_Primary__IO;            // 0x12A0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         RigVMModel___AimItem_1_2_2_Weight;                 // 0x12E8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12EC[0x4];                                     // 0x12EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_2_2_CachedItem;             // 0x12F0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_2_2_PrimaryCachedSpace;     // 0x1300(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_2_2_SecondaryCachedSpace;   // 0x1310(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___OffsetTransformForItem_1_2_2_Weight;  // 0x1320(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1324[0x4];                                     // 0x1324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_2_2_CachedIndex; // 0x1328(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___AddEyesAdditiveIdle_If_Result;        // 0x1338(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___AddEyesAdditiveIdle_Greater_Result : 1; // 0x133C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_133D[0x3];                                     // 0x133D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___AddEyesAdditiveIdle_Add_Result;       // 0x1340(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___AddEyesAdditiveIdle_Multiply_3_Result; // 0x1348(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___AddEyesAdditiveIdle_Divide_1_Result;  // 0x1350(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AddEyesAdditiveIdle_GetDeltaTime_1_Result; // 0x1358(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135C[0x4];                                     // 0x135C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___AddEyesAdditiveIdle_Divide_1_A;       // 0x1360(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_Value; // 0x1368(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_136C[0x4];                                     // 0x136C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigElementKey>                 RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_CachedChannelKey; // 0x1370(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_CachedChannelHash; // 0x1380(0x0010)(Edit, EditConst, NonTransactional)
	double                                        RigVMModel___AddEyesAdditiveIdle_Multiply_3_B;     // 0x1390(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AddEyesAdditiveIdle_If_False;         // 0x1398(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139C[0x4];                                     // 0x139C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___AddEyesAdditiveIdle_Cast_Result;      // 0x13A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_Result; // 0x13C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_Value; // 0x13C4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_1_Value; // 0x13C8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13CC[0x4];                                     // 0x13CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigElementKey>                 RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_1_CachedChannelKey; // 0x13D0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_1_CachedChannelHash; // 0x13E0(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_1_Result; // 0x13F0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_1_Value; // 0x13F4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_Value; // 0x13F8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13FC[0x4];                                     // 0x13FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigElementKey>                 RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_CachedChannelKey; // 0x1400(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_CachedChannelHash; // 0x1410(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_Result; // 0x1420(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_Value; // 0x1424(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_Value; // 0x1428(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142C[0x4];                                     // 0x142C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigElementKey>                 RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_CachedChannelKey; // 0x1430(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_CachedChannelHash; // 0x1440(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___AddEyesAdditiveIdle_Cast_Value__IO;   // 0x1450(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_1468[0x8];                                     // 0x1468(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___AddEyesAdditiveIdle_RigUnit_OffsetTransformForItem_1_OffsetTransform__IO; // 0x1470(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_1_Value; // 0x14D0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D4[0x4];                                     // 0x14D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigElementKey>                 RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_1_CachedChannelKey; // 0x14D8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_1_CachedChannelHash; // 0x14E8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AddEyesAdditiveIdle_RigUnit_OffsetTransformForItem_1_CachedIndex; // 0x14F8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_1508[0x8];                                     // 0x1508(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___AddEyesAdditiveIdle_Cast_1_Result;    // 0x1510(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_2_Result; // 0x1530(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_2_Value; // 0x1534(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_2_Value; // 0x1538(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_153C[0x4];                                     // 0x153C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigElementKey>                 RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_2_CachedChannelKey; // 0x1540(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_2_CachedChannelHash; // 0x1550(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_1_2_Result; // 0x1560(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_1_2_Value; // 0x1564(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_3_Value; // 0x1568(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_156C[0x4];                                     // 0x156C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigElementKey>                 RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_3_CachedChannelKey; // 0x1570(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_3_CachedChannelHash; // 0x1580(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_2_Result; // 0x1590(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_2_Value; // 0x1594(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_1_Value; // 0x1598(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159C[0x4];                                     // 0x159C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigElementKey>                 RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_1_CachedChannelKey; // 0x15A0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_1_CachedChannelHash; // 0x15B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRotator                               RigVMModel___AddEyesAdditiveIdle_Cast_1_Value__IO; // 0x15C0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	uint8                                         Pad_15D8[0x8];                                     // 0x15D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___AddEyesAdditiveIdle_RigUnit_OffsetTransformForItem_OffsetTransform__IO; // 0x15E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_Value; // 0x1640(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1644[0x4];                                     // 0x1644(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigElementKey>                 RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_CachedChannelKey; // 0x1648(0x0010)(Edit, EditConst, NonTransactional)
	TArray<int32>                                 RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_CachedChannelHash; // 0x1658(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AddEyesAdditiveIdle_RigUnit_OffsetTransformForItem_CachedIndex; // 0x1668(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CtrlRig_Standalone_Cutscene_Eyes_Lookat.RigVMMemory_Work", true>();
	}
	static class CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work>();
	}
};
static_assert(alignof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work) == 0x000010, "Wrong alignment on CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work");
static_assert(sizeof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work) == 0x001680, "Wrong size on CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, ExecuteContext_) == 0x000028, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::ExecuteContext_' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitPosition_1_GetTransform_Transform) == 0x000060, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitPosition_1_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitPosition_1_GetTransform_CachedIndex) == 0x0000C0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitPosition_1_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitPosition_1_Maximum_Maximum_1_Result) == 0x0000D0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitPosition_1_Maximum_Maximum_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitPosition_1_Maximum_Maximum_Result) == 0x0000D8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitPosition_1_Maximum_Maximum_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitPosition_1_Subtract_Result) == 0x0000E0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitPosition_1_Subtract_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitPosition_1_Multiply_Result) == 0x0000E8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitPosition_1_Multiply_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitPosition_1_Tan_Result) == 0x0000F0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitPosition_1_Tan_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitPosition_1_Absolute_Result) == 0x0000F8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitPosition_1_Absolute_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitPosition_1_Absolute_Value) == 0x000100, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitPosition_1_Absolute_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitPosition_1_Maximum_Maximum_B) == 0x000108, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitPosition_1_Maximum_Maximum_B' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitPosition_1_Subtract_1_Result) == 0x000110, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitPosition_1_Subtract_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitPosition_1_Multiply_1_Result) == 0x000118, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitPosition_1_Multiply_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitPosition_1_If_Result) == 0x000120, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitPosition_1_If_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitPosition_1_Greater_A) == 0x000128, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitPosition_1_Greater_A' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitPosition_1_Multiply_1_A) == 0x000130, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitPosition_1_Multiply_1_A' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitPosition_1_Absolute_1_Result) == 0x000138, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitPosition_1_Absolute_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitPosition_1_Clamp_1_Result) == 0x000140, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitPosition_1_Clamp_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitPosition_1_Set_Transform_2_Value__IO) == 0x000150, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitPosition_1_Set_Transform_2_Value__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitPosition_1_Set_Transform_2_CachedIndex) == 0x0001B0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitPosition_1_Set_Transform_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitHeadPosition_GetTransform_Transform) == 0x0001C0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitHeadPosition_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitHeadPosition_GetTransform_CachedIndex) == 0x000220, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitHeadPosition_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitHeadPosition_Maximum_Maximum_1_Result) == 0x000230, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitHeadPosition_Maximum_Maximum_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitHeadPosition_Maximum_Maximum_Result) == 0x000238, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitHeadPosition_Maximum_Maximum_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitHeadPosition_Subtract_Result) == 0x000240, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitHeadPosition_Subtract_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitHeadPosition_Multiply_Result) == 0x000248, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitHeadPosition_Multiply_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitHeadPosition_Tan_Result) == 0x000250, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitHeadPosition_Tan_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitHeadPosition_Absolute_Result) == 0x000258, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitHeadPosition_Absolute_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitHeadPosition_Absolute_Value) == 0x000260, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitHeadPosition_Absolute_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitHeadPosition_Maximum_Maximum_B) == 0x000268, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitHeadPosition_Maximum_Maximum_B' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitHeadPosition_Subtract_1_Result) == 0x000270, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitHeadPosition_Subtract_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitHeadPosition_Multiply_1_Result) == 0x000278, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitHeadPosition_Multiply_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitHeadPosition_If_4_Result) == 0x000280, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitHeadPosition_If_4_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitHeadPosition_Greater_A) == 0x000288, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitHeadPosition_Greater_A' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitHeadPosition_Multiply_1_A) == 0x000290, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitHeadPosition_Multiply_1_A' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitHeadPosition_Absolute_1_Result) == 0x000298, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitHeadPosition_Absolute_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitHeadPosition_Clamp_1_Result) == 0x0002A0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitHeadPosition_Clamp_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitHeadPosition_Set_Transform_2_Value__IO) == 0x0002B0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitHeadPosition_Set_Transform_2_Value__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___LimitHeadPosition_Set_Transform_2_CachedIndex) == 0x000310, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___LimitHeadPosition_Set_Transform_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_Result) == 0x000320, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_Transform) == 0x000340, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_CachedIndex) == 0x0003A0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_A) == 0x0003B0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_A' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_Result) == 0x0003C8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Result) == 0x0003E0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_Transform) == 0x000400, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_Transform' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_CachedIndex) == 0x000460, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_GetTransform_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Quaternion) == 0x000470, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_MathQuaternionGetAxis_1_Quaternion' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Value__IO) == 0x000490, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_Value__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_CachedIndex) == 0x0004F0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_1_Result) == 0x000500, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_MathVectorAdd_2_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_1_Result) == 0x000518, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_MathVectorSetLength_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_Value__IO) == 0x000530, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_Value__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_CachedIndex) == 0x000590, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyesLocatorOffset_1_RigUnit_SetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___RigUnit_GetFloatAnimationChannel_Value) == 0x0005A0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___RigUnit_GetFloatAnimationChannel_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___RigUnit_GetFloatAnimationChannel_CachedChannelKey) == 0x0005A8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___RigUnit_GetFloatAnimationChannel_CachedChannelKey' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___RigUnit_GetFloatAnimationChannel_CachedChannelHash) == 0x0005B8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___RigUnit_GetFloatAnimationChannel_CachedChannelHash' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_Transform) == 0x0005D0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_Transform' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_CachedIndex) == 0x000630, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AimItem_1_2_Primary__IO) == 0x000640, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AimItem_1_2_Primary__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AimItem_1_2_Weight) == 0x000688, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AimItem_1_2_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AimItem_1_2_CachedItem) == 0x000690, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AimItem_1_2_CachedItem' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AimItem_1_2_PrimaryCachedSpace) == 0x0006A0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AimItem_1_2_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AimItem_1_2_SecondaryCachedSpace) == 0x0006B0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AimItem_1_2_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_Weight) == 0x0006C0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_CachedIndex) == 0x0006C8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_Transform) == 0x0006E0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_Transform' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_1_CachedIndex) == 0x000740, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_Primary__IO) == 0x000750, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_Weight) == 0x000798, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_CachedItem) == 0x0007A0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_CachedItem' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_PrimaryCachedSpace) == 0x0007B0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_SecondaryCachedSpace) == 0x0007C0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_Weight) == 0x0007D0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_CachedIndex) == 0x0007D8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_Absolute_Result) == 0x0007E8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_Absolute_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_Result) == 0x0007F0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_Remap_2_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_Atan_Result) == 0x0007F8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_Atan_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_Divide_Result) == 0x000800, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_Divide_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Vector) == 0x000808, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Vector' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Minimum) == 0x000820, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Minimum' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Maximum) == 0x000838, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_Maximum' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_CachedControlIndex) == 0x000850, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_RigUnit_GetControlVector_2_CachedControlIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_Divide_A) == 0x000860, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_Divide_A' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_Subtract_Result) == 0x000868, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_Subtract_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___CalculateEyelidsOffset_1_Subtract_A) == 0x000870, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___CalculateEyelidsOffset_1_Subtract_A' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___If_3_1_1_Result) == 0x000880, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___If_3_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___If_Result) == 0x0008A8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___If_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_3_Result) == 0x0008C8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_3_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_3_Factor) == 0x0008E0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_3_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_Result) == 0x0008E8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_Factor) == 0x000900, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_5_OffsetTransform__IO) == 0x000910, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_5_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_5_Weight) == 0x000970, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_5_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_5_CachedIndex) == 0x000978, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_5_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___If_3_1_Result) == 0x000990, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___If_3_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___If_1_Result) == 0x0009B8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___If_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_1_1_Result) == 0x0009D8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_1_1_Factor) == 0x0009F0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_1_1_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_1_Result) == 0x0009F8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_1_Factor) == 0x000A10, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_1_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_OffsetTransform__IO) == 0x000A20, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_Weight) == 0x000A80, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_CachedIndex) == 0x000A88, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___If_3_Result) == 0x000AA0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___If_3_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___If_1_1_Result) == 0x000AC8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___If_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_2_3_Result) == 0x000AE8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_2_3_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_2_3_Factor) == 0x000B00, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_2_3_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_2_Result) == 0x000B08, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_2_Factor) == 0x000B20, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_2_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_OffsetTransform__IO) == 0x000B30, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_Weight) == 0x000B90, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_CachedIndex) == 0x000B98, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___If_3_1_2_Result) == 0x000BB0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___If_3_1_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___If_1_1_1_Result) == 0x000BD8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___If_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_2_1_1_Result) == 0x000BF8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_2_1_1_Factor) == 0x000C10, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_2_1_1_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_2_1_Result) == 0x000C18, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_2_1_Factor) == 0x000C30, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_2_1_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_OffsetTransform__IO) == 0x000C40, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_Weight) == 0x000CA0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_CachedIndex) == 0x000CA8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___If_3_1_1_1_Result) == 0x000CC0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___If_3_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___If_2_Result) == 0x000CE8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___If_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_3_1_Result) == 0x000D08, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_3_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_3_1_Factor) == 0x000D20, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_3_1_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_4_Result) == 0x000D28, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_4_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_4_Factor) == 0x000D40, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_4_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_OffsetTransform__IO) == 0x000D50, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_Weight) == 0x000DB0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_CachedIndex) == 0x000DB8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_5_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___If_3_1_1_1_1_Result) == 0x000DD0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___If_3_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___If_1_2_Result) == 0x000DF8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___If_1_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_1_1_1_Result) == 0x000E18, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_1_1_1_Factor) == 0x000E30, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_1_1_1_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_1_2_Result) == 0x000E38, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_1_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_1_2_Factor) == 0x000E50, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_1_2_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_OffsetTransform__IO) == 0x000E60, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_Weight) == 0x000EC0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_CachedIndex) == 0x000EC8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_3_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___If_3_1_1_1_1_1_Result) == 0x000EE0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___If_3_1_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___If_1_1_2_Result) == 0x000F08, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___If_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_2_3_1_Result) == 0x000F28, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_2_3_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_2_3_1_Factor) == 0x000F40, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_2_3_1_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_2_2_Result) == 0x000F48, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_2_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_2_2_Factor) == 0x000F60, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_2_2_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_OffsetTransform__IO) == 0x000F70, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_Weight) == 0x000FD0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_CachedIndex) == 0x000FD8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_3_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___If_3_1_1_1_1_2_Result) == 0x000FF0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___If_3_1_1_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___If_1_1_1_1_Result) == 0x001018, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___If_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_2_1_1_1_Result) == 0x001038, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_2_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_2_1_1_1_Factor) == 0x001050, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_2_1_1_1_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_2_1_2_Result) == 0x001058, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_2_1_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___Scale_2_2_1_2_Factor) == 0x001070, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___Scale_2_2_1_2_Factor' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_OffsetTransform__IO) == 0x001080, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_Weight) == 0x0010E0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_CachedIndex) == 0x0010E8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_1_1_2_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___RigUnit_GetFloatAnimationChannel_1_Value) == 0x0010F8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___RigUnit_GetFloatAnimationChannel_1_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___RigUnit_GetFloatAnimationChannel_1_CachedChannelKey) == 0x001100, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___RigUnit_GetFloatAnimationChannel_1_CachedChannelKey' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___RigUnit_GetFloatAnimationChannel_1_CachedChannelHash) == 0x001110, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___RigUnit_GetFloatAnimationChannel_1_CachedChannelHash' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_Transform) == 0x001120, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_Transform' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_1_CachedIndex) == 0x001180, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AimItem_1_2_1_Primary__IO) == 0x001190, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AimItem_1_2_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AimItem_1_2_1_Weight) == 0x0011D8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AimItem_1_2_1_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AimItem_1_2_1_CachedItem) == 0x0011E0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AimItem_1_2_1_CachedItem' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AimItem_1_2_1_PrimaryCachedSpace) == 0x0011F0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AimItem_1_2_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AimItem_1_2_1_SecondaryCachedSpace) == 0x001200, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AimItem_1_2_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_2_1_Weight) == 0x001210, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_2_1_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_1_2_1_CachedIndex) == 0x001218, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_1_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_2_Transform) == 0x001230, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_2_Transform' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_2_2_CachedIndex) == 0x001290, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AimItem_1_2_2_Primary__IO) == 0x0012A0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AimItem_1_2_2_Primary__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AimItem_1_2_2_Weight) == 0x0012E8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AimItem_1_2_2_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AimItem_1_2_2_CachedItem) == 0x0012F0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AimItem_1_2_2_CachedItem' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AimItem_1_2_2_PrimaryCachedSpace) == 0x001300, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AimItem_1_2_2_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AimItem_1_2_2_SecondaryCachedSpace) == 0x001310, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AimItem_1_2_2_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_2_Weight) == 0x001320, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_2_Weight' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_2_2_CachedIndex) == 0x001328, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_If_Result) == 0x001338, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_If_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_Add_Result) == 0x001340, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_Add_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_Multiply_3_Result) == 0x001348, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_Multiply_3_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_Divide_1_Result) == 0x001350, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_Divide_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_GetDeltaTime_1_Result) == 0x001358, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_GetDeltaTime_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_Divide_1_A) == 0x001360, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_Divide_1_A' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_Value) == 0x001368, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_CachedChannelKey) == 0x001370, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_CachedChannelKey' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_CachedChannelHash) == 0x001380, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_CachedChannelHash' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_Multiply_3_B) == 0x001390, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_Multiply_3_B' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_If_False) == 0x001398, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_If_False' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_Cast_Result) == 0x0013A0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_Cast_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_Result) == 0x0013C0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_Value) == 0x0013C4, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_1_Value) == 0x0013C8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_1_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_1_CachedChannelKey) == 0x0013D0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_1_CachedChannelKey' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_1_CachedChannelHash) == 0x0013E0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_1_CachedChannelHash' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_1_Result) == 0x0013F0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_1_Value) == 0x0013F4, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_1_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_Value) == 0x0013F8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_CachedChannelKey) == 0x001400, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_CachedChannelKey' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_CachedChannelHash) == 0x001410, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_CachedChannelHash' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_Result) == 0x001420, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_Value) == 0x001424, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_Value) == 0x001428, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_CachedChannelKey) == 0x001430, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_CachedChannelKey' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_CachedChannelHash) == 0x001440, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_CachedChannelHash' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_Cast_Value__IO) == 0x001450, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_Cast_Value__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_OffsetTransformForItem_1_OffsetTransform__IO) == 0x001470, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_OffsetTransformForItem_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_1_Value) == 0x0014D0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_1_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_1_CachedChannelKey) == 0x0014D8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_1_CachedChannelKey' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_1_CachedChannelHash) == 0x0014E8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_1_CachedChannelHash' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_OffsetTransformForItem_1_CachedIndex) == 0x0014F8, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_OffsetTransformForItem_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_Cast_1_Result) == 0x001510, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_Cast_1_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_2_Result) == 0x001530, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_2_Value) == 0x001534, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_2_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_2_Value) == 0x001538, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_2_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_2_CachedChannelKey) == 0x001540, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_2_CachedChannelKey' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_2_CachedChannelHash) == 0x001550, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_2_CachedChannelHash' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_1_2_Result) == 0x001560, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_1_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_1_2_Value) == 0x001564, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_1_1_2_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_3_Value) == 0x001568, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_3_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_3_CachedChannelKey) == 0x001570, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_3_CachedChannelKey' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_3_CachedChannelHash) == 0x001580, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_3_CachedChannelHash' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_2_Result) == 0x001590, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_2_Result' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_2_Value) == 0x001594, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_AnimEvalRichCurve_2_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_1_Value) == 0x001598, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_1_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_1_CachedChannelKey) == 0x0015A0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_1_CachedChannelKey' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_1_CachedChannelHash) == 0x0015B0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_1_1_2_1_CachedChannelHash' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_Cast_1_Value__IO) == 0x0015C0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_Cast_1_Value__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_OffsetTransformForItem_OffsetTransform__IO) == 0x0015E0, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_OffsetTransformForItem_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_Value) == 0x001640, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_Value' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_CachedChannelKey) == 0x001648, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_CachedChannelKey' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_CachedChannelHash) == 0x001658, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_GetFloatAnimationChannel_3_CachedChannelHash' has a wrong offset!");
static_assert(offsetof(CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work, RigVMModel___AddEyesAdditiveIdle_RigUnit_OffsetTransformForItem_CachedIndex) == 0x001668, "Member 'CtrlRig_Standalone_Cutscene_Eyes_Lookat::URigVMMemory_Work::RigVMModel___AddEyesAdditiveIdle_RigUnit_OffsetTransformForItem_CachedIndex' has a wrong offset!");

}

