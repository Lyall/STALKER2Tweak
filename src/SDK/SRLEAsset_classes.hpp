#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SRLEAsset

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class SRLEAsset.SRLEAsset
// 0x0068 (0x0090 - 0x0028)
class USRLEAsset final : public UObject
{
public:
	class UTexture2D*                             TextureIn;                                         // 0x0028(0x0008)(ZeroConstructor, Deprecated, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              InputTexture;                                      // 0x0030(0x0030)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CompressionBlockSize;                              // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoBlockSize;                                    // 0x0064(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DataSize;                                          // 0x0068(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         SizeX;                                             // 0x006C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         SizeY;                                             // 0x0070(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         BlockSize;                                         // 0x0074(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         BlocksCount;                                       // 0x0078(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7C[0x14];                                      // 0x007C(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SRLEAsset">();
	}
	static class USRLEAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USRLEAsset>();
	}
};
static_assert(alignof(USRLEAsset) == 0x000008, "Wrong alignment on USRLEAsset");
static_assert(sizeof(USRLEAsset) == 0x000090, "Wrong size on USRLEAsset");
static_assert(offsetof(USRLEAsset, TextureIn) == 0x000028, "Member 'USRLEAsset::TextureIn' has a wrong offset!");
static_assert(offsetof(USRLEAsset, InputTexture) == 0x000030, "Member 'USRLEAsset::InputTexture' has a wrong offset!");
static_assert(offsetof(USRLEAsset, CompressionBlockSize) == 0x000060, "Member 'USRLEAsset::CompressionBlockSize' has a wrong offset!");
static_assert(offsetof(USRLEAsset, bAutoBlockSize) == 0x000064, "Member 'USRLEAsset::bAutoBlockSize' has a wrong offset!");
static_assert(offsetof(USRLEAsset, DataSize) == 0x000068, "Member 'USRLEAsset::DataSize' has a wrong offset!");
static_assert(offsetof(USRLEAsset, SizeX) == 0x00006C, "Member 'USRLEAsset::SizeX' has a wrong offset!");
static_assert(offsetof(USRLEAsset, SizeY) == 0x000070, "Member 'USRLEAsset::SizeY' has a wrong offset!");
static_assert(offsetof(USRLEAsset, BlockSize) == 0x000074, "Member 'USRLEAsset::BlockSize' has a wrong offset!");
static_assert(offsetof(USRLEAsset, BlocksCount) == 0x000078, "Member 'USRLEAsset::BlocksCount' has a wrong offset!");

}

