#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_ru_glaunch1

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "AnimBP_ru_glaunch1_structs.hpp"
#include "Stalker2_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_ru_glaunch1.AnimBP_ru_glaunch1_C
// 0x0150 (0x0590 - 0x0440)
class UAnimBP_ru_glaunch1_C final : public UAnimInstancePlayerWeaponAttach
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0440(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct AnimBP_ru_glaunch1::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0448(0x0002)(HasGetValueTypeHash)
	uint8                                         Pad_44A[0x6];                                      // 0x044A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0450(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0458(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0460(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0480(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x04C8(0x0040)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x0508(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x0550(0x0040)()

public:
	void ExecuteUbergraph_AnimBP_ru_glaunch1(int32 EntryPoint);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_ru_glaunch1_C">();
	}
	static class UAnimBP_ru_glaunch1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_ru_glaunch1_C>();
	}
};
static_assert(alignof(UAnimBP_ru_glaunch1_C) == 0x000010, "Wrong alignment on UAnimBP_ru_glaunch1_C");
static_assert(sizeof(UAnimBP_ru_glaunch1_C) == 0x000590, "Wrong size on UAnimBP_ru_glaunch1_C");
static_assert(offsetof(UAnimBP_ru_glaunch1_C, UberGraphFrame) == 0x000440, "Member 'UAnimBP_ru_glaunch1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_ru_glaunch1_C, __AnimBlueprintMutables) == 0x000448, "Member 'UAnimBP_ru_glaunch1_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UAnimBP_ru_glaunch1_C, AnimBlueprintExtension_PropertyAccess) == 0x000450, "Member 'UAnimBP_ru_glaunch1_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAnimBP_ru_glaunch1_C, AnimBlueprintExtension_Base) == 0x000458, "Member 'UAnimBP_ru_glaunch1_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAnimBP_ru_glaunch1_C, AnimGraphNode_Root) == 0x000460, "Member 'UAnimBP_ru_glaunch1_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAnimBP_ru_glaunch1_C, AnimGraphNode_Slot) == 0x000480, "Member 'UAnimBP_ru_glaunch1_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UAnimBP_ru_glaunch1_C, AnimGraphNode_SequenceEvaluator_1) == 0x0004C8, "Member 'UAnimBP_ru_glaunch1_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_ru_glaunch1_C, AnimGraphNode_BlendListByEnum) == 0x000508, "Member 'UAnimBP_ru_glaunch1_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UAnimBP_ru_glaunch1_C, AnimGraphNode_SequenceEvaluator) == 0x000550, "Member 'UAnimBP_ru_glaunch1_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");

}

