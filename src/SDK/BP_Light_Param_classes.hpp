#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Light_Param

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_LightPresset_structs.hpp"
#include "BP_Light_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Light_Param.BP_Light_Param_C
// 0x0298 (0x0788 - 0x04F0)
class ABP_Light_Param_C : public ABP_Light_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Light_Param_C;                   // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      Insects;                                           // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    LightingPresetRadius;                              // 0x0500(0x0010)(Edit, BlueprintVisible, NoDestructor)
	struct FDataTableRowHandle                    LightingPresetColor;                               // 0x0510(0x0010)(Edit, BlueprintVisible, NoDestructor)
	TMap<class UStaticMeshComponent*, class UMaterialInterface*> GlowObjectsMaterialOrigin;                         // 0x0520(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class UStaticMeshComponent*, class UMaterialInstanceDynamic*> GlowObjectsMaterialNew;                            // 0x0570(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         AttenuationRadius;                                 // 0x05C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShadowBias;                                        // 0x05C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShadowSlopeBias;                                   // 0x05C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ContactShadowLength;                               // 0x05CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     LightFunctionMaterial;                             // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         InnerConeAngle;                                    // 0x05D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OuterConeAngle;                                    // 0x05DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InnerIntensityMultiplier;                          // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectorH;                                        // 0x05E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjctorV;                                         // 0x05EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UStaticMeshComponent*, class UMaterialInterface*> GlowObjectsMaterialTMP;                            // 0x05F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FS_LightPresset                        PresetValue;                                       // 0x0640(0x0090)(Edit, BlueprintVisible, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       LightBeamsDIM;                                     // 0x06D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UStaticMeshComponent*, class UMaterialInterface*> VFXglassOrigin;                                    // 0x06E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class UStaticMeshComponent*, class UMaterialInstanceDynamic*> VFXglassNew;                                       // 0x0730(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         VFXglassStencil_ID;                                // 0x0780(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Light_Param(int32 EntryPoint);
	void GlassEmissive(bool OnOff);
	void GlassEmissiveFlick(double LightIntensity);
	void OnConstruction_Child();
	void UpdateDecalInnerLightParameters(double Intensity_Decal, double ScaleDecalMinusZ, double OffsetDecalMinusZ, double Lenght, bool Fix_Rotate_Decal, bool Turn_OF_Decal, bool Use_location);
	void UpdateLightParameters(double AttenuationRadius_0, double ShadowBias_0, const double ShadowSlopeBias_0, double ContactShadowLength_0, class UMaterialInterface* LightFunctionMaterial_0, double InnerConeAngle_0, double OuterConeAngle_0, double InnerIntensityMultiplier_0, double Light_Falloff_Exponen);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Light_Param_C">();
	}
	static class ABP_Light_Param_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Light_Param_C>();
	}
};
static_assert(alignof(ABP_Light_Param_C) == 0x000008, "Wrong alignment on ABP_Light_Param_C");
static_assert(sizeof(ABP_Light_Param_C) == 0x000788, "Wrong size on ABP_Light_Param_C");
static_assert(offsetof(ABP_Light_Param_C, UberGraphFrame_BP_Light_Param_C) == 0x0004F0, "Member 'ABP_Light_Param_C::UberGraphFrame_BP_Light_Param_C' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, Insects) == 0x0004F8, "Member 'ABP_Light_Param_C::Insects' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, LightingPresetRadius) == 0x000500, "Member 'ABP_Light_Param_C::LightingPresetRadius' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, LightingPresetColor) == 0x000510, "Member 'ABP_Light_Param_C::LightingPresetColor' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, GlowObjectsMaterialOrigin) == 0x000520, "Member 'ABP_Light_Param_C::GlowObjectsMaterialOrigin' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, GlowObjectsMaterialNew) == 0x000570, "Member 'ABP_Light_Param_C::GlowObjectsMaterialNew' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, AttenuationRadius) == 0x0005C0, "Member 'ABP_Light_Param_C::AttenuationRadius' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, ShadowBias) == 0x0005C4, "Member 'ABP_Light_Param_C::ShadowBias' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, ShadowSlopeBias) == 0x0005C8, "Member 'ABP_Light_Param_C::ShadowSlopeBias' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, ContactShadowLength) == 0x0005CC, "Member 'ABP_Light_Param_C::ContactShadowLength' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, LightFunctionMaterial) == 0x0005D0, "Member 'ABP_Light_Param_C::LightFunctionMaterial' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, InnerConeAngle) == 0x0005D8, "Member 'ABP_Light_Param_C::InnerConeAngle' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, OuterConeAngle) == 0x0005DC, "Member 'ABP_Light_Param_C::OuterConeAngle' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, InnerIntensityMultiplier) == 0x0005E0, "Member 'ABP_Light_Param_C::InnerIntensityMultiplier' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, ProjectorH) == 0x0005E8, "Member 'ABP_Light_Param_C::ProjectorH' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, ProjctorV) == 0x0005EC, "Member 'ABP_Light_Param_C::ProjctorV' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, GlowObjectsMaterialTMP) == 0x0005F0, "Member 'ABP_Light_Param_C::GlowObjectsMaterialTMP' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, PresetValue) == 0x000640, "Member 'ABP_Light_Param_C::PresetValue' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, LightBeamsDIM) == 0x0006D0, "Member 'ABP_Light_Param_C::LightBeamsDIM' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, VFXglassOrigin) == 0x0006E0, "Member 'ABP_Light_Param_C::VFXglassOrigin' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, VFXglassNew) == 0x000730, "Member 'ABP_Light_Param_C::VFXglassNew' has a wrong offset!");
static_assert(offsetof(ABP_Light_Param_C, VFXglassStencil_ID) == 0x000780, "Member 'ABP_Light_Param_C::VFXglassStencil_ID' has a wrong offset!");

}

