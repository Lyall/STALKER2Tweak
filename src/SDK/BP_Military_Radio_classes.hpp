#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Military_Radio

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Stalker2_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Military_Radio.BP_Military_Radio_C
// 0x00A8 (0x0390 - 0x02E8)
class ABP_Military_Radio_C final : public AInteractableObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        ArrowLookAt;                                       // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USignalReceiverComponent*               ReceiverOn;                                        // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USignalSenderComponent*                 SenderFrequencySwitch;                             // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USignalReceiverComponent*               ReceiverOff;                                       // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Destruct_Radio;                                 // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageInteractableComponent*           DamageInteractable;                                // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHittableComponent*                     Hittable;                                          // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           InteractableRadioAk;                               // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Radio;                                             // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHoldComponent*                         HoldOff;                                           // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USingleClickComponent*                  SingleClick;                                       // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          SFX_TurnOn;                                        // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          SFX_TurnOff;                                       // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          SFX_Destruct;                                      // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          SFX_FrequencySwitch;                               // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Horror;                                            // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          PlayList_TurnOn;                                   // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          PlayList_TurnOff;                                  // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               LightsMaterial;                                    // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        DelayDuration;                                     // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_Interactable_Radio_120_ReceiverOff_K2Node_ComponentBoundEvent_5_SignalReceiverComponentReceiveSignature__DelegateSignature(class UObject* DataObject);
	void BndEvt__BP_Military_Radio_DamageInteractable_K2Node_ComponentBoundEvent_1_OnDamageAccumulated__DelegateSignature(const struct FUID& LastDamageDealerUID, bool bProjectileFlownThroughObject);
	void BndEvt__BP_Military_Radio_HoldOff_K2Node_ComponentBoundEvent_7_InteractSignature__DelegateSignature();
	void BndEvt__BP_Military_Radio_ReceiverOn_K2Node_ComponentBoundEvent_6_SignalReceiverComponentReceiveSignature__DelegateSignature(class UObject* DataObject);
	void BndEvt__BP_Military_Radio_SingleClick_K2Node_ComponentBoundEvent_2_InteractSignature__DelegateSignature();
	void BndEvt__BP_Military_Radio_SingleClick_K2Node_ComponentBoundEvent_4_InteractSignature__DelegateSignature();
	void ExecuteUbergraph_BP_Military_Radio(int32 EntryPoint);
	void FInteractOff();
	void FInteractOn();
	void FSaveAfterInteract_E05_MQ01();
	void FSaveInteractOff_E05_MQ01();
	void FSaveInteractOn_E05_MQ01();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Military_Radio_C">();
	}
	static class ABP_Military_Radio_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Military_Radio_C>();
	}
};
static_assert(alignof(ABP_Military_Radio_C) == 0x000008, "Wrong alignment on ABP_Military_Radio_C");
static_assert(sizeof(ABP_Military_Radio_C) == 0x000390, "Wrong size on ABP_Military_Radio_C");
static_assert(offsetof(ABP_Military_Radio_C, UberGraphFrame) == 0x0002E8, "Member 'ABP_Military_Radio_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Military_Radio_C, ArrowLookAt) == 0x0002F0, "Member 'ABP_Military_Radio_C::ArrowLookAt' has a wrong offset!");
static_assert(offsetof(ABP_Military_Radio_C, ReceiverOn) == 0x0002F8, "Member 'ABP_Military_Radio_C::ReceiverOn' has a wrong offset!");
static_assert(offsetof(ABP_Military_Radio_C, SenderFrequencySwitch) == 0x000300, "Member 'ABP_Military_Radio_C::SenderFrequencySwitch' has a wrong offset!");
static_assert(offsetof(ABP_Military_Radio_C, ReceiverOff) == 0x000308, "Member 'ABP_Military_Radio_C::ReceiverOff' has a wrong offset!");
static_assert(offsetof(ABP_Military_Radio_C, NS_Destruct_Radio) == 0x000310, "Member 'ABP_Military_Radio_C::NS_Destruct_Radio' has a wrong offset!");
static_assert(offsetof(ABP_Military_Radio_C, DamageInteractable) == 0x000318, "Member 'ABP_Military_Radio_C::DamageInteractable' has a wrong offset!");
static_assert(offsetof(ABP_Military_Radio_C, Hittable) == 0x000320, "Member 'ABP_Military_Radio_C::Hittable' has a wrong offset!");
static_assert(offsetof(ABP_Military_Radio_C, InteractableRadioAk) == 0x000328, "Member 'ABP_Military_Radio_C::InteractableRadioAk' has a wrong offset!");
static_assert(offsetof(ABP_Military_Radio_C, Radio) == 0x000330, "Member 'ABP_Military_Radio_C::Radio' has a wrong offset!");
static_assert(offsetof(ABP_Military_Radio_C, HoldOff) == 0x000338, "Member 'ABP_Military_Radio_C::HoldOff' has a wrong offset!");
static_assert(offsetof(ABP_Military_Radio_C, SingleClick) == 0x000340, "Member 'ABP_Military_Radio_C::SingleClick' has a wrong offset!");
static_assert(offsetof(ABP_Military_Radio_C, SFX_TurnOn) == 0x000348, "Member 'ABP_Military_Radio_C::SFX_TurnOn' has a wrong offset!");
static_assert(offsetof(ABP_Military_Radio_C, SFX_TurnOff) == 0x000350, "Member 'ABP_Military_Radio_C::SFX_TurnOff' has a wrong offset!");
static_assert(offsetof(ABP_Military_Radio_C, SFX_Destruct) == 0x000358, "Member 'ABP_Military_Radio_C::SFX_Destruct' has a wrong offset!");
static_assert(offsetof(ABP_Military_Radio_C, SFX_FrequencySwitch) == 0x000360, "Member 'ABP_Military_Radio_C::SFX_FrequencySwitch' has a wrong offset!");
static_assert(offsetof(ABP_Military_Radio_C, Horror) == 0x000368, "Member 'ABP_Military_Radio_C::Horror' has a wrong offset!");
static_assert(offsetof(ABP_Military_Radio_C, PlayList_TurnOn) == 0x000370, "Member 'ABP_Military_Radio_C::PlayList_TurnOn' has a wrong offset!");
static_assert(offsetof(ABP_Military_Radio_C, PlayList_TurnOff) == 0x000378, "Member 'ABP_Military_Radio_C::PlayList_TurnOff' has a wrong offset!");
static_assert(offsetof(ABP_Military_Radio_C, LightsMaterial) == 0x000380, "Member 'ABP_Military_Radio_C::LightsMaterial' has a wrong offset!");
static_assert(offsetof(ABP_Military_Radio_C, DelayDuration) == 0x000388, "Member 'ABP_Military_Radio_C::DelayDuration' has a wrong offset!");

}

