#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_Fac

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AnimBP_Fac.AnimBP_Fac_C.ExecuteUbergraph_AnimBP_Fac
// 0x0004 (0x0004 - 0x0000)
struct AnimBP_Fac_C_ExecuteUbergraph_AnimBP_Fac final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_Fac_C_ExecuteUbergraph_AnimBP_Fac) == 0x000004, "Wrong alignment on AnimBP_Fac_C_ExecuteUbergraph_AnimBP_Fac");
static_assert(sizeof(AnimBP_Fac_C_ExecuteUbergraph_AnimBP_Fac) == 0x000004, "Wrong size on AnimBP_Fac_C_ExecuteUbergraph_AnimBP_Fac");
static_assert(offsetof(AnimBP_Fac_C_ExecuteUbergraph_AnimBP_Fac, EntryPoint) == 0x000000, "Member 'AnimBP_Fac_C_ExecuteUbergraph_AnimBP_Fac::EntryPoint' has a wrong offset!");

// Function AnimBP_Fac.AnimBP_Fac_C.CutsceneStartLookAt
// 0x0018 (0x0018 - 0x0000)
struct AnimBP_Fac_C_CutsceneStartLookAt final
{
public:
	class AObj*                                   LookAtCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LookAtActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   LookAtBone;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_Fac_C_CutsceneStartLookAt) == 0x000008, "Wrong alignment on AnimBP_Fac_C_CutsceneStartLookAt");
static_assert(sizeof(AnimBP_Fac_C_CutsceneStartLookAt) == 0x000018, "Wrong size on AnimBP_Fac_C_CutsceneStartLookAt");
static_assert(offsetof(AnimBP_Fac_C_CutsceneStartLookAt, LookAtCharacter) == 0x000000, "Member 'AnimBP_Fac_C_CutsceneStartLookAt::LookAtCharacter' has a wrong offset!");
static_assert(offsetof(AnimBP_Fac_C_CutsceneStartLookAt, LookAtActor) == 0x000008, "Member 'AnimBP_Fac_C_CutsceneStartLookAt::LookAtActor' has a wrong offset!");
static_assert(offsetof(AnimBP_Fac_C_CutsceneStartLookAt, LookAtBone) == 0x000010, "Member 'AnimBP_Fac_C_CutsceneStartLookAt::LookAtBone' has a wrong offset!");

// Function AnimBP_Fac.AnimBP_Fac_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AnimBP_Fac_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AnimBP_Fac_C_AnimGraph) == 0x000008, "Wrong alignment on AnimBP_Fac_C_AnimGraph");
static_assert(sizeof(AnimBP_Fac_C_AnimGraph) == 0x000010, "Wrong size on AnimBP_Fac_C_AnimGraph");
static_assert(offsetof(AnimBP_Fac_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AnimBP_Fac_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function AnimBP_Fac.AnimBP_Fac_C.CanPlayWoundedAnim
// 0x0005 (0x0005 - 0x0000)
struct AnimBP_Fac_C_CanPlayWoundedAnim final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_Fac_C_CanPlayWoundedAnim) == 0x000001, "Wrong alignment on AnimBP_Fac_C_CanPlayWoundedAnim");
static_assert(sizeof(AnimBP_Fac_C_CanPlayWoundedAnim) == 0x000005, "Wrong size on AnimBP_Fac_C_CanPlayWoundedAnim");
static_assert(offsetof(AnimBP_Fac_C_CanPlayWoundedAnim, ReturnValue) == 0x000000, "Member 'AnimBP_Fac_C_CanPlayWoundedAnim::ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Fac_C_CanPlayWoundedAnim, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'AnimBP_Fac_C_CanPlayWoundedAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Fac_C_CanPlayWoundedAnim, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'AnimBP_Fac_C_CanPlayWoundedAnim::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Fac_C_CanPlayWoundedAnim, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'AnimBP_Fac_C_CanPlayWoundedAnim::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Fac_C_CanPlayWoundedAnim, CallFunc_BooleanAND_ReturnValue_1) == 0x000004, "Member 'AnimBP_Fac_C_CanPlayWoundedAnim::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

}

