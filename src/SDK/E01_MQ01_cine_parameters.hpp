#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: E01_MQ01_cine

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function E01_MQ01_cine.E01_MQ01_cine (Director BP)_C.BP_AI_Human0_Event
// 0x0028 (0x0028 - 0x0000)
struct E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event final
{
public:
	class ABP_AI_Human_C*                         BP_AI_Human0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           SynchronizationPoint;                              // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               OverrideRotation;                                  // 0x0010(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event) == 0x000008, "Wrong alignment on E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event");
static_assert(sizeof(E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event) == 0x000028, "Wrong size on E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event, BP_AI_Human0) == 0x000000, "Member 'E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event::BP_AI_Human0' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event, SynchronizationPoint) == 0x000008, "Member 'E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event::SynchronizationPoint' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event, OverrideRotation) == 0x000010, "Member 'E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event::OverrideRotation' has a wrong offset!");

// Function E01_MQ01_cine.E01_MQ01_cine (Director BP)_C.BP_AI_Human0_Event_0
// 0x0028 (0x0028 - 0x0000)
struct E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event_0 final
{
public:
	class ABP_AI_Human_C*                         BP_AI_Human0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           SynchronizationPoint;                              // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               OverrideRotation;                                  // 0x0010(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event_0) == 0x000008, "Wrong alignment on E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event_0");
static_assert(sizeof(E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event_0) == 0x000028, "Wrong size on E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event_0");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event_0, BP_AI_Human0) == 0x000000, "Member 'E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event_0::BP_AI_Human0' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event_0, SynchronizationPoint) == 0x000008, "Member 'E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event_0::SynchronizationPoint' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event_0, OverrideRotation) == 0x000010, "Member 'E01_MQ01_cine__Director_BP__C_BP_AI_Human0_Event_0::OverrideRotation' has a wrong offset!");

// Function E01_MQ01_cine.E01_MQ01_cine (Director BP)_C.BP_AI_Human_Event
// 0x0028 (0x0028 - 0x0000)
struct E01_MQ01_cine__Director_BP__C_BP_AI_Human_Event final
{
public:
	class ABP_AI_Human_C*                         BP_AI_Human;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           SynchronizationPoint;                              // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               OverrideRotation;                                  // 0x0010(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(E01_MQ01_cine__Director_BP__C_BP_AI_Human_Event) == 0x000008, "Wrong alignment on E01_MQ01_cine__Director_BP__C_BP_AI_Human_Event");
static_assert(sizeof(E01_MQ01_cine__Director_BP__C_BP_AI_Human_Event) == 0x000028, "Wrong size on E01_MQ01_cine__Director_BP__C_BP_AI_Human_Event");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_BP_AI_Human_Event, BP_AI_Human) == 0x000000, "Member 'E01_MQ01_cine__Director_BP__C_BP_AI_Human_Event::BP_AI_Human' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_BP_AI_Human_Event, SynchronizationPoint) == 0x000008, "Member 'E01_MQ01_cine__Director_BP__C_BP_AI_Human_Event::SynchronizationPoint' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_BP_AI_Human_Event, OverrideRotation) == 0x000010, "Member 'E01_MQ01_cine__Director_BP__C_BP_AI_Human_Event::OverrideRotation' has a wrong offset!");

// Function E01_MQ01_cine.E01_MQ01_cine (Director BP)_C.BP_AI_Human_Event_0
// 0x0008 (0x0008 - 0x0000)
struct E01_MQ01_cine__Director_BP__C_BP_AI_Human_Event_0 final
{
public:
	class ABP_AI_Human_C*                         BP_AI_Human;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(E01_MQ01_cine__Director_BP__C_BP_AI_Human_Event_0) == 0x000008, "Wrong alignment on E01_MQ01_cine__Director_BP__C_BP_AI_Human_Event_0");
static_assert(sizeof(E01_MQ01_cine__Director_BP__C_BP_AI_Human_Event_0) == 0x000008, "Wrong size on E01_MQ01_cine__Director_BP__C_BP_AI_Human_Event_0");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_BP_AI_Human_Event_0, BP_AI_Human) == 0x000000, "Member 'E01_MQ01_cine__Director_BP__C_BP_AI_Human_Event_0::BP_AI_Human' has a wrong offset!");

// Function E01_MQ01_cine.E01_MQ01_cine (Director BP)_C.BP_Stalker2Character0_Event
// 0x0028 (0x0028 - 0x0000)
struct E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event final
{
public:
	class ABP_Stalker2Character_C*                BP_Stalker2Character0;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           SynchronizationPoint;                              // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               OverrideRotation;                                  // 0x0010(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event) == 0x000008, "Wrong alignment on E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event");
static_assert(sizeof(E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event) == 0x000028, "Wrong size on E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event, BP_Stalker2Character0) == 0x000000, "Member 'E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event::BP_Stalker2Character0' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event, SynchronizationPoint) == 0x000008, "Member 'E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event::SynchronizationPoint' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event, OverrideRotation) == 0x000010, "Member 'E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event::OverrideRotation' has a wrong offset!");

// Function E01_MQ01_cine.E01_MQ01_cine (Director BP)_C.BP_Stalker2Character0_Event_0
// 0x0008 (0x0008 - 0x0000)
struct E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_0 final
{
public:
	class ABP_Stalker2Character_C*                BP_Stalker2Character0;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_0) == 0x000008, "Wrong alignment on E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_0");
static_assert(sizeof(E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_0) == 0x000008, "Wrong size on E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_0");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_0, BP_Stalker2Character0) == 0x000000, "Member 'E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_0::BP_Stalker2Character0' has a wrong offset!");

// Function E01_MQ01_cine.E01_MQ01_cine (Director BP)_C.BP_Stalker2Character0_Event_1
// 0x0028 (0x0028 - 0x0000)
struct E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_1 final
{
public:
	class ABP_Stalker2Character_C*                BP_Stalker2Character0;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           SynchronizationPoint;                              // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               OverrideRotation;                                  // 0x0010(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_1) == 0x000008, "Wrong alignment on E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_1");
static_assert(sizeof(E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_1) == 0x000028, "Wrong size on E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_1");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_1, BP_Stalker2Character0) == 0x000000, "Member 'E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_1::BP_Stalker2Character0' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_1, SynchronizationPoint) == 0x000008, "Member 'E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_1::SynchronizationPoint' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_1, OverrideRotation) == 0x000010, "Member 'E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_1::OverrideRotation' has a wrong offset!");

// Function E01_MQ01_cine.E01_MQ01_cine (Director BP)_C.BP_Stalker2Character0_Event_2
// 0x0028 (0x0028 - 0x0000)
struct E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_2 final
{
public:
	class ABP_Stalker2Character_C*                BP_Stalker2Character0;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           SynchronizationPoint;                              // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               OverrideRotation;                                  // 0x0010(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_2) == 0x000008, "Wrong alignment on E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_2");
static_assert(sizeof(E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_2) == 0x000028, "Wrong size on E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_2");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_2, BP_Stalker2Character0) == 0x000000, "Member 'E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_2::BP_Stalker2Character0' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_2, SynchronizationPoint) == 0x000008, "Member 'E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_2::SynchronizationPoint' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_2, OverrideRotation) == 0x000010, "Member 'E01_MQ01_cine__Director_BP__C_BP_Stalker2Character0_Event_2::OverrideRotation' has a wrong offset!");

// Function E01_MQ01_cine.E01_MQ01_cine (Director BP)_C.ExecuteUbergraph_E01_MQ01_cine (Director BP)
// 0x0108 (0x0108 - 0x0000)
struct E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_ final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Stalker2Character_C*                K2Node_CustomEvent_BP_Stalker2Character0;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           K2Node_CustomEvent_SynchronizationPoint;           // 0x0010(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_OverrideRotation;               // 0x0018(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_Stalker2Character_C*                K2Node_CustomEvent_BP_Stalker2Character0_3;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           K2Node_CustomEvent_SynchronizationPoint_5;         // 0x0038(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_OverrideRotation_5;             // 0x0040(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_AI_Human_C*                         K2Node_CustomEvent_BP_AI_Human_1;                  // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           K2Node_CustomEvent_SynchronizationPoint_4;         // 0x0060(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_OverrideRotation_4;             // 0x0068(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_AI_Human_C*                         K2Node_CustomEvent_BP_AI_Human;                    // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_AI_Human_C*                         K2Node_CustomEvent_BP_AI_Human0_1;                 // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           K2Node_CustomEvent_SynchronizationPoint_3;         // 0x0090(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_OverrideRotation_3;             // 0x0098(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_AI_Human_C*                         K2Node_CustomEvent_BP_AI_Human0;                   // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           K2Node_CustomEvent_SynchronizationPoint_2;         // 0x00B8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_OverrideRotation_2;             // 0x00C0(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_Stalker2Character_C*                K2Node_CustomEvent_BP_Stalker2Character0_2;        // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Stalker2Character_C*                K2Node_CustomEvent_BP_Stalker2Character0_1;        // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           K2Node_CustomEvent_SynchronizationPoint_1;         // 0x00E8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_OverrideRotation_1;             // 0x00F0(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_) == 0x000008, "Wrong alignment on E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_");
static_assert(sizeof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_) == 0x000108, "Wrong size on E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, EntryPoint) == 0x000000, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::EntryPoint' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, K2Node_CustomEvent_BP_Stalker2Character0) == 0x000008, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::K2Node_CustomEvent_BP_Stalker2Character0' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, K2Node_CustomEvent_SynchronizationPoint) == 0x000010, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::K2Node_CustomEvent_SynchronizationPoint' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, K2Node_CustomEvent_OverrideRotation) == 0x000018, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::K2Node_CustomEvent_OverrideRotation' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, K2Node_CustomEvent_BP_Stalker2Character0_3) == 0x000030, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::K2Node_CustomEvent_BP_Stalker2Character0_3' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, K2Node_CustomEvent_SynchronizationPoint_5) == 0x000038, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::K2Node_CustomEvent_SynchronizationPoint_5' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, K2Node_CustomEvent_OverrideRotation_5) == 0x000040, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::K2Node_CustomEvent_OverrideRotation_5' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, K2Node_CustomEvent_BP_AI_Human_1) == 0x000058, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::K2Node_CustomEvent_BP_AI_Human_1' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, K2Node_CustomEvent_SynchronizationPoint_4) == 0x000060, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::K2Node_CustomEvent_SynchronizationPoint_4' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, K2Node_CustomEvent_OverrideRotation_4) == 0x000068, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::K2Node_CustomEvent_OverrideRotation_4' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, K2Node_CustomEvent_BP_AI_Human) == 0x000080, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::K2Node_CustomEvent_BP_AI_Human' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, K2Node_CustomEvent_BP_AI_Human0_1) == 0x000088, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::K2Node_CustomEvent_BP_AI_Human0_1' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, K2Node_CustomEvent_SynchronizationPoint_3) == 0x000090, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::K2Node_CustomEvent_SynchronizationPoint_3' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, K2Node_CustomEvent_OverrideRotation_3) == 0x000098, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::K2Node_CustomEvent_OverrideRotation_3' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, K2Node_CustomEvent_BP_AI_Human0) == 0x0000B0, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::K2Node_CustomEvent_BP_AI_Human0' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, K2Node_CustomEvent_SynchronizationPoint_2) == 0x0000B8, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::K2Node_CustomEvent_SynchronizationPoint_2' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, K2Node_CustomEvent_OverrideRotation_2) == 0x0000C0, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::K2Node_CustomEvent_OverrideRotation_2' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, K2Node_CustomEvent_BP_Stalker2Character0_2) == 0x0000D8, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::K2Node_CustomEvent_BP_Stalker2Character0_2' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, K2Node_CustomEvent_BP_Stalker2Character0_1) == 0x0000E0, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::K2Node_CustomEvent_BP_Stalker2Character0_1' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, K2Node_CustomEvent_SynchronizationPoint_1) == 0x0000E8, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::K2Node_CustomEvent_SynchronizationPoint_1' has a wrong offset!");
static_assert(offsetof(E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_, K2Node_CustomEvent_OverrideRotation_1) == 0x0000F0, "Member 'E01_MQ01_cine__Director_BP__C_ExecuteUbergraph_E01_MQ01_cine__Director_BP_::K2Node_CustomEvent_OverrideRotation_1' has a wrong offset!");

}

