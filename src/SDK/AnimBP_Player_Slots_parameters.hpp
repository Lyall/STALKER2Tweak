#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_Player_Slots

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AnimBP_Player_Slots.AnimBP_Player_Slots_C.AnimGraph
// 0x0060 (0x0060 - 0x0000)
struct AnimBP_Player_Slots_C_AnimGraph final
{
public:
	struct FPoseLink                              WeaponBase;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              WeaponAdditive;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Moving;                                            // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Look;                                              // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              UnderbarrelAdditive;                               // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimGraph_0;                                       // 0x0050(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AnimBP_Player_Slots_C_AnimGraph) == 0x000008, "Wrong alignment on AnimBP_Player_Slots_C_AnimGraph");
static_assert(sizeof(AnimBP_Player_Slots_C_AnimGraph) == 0x000060, "Wrong size on AnimBP_Player_Slots_C_AnimGraph");
static_assert(offsetof(AnimBP_Player_Slots_C_AnimGraph, WeaponBase) == 0x000000, "Member 'AnimBP_Player_Slots_C_AnimGraph::WeaponBase' has a wrong offset!");
static_assert(offsetof(AnimBP_Player_Slots_C_AnimGraph, WeaponAdditive) == 0x000010, "Member 'AnimBP_Player_Slots_C_AnimGraph::WeaponAdditive' has a wrong offset!");
static_assert(offsetof(AnimBP_Player_Slots_C_AnimGraph, Moving) == 0x000020, "Member 'AnimBP_Player_Slots_C_AnimGraph::Moving' has a wrong offset!");
static_assert(offsetof(AnimBP_Player_Slots_C_AnimGraph, Look) == 0x000030, "Member 'AnimBP_Player_Slots_C_AnimGraph::Look' has a wrong offset!");
static_assert(offsetof(AnimBP_Player_Slots_C_AnimGraph, UnderbarrelAdditive) == 0x000040, "Member 'AnimBP_Player_Slots_C_AnimGraph::UnderbarrelAdditive' has a wrong offset!");
static_assert(offsetof(AnimBP_Player_Slots_C_AnimGraph, AnimGraph_0) == 0x000050, "Member 'AnimBP_Player_Slots_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function AnimBP_Player_Slots.AnimBP_Player_Slots_C.ExecuteUbergraph_AnimBP_Player_Slots
// 0x0004 (0x0004 - 0x0000)
struct AnimBP_Player_Slots_C_ExecuteUbergraph_AnimBP_Player_Slots final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_Player_Slots_C_ExecuteUbergraph_AnimBP_Player_Slots) == 0x000004, "Wrong alignment on AnimBP_Player_Slots_C_ExecuteUbergraph_AnimBP_Player_Slots");
static_assert(sizeof(AnimBP_Player_Slots_C_ExecuteUbergraph_AnimBP_Player_Slots) == 0x000004, "Wrong size on AnimBP_Player_Slots_C_ExecuteUbergraph_AnimBP_Player_Slots");
static_assert(offsetof(AnimBP_Player_Slots_C_ExecuteUbergraph_AnimBP_Player_Slots, EntryPoint) == 0x000000, "Member 'AnimBP_Player_Slots_C_ExecuteUbergraph_AnimBP_Player_Slots::EntryPoint' has a wrong offset!");

}

