#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_pm_fp

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Stalker2_classes.hpp"
#include "AnimBP_pm_fp_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_pm_fp.AnimBP_pm_fp_C
// 0x0770 (0x0BE0 - 0x0470)
class UAnimBP_pm_fp_C final : public UAnimInstancePlayerFirearm
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0470(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct AnimBP_pm_fp::FAnimBlueprintGeneratedMutableData m_AnimBlueprintMutables;                           // 0x0478(0x0014)(HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0490(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0498(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x04A0(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_7;                 // 0x04C0(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_6;                 // 0x0500(0x0040)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0540(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x0588(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_5;                 // 0x05D0(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_4;                 // 0x0610(0x0040)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0650(0x00E0)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x0730(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_3;                 // 0x0778(0x0040)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x07B8(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_2;                 // 0x0800(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x0840(0x0040)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0880(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0988(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x09B0(0x0028)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x09D8(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x0A20(0x0040)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0A60(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0B40(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0B68(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0B90(0x0048)()

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_AnimBP_pm_fp(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_pm_fp_C">();
	}
	static class UAnimBP_pm_fp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_pm_fp_C>();
	}
};
static_assert(alignof(UAnimBP_pm_fp_C) == 0x000010, "Wrong alignment on UAnimBP_pm_fp_C");
static_assert(sizeof(UAnimBP_pm_fp_C) == 0x000BE0, "Wrong size on UAnimBP_pm_fp_C");
static_assert(offsetof(UAnimBP_pm_fp_C, UberGraphFrame) == 0x000470, "Member 'UAnimBP_pm_fp_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, m_AnimBlueprintMutables) == 0x000478, "Member 'UAnimBP_pm_fp_C::m_AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimBlueprintExtension_PropertyAccess) == 0x000490, "Member 'UAnimBP_pm_fp_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimBlueprintExtension_Base) == 0x000498, "Member 'UAnimBP_pm_fp_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_Root) == 0x0004A0, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_SequenceEvaluator_7) == 0x0004C0, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_SequenceEvaluator_7' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_SequenceEvaluator_6) == 0x000500, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_SequenceEvaluator_6' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_Slot_1) == 0x000540, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_BlendListByEnum_1) == 0x000588, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_SequenceEvaluator_5) == 0x0005D0, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_SequenceEvaluator_5' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_SequenceEvaluator_4) == 0x000610, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_SequenceEvaluator_4' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000650, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_BlendListByInt) == 0x000730, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_SequenceEvaluator_3) == 0x000778, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_SequenceEvaluator_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_BlendListByBool) == 0x0007B8, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_SequenceEvaluator_2) == 0x000800, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_SequenceEvaluator_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_SequenceEvaluator_1) == 0x000840, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_SaveCachedPose) == 0x000880, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_UseCachedPose_3) == 0x000988, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_UseCachedPose_2) == 0x0009B0, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_BlendListByEnum) == 0x0009D8, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_SequenceEvaluator) == 0x000A20, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_LayeredBoneBlend) == 0x000A60, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_UseCachedPose_1) == 0x000B40, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_UseCachedPose) == 0x000B68, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UAnimBP_pm_fp_C, AnimGraphNode_Slot) == 0x000B90, "Member 'UAnimBP_pm_fp_C::AnimGraphNode_Slot' has a wrong offset!");

}

