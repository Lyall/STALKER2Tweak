#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PDATutorialGrid

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Stalker2_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PDATutorialGrid.W_PDATutorialGrid_C
// 0x0098 (0x0570 - 0x04D8)
class UW_PDATutorialGrid_C final : public UCustomSimplifiedGrid
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Bottom;                                            // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Center_Center;                                     // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Center_Left1;                                      // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Center_Right;                                      // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_0;                                 // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemPlace;                                         // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Top;                                               // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              VisibleGridSize;                                   // 0x0518(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CellSize_0;                                        // 0x0528(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              BackgroundCenterVisibility;                        // 0x052C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52D[0x3];                                      // 0x052D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TextHeader;                                        // 0x0530(0x0018)(Edit, BlueprintVisible)
	ESlateVisibility                              MoneyVisibility;                                   // 0x0548(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                MoneyPadding;                                      // 0x054C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateColor                            MoneyColor;                                        // 0x055C(0x0014)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_W_PDATutorialGrid(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PDATutorialGrid_C">();
	}
	static class UW_PDATutorialGrid_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PDATutorialGrid_C>();
	}
};
static_assert(alignof(UW_PDATutorialGrid_C) == 0x000008, "Wrong alignment on UW_PDATutorialGrid_C");
static_assert(sizeof(UW_PDATutorialGrid_C) == 0x000570, "Wrong size on UW_PDATutorialGrid_C");
static_assert(offsetof(UW_PDATutorialGrid_C, UberGraphFrame) == 0x0004D8, "Member 'UW_PDATutorialGrid_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PDATutorialGrid_C, Bottom) == 0x0004E0, "Member 'UW_PDATutorialGrid_C::Bottom' has a wrong offset!");
static_assert(offsetof(UW_PDATutorialGrid_C, Center_Center) == 0x0004E8, "Member 'UW_PDATutorialGrid_C::Center_Center' has a wrong offset!");
static_assert(offsetof(UW_PDATutorialGrid_C, Center_Left1) == 0x0004F0, "Member 'UW_PDATutorialGrid_C::Center_Left1' has a wrong offset!");
static_assert(offsetof(UW_PDATutorialGrid_C, Center_Right) == 0x0004F8, "Member 'UW_PDATutorialGrid_C::Center_Right' has a wrong offset!");
static_assert(offsetof(UW_PDATutorialGrid_C, InvalidationBox_0) == 0x000500, "Member 'UW_PDATutorialGrid_C::InvalidationBox_0' has a wrong offset!");
static_assert(offsetof(UW_PDATutorialGrid_C, ItemPlace) == 0x000508, "Member 'UW_PDATutorialGrid_C::ItemPlace' has a wrong offset!");
static_assert(offsetof(UW_PDATutorialGrid_C, Top) == 0x000510, "Member 'UW_PDATutorialGrid_C::Top' has a wrong offset!");
static_assert(offsetof(UW_PDATutorialGrid_C, VisibleGridSize) == 0x000518, "Member 'UW_PDATutorialGrid_C::VisibleGridSize' has a wrong offset!");
static_assert(offsetof(UW_PDATutorialGrid_C, CellSize_0) == 0x000528, "Member 'UW_PDATutorialGrid_C::CellSize_0' has a wrong offset!");
static_assert(offsetof(UW_PDATutorialGrid_C, BackgroundCenterVisibility) == 0x00052C, "Member 'UW_PDATutorialGrid_C::BackgroundCenterVisibility' has a wrong offset!");
static_assert(offsetof(UW_PDATutorialGrid_C, TextHeader) == 0x000530, "Member 'UW_PDATutorialGrid_C::TextHeader' has a wrong offset!");
static_assert(offsetof(UW_PDATutorialGrid_C, MoneyVisibility) == 0x000548, "Member 'UW_PDATutorialGrid_C::MoneyVisibility' has a wrong offset!");
static_assert(offsetof(UW_PDATutorialGrid_C, MoneyPadding) == 0x00054C, "Member 'UW_PDATutorialGrid_C::MoneyPadding' has a wrong offset!");
static_assert(offsetof(UW_PDATutorialGrid_C, MoneyColor) == 0x00055C, "Member 'UW_PDATutorialGrid_C::MoneyColor' has a wrong offset!");

}

